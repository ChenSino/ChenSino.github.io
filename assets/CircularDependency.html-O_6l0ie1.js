import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e}from"./app-COSs6b7v.js";const t={},p=e(`<h2 id="_1、循环依赖的产生" tabindex="-1"><a class="header-anchor" href="#_1、循环依赖的产生"><span>1、循环依赖的产生</span></a></h2><blockquote><p>A依赖B,B也依赖于A</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">A</span> a<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setA</span><span class="token punctuation">(</span><span class="token class-name">A</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">A</span> <span class="token function">getA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">B</span> b<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setA</span><span class="token punctuation">(</span><span class="token class-name">B</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">=</span> b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">getB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、spring是如何解决的循环依赖问题" tabindex="-1"><a class="header-anchor" href="#_2、spring是如何解决的循环依赖问题"><span>2、Spring是如何解决的循环依赖问题</span></a></h2><h3 id="_2-1-bean的生命周期" tabindex="-1"><a class="header-anchor" href="#_2-1-bean的生命周期"><span>2.1 Bean的生命周期</span></a></h3><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221226111134.png" alt="Bean的生命周期"></p><h3 id="_2-2-依赖注入的过程" tabindex="-1"><a class="header-anchor" href="#_2-2-依赖注入的过程"><span>2.2 依赖注入的过程</span></a></h3><p>核心是利用了setter方法的注入方式解决的循环依赖，使用构造方法注入是无法解决依赖注入的问题。</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token list punctuation">1.</span> 通过反射调用A的无参构造方法，创建一个A对象；
<span class="token list punctuation">2.</span> 调用setter注入B,B b = factory.getBean(B.class)，此时会触发B的bean初始化，
    2.1 反射创建B对象
    2.2 调用B的setter方法，获取A对象，A a = factory.getBean(A.class)，
    2.3 发现A的bean（此时只是一个空对象，还未填充属性）已存在，把Aset到B对象中
    2.4 B对象接着执行后续的逻辑，BeanPostProcessor前置处理——&gt;初始化——&gt;BeanPostProcessor后置处理等
    2.5 处理玩以后返回B的bean给A
<span class="token list punctuation">3.</span> A拿到B的Bean后接着setter,然后继续执行后续逻辑，和上面B的过程一样
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),c=[p];function o(l,i){return s(),a("div",null,c)}const d=n(t,[["render",o],["__file","CircularDependency.html.vue"]]),k=JSON.parse('{"path":"/java/framework/spring/CircularDependency.html","title":"Spring循环依赖","lang":"zh-CN","frontmatter":{"title":"Spring循环依赖","date":"2022-12-23T00:00:00.000Z","author":"chensino","keys":null,"category":["Spring"],"description":"1、循环依赖的产生 A依赖B,B也依赖于A 2、Spring是如何解决的循环依赖问题 2.1 Bean的生命周期 Bean的生命周期 2.2 依赖注入的过程 核心是利用了setter方法的注入方式解决的循环依赖，使用构造方法注入是无法解决依赖注入的问题。","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/blog/java/framework/spring/CircularDependency.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"Spring循环依赖"}],["meta",{"property":"og:description","content":"1、循环依赖的产生 A依赖B,B也依赖于A 2、Spring是如何解决的循环依赖问题 2.1 Bean的生命周期 Bean的生命周期 2.2 依赖注入的过程 核心是利用了setter方法的注入方式解决的循环依赖，使用构造方法注入是无法解决依赖注入的问题。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221226111134.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"chensino"}],["meta",{"property":"article:published_time","content":"2022-12-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring循环依赖\\",\\"image\\":[\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221226111134.png\\"],\\"datePublished\\":\\"2022-12-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"chensino\\"}]}"]]},"headers":[{"level":2,"title":"1、循环依赖的产生","slug":"_1、循环依赖的产生","link":"#_1、循环依赖的产生","children":[]},{"level":2,"title":"2、Spring是如何解决的循环依赖问题","slug":"_2、spring是如何解决的循环依赖问题","link":"#_2、spring是如何解决的循环依赖问题","children":[{"level":3,"title":"2.1 Bean的生命周期","slug":"_2-1-bean的生命周期","link":"#_2-1-bean的生命周期","children":[]},{"level":3,"title":"2.2 依赖注入的过程","slug":"_2-2-依赖注入的过程","link":"#_2-2-依赖注入的过程","children":[]}]}],"git":{"createdTime":1671777061000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"chenxk@sonoscape.net","commits":3},{"name":"ChenSino","email":"462488588@qq.com","commits":1}]},"readingTime":{"minutes":1.07,"words":321},"filePathRelative":"java/framework/spring/CircularDependency.md","localizedDate":"2022年12月23日","excerpt":"<h2>1、循环依赖的产生</h2>\\n<blockquote>\\n<p>A依赖B,B也依赖于A</p>\\n</blockquote>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">A</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">A</span> a<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">setA</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">A</span> a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>a <span class=\\"token operator\\">=</span> a<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">A</span> <span class=\\"token function\\">getA</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>a<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">B</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">B</span> b<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">setA</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">B</span> b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>b <span class=\\"token operator\\">=</span> b<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">B</span> <span class=\\"token function\\">getB</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>b<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
