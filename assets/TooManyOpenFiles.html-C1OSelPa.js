import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as e,e as s}from"./app-eaM1OiHO.js";const t={},i=s(`<h2 id="linux服务器打开文件过多" tabindex="-1"><a class="header-anchor" href="#linux服务器打开文件过多"><span>Linux服务器打开文件过多</span></a></h2><h3 id="线上异常" tabindex="-1"><a class="header-anchor" href="#线上异常"><span>线上异常</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>java.io.IOException: Too many <span class="token function">open</span> files
        at sun.nio.ch.ServerSocketChannelImpl.accept0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
        at sun.nio.ch.ServerSocketChannelImpl.accept<span class="token punctuation">(</span>ServerSocketChannelImpl.java:422<span class="token punctuation">)</span>
        at sun.nio.ch.ServerSocketChannelImpl.accept<span class="token punctuation">(</span>ServerSocketChannelImpl.java:250<span class="token punctuation">)</span>
        at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept<span class="token punctuation">(</span>NioEndpoint.java:446<span class="token punctuation">)</span>
        at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept<span class="token punctuation">(</span>NioEndpoint.java:70<span class="token punctuation">)</span>
        at org.apache.tomcat.util.net.Acceptor.run<span class="token punctuation">(</span>Acceptor.java:95<span class="token punctuation">)</span>
        at java.lang.Thread.run<span class="token punctuation">(</span>Thread.java:748<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="问题原因分析" tabindex="-1"><a class="header-anchor" href="#问题原因分析"><span>问题原因分析</span></a></h3><p>Linux中每个进程、每个用户打开的文件数量是有限制的，查看数量限制可使用<code>ulimit</code>命令，常使用命令如下：</p><ul><li><code>ulimit -a</code>：查看系统资源设置</li><li><code>ulimit -n</code>：查看系统同一时间一个进程最多可打开的文件数量</li><li><code>lsof</code>：查看当前系统打开的所有文件</li><li><code>lsof | wc -l</code>： 统计系统已打开的文件数</li><li><code>lsof -p &lt;pid&gt;</code>：查看某个进程打开的文件</li><li><code>lsof -p &lt;pid&gt; | wc -l</code>：查看某个进程打开的文件数量</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># root @ sono-bom in /home/sono_bom/logs [18:16:44] </span>
$ <span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-a</span>
-t: cpu <span class="token function">time</span> <span class="token punctuation">(</span>seconds<span class="token punctuation">)</span>              unlimited
-f: <span class="token function">file</span> size <span class="token punctuation">(</span>blocks<span class="token punctuation">)</span>              unlimited
-d: data seg size <span class="token punctuation">(</span>kbytes<span class="token punctuation">)</span>          unlimited
-s: stack size <span class="token punctuation">(</span>kbytes<span class="token punctuation">)</span>             <span class="token number">8192</span>
-c: core <span class="token function">file</span> size <span class="token punctuation">(</span>blocks<span class="token punctuation">)</span>         <span class="token number">0</span>
-m: resident <span class="token builtin class-name">set</span> size <span class="token punctuation">(</span>kbytes<span class="token punctuation">)</span>      unlimited
-u: processes                       <span class="token number">127964</span>
-n: <span class="token function">file</span> descriptors                <span class="token number">65535</span>
-l: locked-in-memory size <span class="token punctuation">(</span>kbytes<span class="token punctuation">)</span>  <span class="token number">64</span>
-v: address space <span class="token punctuation">(</span>kbytes<span class="token punctuation">)</span>          unlimited
-x: <span class="token function">file</span> locks                      unlimited
-i: pending signals                 <span class="token number">127964</span>
-q: bytes <span class="token keyword">in</span> POSIX msg queues       <span class="token number">819200</span>
-e: max <span class="token function">nice</span>                        <span class="token number">0</span>
-r: max rt priority                 <span class="token number">0</span>
<span class="token parameter variable">-N</span> <span class="token number">15</span>:                              unlimited
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-n</span>
<span class="token number">65535</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>根据<code>ulimit -n</code>得知系统设置的最大打开文件为65535,然后通过<code>lsof|wc -l</code>发现，打开的文件已经超过65535,所以报错<code>Too many files open</code>是正常的。 接下来使用<code>jps -lv</code>查看报错的java服务进程id，再使用<code>lsof -p &lt;pid&gt;</code>查看打开的文件都有哪些，通过查看发现有一个文件ip2region.db被打开几万次，然后 到代码查找此文件名，定位到代码，发现一段代码打开文件后未调用close方法导致程序运行到一段时间就抛出Too many files open异常。</p><div class="hint-container caution"><p class="hint-container-title">注意</p><p><code>lsof</code>查看到的结果数和实际并不一致，以上描述不正确，定位Too many open files问题仍然可按照上述思路找到被打开多次的文件，然后根据文件名去定位问题。</p></div>`,10),o=[i];function c(l,p){return a(),e("div",null,o)}const d=n(t,[["render",c],["__file","TooManyOpenFiles.html.vue"]]),m=JSON.parse('{"path":"/java/other/locateproblem/TooManyOpenFiles.html","title":"TooManyOpenFiles","lang":"zh-CN","frontmatter":{"title":"TooManyOpenFiles","date":"2022-08-25T00:00:00.000Z","author":"chenkun\\n- 问题定位","description":"Linux服务器打开文件过多 线上异常 问题原因分析 Linux中每个进程、每个用户打开的文件数量是有限制的，查看数量限制可使用ulimit命令，常使用命令如下： ulimit -a：查看系统资源设置 ulimit -n：查看系统同一时间一个进程最多可打开的文件数量 lsof：查看当前系统打开的所有文件 lsof | wc -l： 统计系统已打开的文件...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/java/other/locateproblem/TooManyOpenFiles.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"TooManyOpenFiles"}],["meta",{"property":"og:description","content":"Linux服务器打开文件过多 线上异常 问题原因分析 Linux中每个进程、每个用户打开的文件数量是有限制的，查看数量限制可使用ulimit命令，常使用命令如下： ulimit -a：查看系统资源设置 ulimit -n：查看系统同一时间一个进程最多可打开的文件数量 lsof：查看当前系统打开的所有文件 lsof | wc -l： 统计系统已打开的文件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"chenkun\\n- 问题定位"}],["meta",{"property":"article:published_time","content":"2022-08-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TooManyOpenFiles\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"chenkun\\\\n- 问题定位\\"}]}"]]},"headers":[{"level":2,"title":"Linux服务器打开文件过多","slug":"linux服务器打开文件过多","link":"#linux服务器打开文件过多","children":[{"level":3,"title":"线上异常","slug":"线上异常","link":"#线上异常","children":[]},{"level":3,"title":"问题原因分析","slug":"问题原因分析","link":"#问题原因分析","children":[]}]}],"git":{"createdTime":1661423386000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"462488588@qq.com","commits":3}]},"readingTime":{"minutes":1.72,"words":516},"filePathRelative":"java/other/locateproblem/TooManyOpenFiles.md","localizedDate":"2022年8月25日","excerpt":"<h2>Linux服务器打开文件过多</h2>\\n<h3>线上异常</h3>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>java.io.IOException: Too many <span class=\\"token function\\">open</span> files\\n        at sun.nio.ch.ServerSocketChannelImpl.accept0<span class=\\"token punctuation\\">(</span>Native Method<span class=\\"token punctuation\\">)</span>\\n        at sun.nio.ch.ServerSocketChannelImpl.accept<span class=\\"token punctuation\\">(</span>ServerSocketChannelImpl.java:422<span class=\\"token punctuation\\">)</span>\\n        at sun.nio.ch.ServerSocketChannelImpl.accept<span class=\\"token punctuation\\">(</span>ServerSocketChannelImpl.java:250<span class=\\"token punctuation\\">)</span>\\n        at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept<span class=\\"token punctuation\\">(</span>NioEndpoint.java:446<span class=\\"token punctuation\\">)</span>\\n        at org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept<span class=\\"token punctuation\\">(</span>NioEndpoint.java:70<span class=\\"token punctuation\\">)</span>\\n        at org.apache.tomcat.util.net.Acceptor.run<span class=\\"token punctuation\\">(</span>Acceptor.java:95<span class=\\"token punctuation\\">)</span>\\n        at java.lang.Thread.run<span class=\\"token punctuation\\">(</span>Thread.java:748<span class=\\"token punctuation\\">)</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,m as data};
