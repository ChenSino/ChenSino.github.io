import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as n,e as a}from"./app-COSs6b7v.js";const o={},s=a(`<h3 id="一-问题" tabindex="-1"><a class="header-anchor" href="#一-问题"><span><strong>一，问题</strong></span></a></h3><p>​ 在git log中往往会发现在log中出现<code>Merge branch &#39;master of .....&#39;</code>这种合并节点，造成日志的污染</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220726115529360.png" alt="image-20220726115529360"></p><h3 id="二-产生的原因" tabindex="-1"><a class="header-anchor" href="#二-产生的原因"><span>二，产生的原因</span></a></h3><p>当多人合作开发一个项目时，本地仓库落后于远程仓库是一个非常正常的事情，可参考下图 <img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20190719174211701.png" alt="在这里插入图片描述"></p><p>具体情境如下：</p><p>我当前拉取的远端版本为 B，此时修改了代码，并在本地仓库 commit 一次，但并未 push 到远端仓库。 另一位开发者在 B 的基础上，同样 commit 了一次并 push 到远端仓库。那么这个时候，我再 push 自己的代码就会发生错误。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>To github.com:xxx/xxx.git
<span class="token operator">!</span> <span class="token punctuation">[</span>rejected<span class="token punctuation">]</span>        master -<span class="token operator">&gt;</span> master <span class="token punctuation">(</span>fetch first<span class="token punctuation">)</span>
error: failed to push some refs to <span class="token string">&#39;git@github.com:xxx/xxx.git&#39;</span>
hint: Updates were rejected because the remote contains work that you <span class="token keyword">do</span>
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: <span class="token punctuation">(</span>e.g., <span class="token string">&#39;git pull ...&#39;</span><span class="token punctuation">)</span> before pushing again.

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个时候我们会选择，先 pull（如果有冲突需要先解决冲突，再 push。push 成功，但是此时我们查看 log 就会发现除了我们自己提交的那条日志之外，会多出一条 “Merge branch ‘master’ of …”。</p><p>那么，为什么会出现这种现象呢？其实是与 Git 的工作原理有关，对 Git 比较了解的人应该会知道，无论是 pull、push 亦或是 merge 操作，其实背后都是有很多的不同的模式的。</p><p>在进行 pull 操作的同时，其实就是 <strong><code>fetch+merge</code></strong> 的一个过程。我们从 remote 分支中拉取新的更新，然后再合并到本地分支中去。</p><p>如果 <code>remote </code>分支超前于本地分支，<strong>并且本地分支没有任何 commit 的，直接从 remote 进行 pull 操作，默认会采用 fast-forward 模式</strong>，这种模式下，并 不会产生合并节点，也就是说不会产生多余的那条 log 信息。</p><p><strong>如果本地先commit后再去pull,那么此时，remote分支和本地分支会出现分叉，这个时候使用pull操作拉取更新时，就会进行分支合并，产生合并节点和log信息</strong>。（总之如果本地有commit记录，只要出现本地分支落后远程分支，那么无论本地文件与远程文件是否有冲突，pull代码都会产生merge节点,本地分支落后于远程分支是无法push代码的)</p><h3 id="三-解决方法" tabindex="-1"><a class="header-anchor" href="#三-解决方法"><span>三，解决方法</span></a></h3><p>方法一: 在执行<code>git pull</code>的时候加上<code>–rebase</code>参数。这参数的意思就是在合并代码之前，先执行变基操作，成功后在进行真正的merge操作。(如果有冲突需要手动解决)</p><p>方法二： 在你的<code>git bash</code>里执行<code>git config --global pull.rebase true</code>。这个配置就是告诉git在每次pull前先进行rebase操作。这种方法和方法1原理一样，只不过方法1是每次pull前都要手动操作。</p><p>方法三：修改任何代码之前，先pull代码到本地。</p>`,17),i=[s];function r(c,p){return t(),n("div",null,i)}const h=e(o,[["render",r],["__file","mergeBranch.html.vue"]]),m=JSON.parse(`{"path":"/other/git/mergeBranch.html","title":"git pull产生临时Merge branch的问题","lang":"zh-CN","frontmatter":{"title":"git pull产生临时Merge branch的问题","date":"2022-03-09T16:57:01.000Z","category":["git 操作"],"tag":["必会"],"description":"一，问题 ​ 在git log中往往会发现在log中出现Merge branch 'master of .....'这种合并节点，造成日志的污染 image-20220726115529360 二，产生的原因 当多人合作开发一个项目时，本地仓库落后于远程仓库是一个非常正常的事情，可参考下图 在这里插入图片描述 具体情境如下： 我当前拉取的远端版本为 B...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/blog/other/git/mergeBranch.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"git pull产生临时Merge branch的问题"}],["meta",{"property":"og:description","content":"一，问题 ​ 在git log中往往会发现在log中出现Merge branch 'master of .....'这种合并节点，造成日志的污染 image-20220726115529360 二，产生的原因 当多人合作开发一个项目时，本地仓库落后于远程仓库是一个非常正常的事情，可参考下图 在这里插入图片描述 具体情境如下： 我当前拉取的远端版本为 B..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220726115529360.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-01T13:56:59.000Z"}],["meta",{"property":"article:author","content":"ChenSino"}],["meta",{"property":"article:tag","content":"必会"}],["meta",{"property":"article:published_time","content":"2022-03-09T16:57:01.000Z"}],["meta",{"property":"article:modified_time","content":"2022-08-01T13:56:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git pull产生临时Merge branch的问题\\",\\"image\\":[\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220726115529360.png\\",\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20190719174211701.png\\"],\\"datePublished\\":\\"2022-03-09T16:57:01.000Z\\",\\"dateModified\\":\\"2022-08-01T13:56:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ChenSino\\",\\"url\\":\\"https://ChenSino.github.io\\"}]}"]]},"headers":[{"level":3,"title":"一，问题","slug":"一-问题","link":"#一-问题","children":[]},{"level":3,"title":"二，产生的原因","slug":"二-产生的原因","link":"#二-产生的原因","children":[]},{"level":3,"title":"三，解决方法","slug":"三-解决方法","link":"#三-解决方法","children":[]}],"git":{"createdTime":1659362219000,"updatedTime":1659362219000,"contributors":[{"name":"chenkun","email":"462488588@qq.com","commits":1}]},"readingTime":{"minutes":2.67,"words":802},"filePathRelative":"other/git/mergeBranch.md","localizedDate":"2022年3月9日","excerpt":"<h3><strong>一，问题</strong></h3>\\n<p>​\\t\\t\\t\\t在git log中往往会发现在log中出现<code>Merge branch 'master of .....'</code>这种合并节点，造成日志的污染</p>\\n<p><img src=\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220726115529360.png\\" alt=\\"image-20220726115529360\\"></p>\\n<h3>二，产生的原因</h3>\\n<p>当多人合作开发一个项目时，本地仓库落后于远程仓库是一个非常正常的事情，可参考下图\\n<img src=\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20190719174211701.png\\" alt=\\"在这里插入图片描述\\"></p>","autoDesc":true}`);export{h as comp,m as data};
