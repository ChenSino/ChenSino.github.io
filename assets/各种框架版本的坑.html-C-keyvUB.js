import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as e,e as i}from"./app-COSs6b7v.js";const o={},n=i('<h2 id="_1、spring系列" tabindex="-1"><a class="header-anchor" href="#_1、spring系列"><span>1、Spring系列</span></a></h2><h3 id="_1-1-坑1-spring-factories使用方式变更" tabindex="-1"><a class="header-anchor" href="#_1-1-坑1-spring-factories使用方式变更"><span>1.1 坑1 spring.factories使用方式变更</span></a></h3><p>2.7版本已经不推荐使用spring.factories,在3.0废弃了，以前的spring.factories改成<code>META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports</code>，同时在此文件中写入类全限定名字，多个类，每行一个，不用符号隔开</p><h3 id="_1-2-坑2-spring-security-oauth2已被新版本security弃用" tabindex="-1"><a class="header-anchor" href="#_1-2-坑2-spring-security-oauth2已被新版本security弃用"><span>1.2 坑2 Spring Security OAuth2已被新版本security弃用</span></a></h3><p>Spring Security OAuth2是为构建OAuth2系统提供安全支持的Spring Security子项目。在Spring Security OAuth2中，您可以使用Authorization Server来创建和管理授权服务器，同时也可以使用Resource Server来保护受保护的资源。然而，从Spring Security 5.3开始，Spring Security OAuth2已被弃用，取而代之的是Spring Authorization Server和Spring Security 5的核心Oauth2支持。</p><p>与Spring Security OAuth2相比，Spring Authorization Server是一个独立的模块，它提供了完整的授权服务器，无需其他模块或库的支持，可以轻松地与现有的Spring Security应用程序集成。此外，Spring Authorization Server不依赖于Spring Security的其他功能，它有自己独立的API和文档。</p><p>同时，Spring Authorization Server在实现OAuth2规范方面更加严格，对于OAuth2规范中的各项要求都有很好的支持，并且提供了更加灵活和易于扩展的配置方式。在使用Spring Authorization Server时，您需要将spring-security-oauth2依赖关系修改为spring-security-oauth2-authorization-server。</p><p>总之，如果您想在您的应用程序中实现OAuth2，并且正在使用Spring Security 5.3或更高版本，那么您应该使用Spring Authorization Server而不是Spring Security OAuth2。</p><h2 id="_2、oauth2-0" tabindex="-1"><a class="header-anchor" href="#_2、oauth2-0"><span>2、Oauth2.0</span></a></h2><h3 id="_2-1-移除password授权类型" tabindex="-1"><a class="header-anchor" href="#_2-1-移除password授权类型"><span>2.1 移除password授权类型</span></a></h3><p>oauth2.0的最新规范已经移除了grant_type类型为password的，并且在spring-authorization-server 明确标记password类型为废弃，强行使用会报grant_type不对。因为新版本Security使用的是spring-authorization-server，所以也意味着在新版本security无法使用password授权类型 z</p>',11),a=[n];function s(p,c){return t(),e("div",null,a)}const g=r(o,[["render",s],["__file","各种框架版本的坑.html.vue"]]),l=JSON.parse('{"path":"/java/other/locateproblem/%E5%90%84%E7%A7%8D%E6%A1%86%E6%9E%B6%E7%89%88%E6%9C%AC%E7%9A%84%E5%9D%91.html","title":"各种版本的坑","lang":"zh-CN","frontmatter":{"title":"各种版本的坑","date":"2023-05-09T00:00:00.000Z","isOriginal":true,"description":"1、Spring系列 1.1 坑1 spring.factories使用方式变更 2.7版本已经不推荐使用spring.factories,在3.0废弃了，以前的spring.factories改成META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.impor...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/blog/java/other/locateproblem/%E5%90%84%E7%A7%8D%E6%A1%86%E6%9E%B6%E7%89%88%E6%9C%AC%E7%9A%84%E5%9D%91.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"各种版本的坑"}],["meta",{"property":"og:description","content":"1、Spring系列 1.1 坑1 spring.factories使用方式变更 2.7版本已经不推荐使用spring.factories,在3.0废弃了，以前的spring.factories改成META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.impor..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"ChenSino"}],["meta",{"property":"article:published_time","content":"2023-05-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"各种版本的坑\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ChenSino\\",\\"url\\":\\"https://ChenSino.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、Spring系列","slug":"_1、spring系列","link":"#_1、spring系列","children":[{"level":3,"title":"1.1 坑1 spring.factories使用方式变更","slug":"_1-1-坑1-spring-factories使用方式变更","link":"#_1-1-坑1-spring-factories使用方式变更","children":[]},{"level":3,"title":"1.2 坑2 Spring Security OAuth2已被新版本security弃用","slug":"_1-2-坑2-spring-security-oauth2已被新版本security弃用","link":"#_1-2-坑2-spring-security-oauth2已被新版本security弃用","children":[]}]},{"level":2,"title":"2、Oauth2.0","slug":"_2、oauth2-0","link":"#_2、oauth2-0","children":[{"level":3,"title":"2.1 移除password授权类型","slug":"_2-1-移除password授权类型","link":"#_2-1-移除password授权类型","children":[]}]}],"git":{"createdTime":1683634730000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"462488588@qq.com","commits":2},{"name":"chenxk","email":"chenxk@sonoscape.net","commits":1}]},"readingTime":{"minutes":1.62,"words":487},"filePathRelative":"java/other/locateproblem/各种框架版本的坑.md","localizedDate":"2023年5月9日","excerpt":"<h2>1、Spring系列</h2>\\n<h3>1.1 坑1 spring.factories使用方式变更</h3>\\n<p>2.7版本已经不推荐使用spring.factories,在3.0废弃了，以前的spring.factories改成<code>META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports</code>，同时在此文件中写入类全限定名字，多个类，每行一个，不用符号隔开</p>\\n<h3>1.2 坑2 Spring Security OAuth2已被新版本security弃用</h3>","autoDesc":true}');export{g as comp,l as data};
