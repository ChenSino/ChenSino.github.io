import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.35183a18.js";const e={},p=t(`<h2 id="_1\u3001springaop" tabindex="-1"><a class="header-anchor" href="#_1\u3001springaop" aria-hidden="true">#</a> 1\u3001SpringAOP</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token blockquote punctuation">&gt;</span> SpringAOP\u7684\u672C\u8D28\u5C31\u662F\u52A8\u6001\u4EE3\u7406\uFF0C\u5E95\u5C42\u4F7F\u7528JDK\u52A8\u6001\u4EE3\u7406\u6216\u8005CGlib\u52A8\u6001\u4EE3\u7406\uFF0C\u901A\u8FC7\u4EE3\u7406\u6846\u67B6\u751F\u6210\u4EE3\u7406\u7C7B\uFF0C\u5B9E\u73B0\u5BF9\u76EE\u6807\u7C7B\u7684\u589E\u5F3A\uFF0CSpring\u4EE3\u7406\u662F\u65B9\u6CD5\u7EA7\u522B\u7684\u4EE3\u7406\uFF0C\u662F\u5BF9\u65B9\u6CD5\u589E\u5F3A\uFF0C
<span class="token blockquote punctuation">&gt;</span> 
<span class="token blockquote punctuation">&gt;</span> \u4EE3\u7406\u6709\u56DB\u4E2A\u8981\u7D20\uFF1A
<span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">1.</span> \u76EE\u6807\u7C7B 
<span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">2.</span> \u989D\u5916\u529F\u80FD\uFF08\u589E\u5F3A\uFF09
<span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">3.</span> \u5207\u5165\u70B9\uFF08\u88AB\u589E\u5F3A\u7684\u65B9\u6CD5\uFF09
<span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">4.</span> \u7EC4\u88C5\uFF08\u628A\u5207\u5165\u70B9\u548C\u989D\u5916\u529F\u80FD\u8FDB\u884C\u6574\u5408\uFF0C\u5C31\u662F\u786E\u8BA4\u54EA\u4E9B\u65B9\u6CD5\u9700\u8981\u589E\u5F3A\uFF09
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2\u3001springaop-\u975E\u6CE8\u89E3\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2\u3001springaop-\u975E\u6CE8\u89E3\u5B9E\u73B0" aria-hidden="true">#</a> 2\u3001SpringAOP - \u975E\u6CE8\u89E3\u5B9E\u73B0</h2><h3 id="_2-1-\u6F14\u793A1-\u6709\u63A5\u53E3\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-1-\u6F14\u793A1-\u6709\u63A5\u53E3\u5B9E\u73B0" aria-hidden="true">#</a> 2.1 \u6F14\u793A1\uFF08\u6709\u63A5\u53E3\u5B9E\u73B0\uFF09</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u63A5\u53E3</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span><span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5B9E\u73B0</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span><span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>



    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;UserServiceImpl{&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;name=&#39;&quot;</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;login: username &quot;</span> <span class="token operator">+</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u589E\u5F3A</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LogInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">MethodBeforeAdvice</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">before</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">,</span> <span class="token class-name">Object</span> target<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;before advice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6CE8\u610F\u6B64\u5904\u4E0D\u7528\u8C03\u7528 \u539F\u65B9\u6CD5\uFF0C\u539F\u65B9\u6CD5\u4F1A\u81EA\u884C\u8C03\u7528\uFF0C\u8C03\u7528\u4F1A\u5BFC\u81F4\u539F\u65B9\u6CD5\u91CD\u590D\u8C03\u7528</span>
        <span class="token comment">//  method.invoke(target,args);</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u6D4B\u8BD5</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;applicationContext.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">)</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;userService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.example.UserServiceImpl<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>\u5434\u5F66\u7956<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logInterceptor<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.example.LogInterceptor<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>config</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>pointcut</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">expression</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>execution(* *(..))<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>advisor</span> <span class="token attr-name">advice-ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logInterceptor<span class="token punctuation">&quot;</span></span> <span class="token attr-name">pointcut-ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>advisor</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>config</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--proxy-target-class\u9ED8\u8BA4\u4E3Afalse\uFF0C\u4EE3\u8868\u9ED8\u8BA4\u4F7F\u7528jdk\u52A8\u6001\u4EE3\u7406\uFF0Ctrue\u4EE3\u8868\u4F7F\u7528cglib\u4EE3\u7406--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span> <span class="token attr-name">proxy-target-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53proxy-target-class=&quot;false&quot;\uFF0C\u53EF\u4EE5\u770B\u5230\u4F7F\u7528\u7684\u662Fjdk\u52A8\u6001\u4EE3\u7406 <img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221221092013.png" alt="20221221092013" loading="lazy"></p><p>\u5F53proxy-target-class=&quot;true&quot;\uFF0C\u53EF\u4EE5\u770B\u5230\u4F7F\u7528\u7684\u662FCGlib\u52A8\u6001\u4EE3\u7406 <img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221221092114.png" alt="20221221092114" loading="lazy"></p><h3 id="_2-2-\u6F14\u793A2-\u65E0\u63A5\u53E3\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-2-\u6F14\u793A2-\u65E0\u63A5\u53E3\u5B9E\u73B0" aria-hidden="true">#</a> 2.2 \u6F14\u793A2\uFF08\u65E0\u63A5\u53E3\u5B9E\u73B0\uFF09</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u539F\u76EE\u6807\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>



    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;UserServiceImpl{&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;name=&#39;&quot;</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;login: username &quot;</span> <span class="token operator">+</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u589E\u5F3A\u7C7B\u4E0D\u53D8</span>


<span class="token comment">//\u6D4B\u8BD5\u7C7B</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;applicationContext.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">UserServiceImpl</span> userService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserServiceImpl</span><span class="token punctuation">)</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;userService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679Cproxy-target-class\u7684\u503C\u65E0\u8BBA\u662Ftrue\u8FD8\u662Ffalse,\u90FD\u4F7F\u7528\u7684\u662FCGlib\u4EE3\u7406\uFF0C\u5176\u5B9E\u4E5F\u597D\u7406\u89E3\uFF0C\u56E0\u4E3AJDK\u52A8\u6001\u4EE3\u7406\u53EA\u652F\u6301\u5E26\u63A5\u53E3\u5B9E\u73B0\u7684\u7C7B\u589E\u5F3A\uFF0C\u800CCGlib\u8FD8\u53EF\u4EE5\u589E\u5F3A \u666E\u901A\u7684\u7C7B\u3002</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221221092444.png" alt="20221221092444" loading="lazy"></p><h2 id="_3\u3001springaop\u6CE8\u89E3\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3\u3001springaop\u6CE8\u89E3\u5B9E\u73B0" aria-hidden="true">#</a> 3\u3001SpringAOP\u6CE8\u89E3\u5B9E\u73B0</h2><p>SpringAOP\u6CE8\u89E3\u5B9E\u73B0\u4E3B\u8981\u662F\u5F15\u5165\u4E86AspectJ\u5305\uFF0CAspectJ\u672C\u8EAB\u662F\u4E00\u4E2A\u5F3A\u5927\u7684\u4EE3\u7406\u6846\u67B6\uFF0C\u4F7F\u7528acj\u7F16\u8BD1\u5668\u5728\u7F16\u8BD1\u5668\u95F4\u751F\u6210\u4EE3\u7406\u7C7B\uFF0C\u662F\u4F7F\u7528asm\u5BF9\u5B57\u8282\u7801\u8FDB\u884C\u64CD\u4F5C\uFF0C\u4F7F\u7528SpringAOP\u7528 \u6CE8\u89E3\u5F00\u53D1\u65F6\uFF0C\u8981\u5F15\u5165AspectJ\u5305\uFF0C\u5176\u5B9ESpring\u4EC5\u4EC5\u662F\u60F3\u4F7F\u7528\u5B83\u7684\u6CE8\u89E3\u7C7B\u800C\u5DF2\uFF0C\u5E76\u6CA1\u6709\u771F\u6B63\u4F7F\u7528\u5B83\u7684\u4EE3\u7406\u529F\u80FD\uFF0CSpringAOP\u5E95\u5C42\u53EA\u7528\u4E86JDK\u52A8\u6001\u4EE3\u7406\u6216\u8005CGlib\u52A8\u6001\u4EE3\u7406\uFF0C \u8FD9\u4E00\u70B9\u5F88\u591A\u4EBA\u90FD\u4E0D\u77E5\u9053\u3002</p><p>\u6CE8\u89E3\u7684\u672C\u8D28\u548Cxml\u4E00\u6837\uFF0C\u4E0D\u8FC7\u662F\u628A\u89E3\u6790xml\u53D8\u6210\u89E3\u6790\u6CE8\u89E3\u800C\u5DF2\u3002</p><h2 id="_4\u3001-springaop\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_4\u3001-springaop\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 4\u3001 SpringAOP\u5B9E\u73B0\u539F\u7406</h2><h3 id="_4-1-springaop\u662F\u5982\u4F55\u4EA7\u751F\u4EE3\u7406\u7C7B\u7684" tabindex="-1"><a class="header-anchor" href="#_4-1-springaop\u662F\u5982\u4F55\u4EA7\u751F\u4EE3\u7406\u7C7B\u7684" aria-hidden="true">#</a> 4.1 SpringAOP\u662F\u5982\u4F55\u4EA7\u751F\u4EE3\u7406\u7C7B\u7684</h3><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223120124.png" alt="Bean\u7684\u751F\u547D\u5468\u671F" loading="lazy"></p><div class="custom-container danger"><p class="custom-container-title">\u7ED3\u8BBA</p><pre><code>SpringAOP\u5E95\u5C42\u5B9E\u73B0\u7684\u539F\u7406\u662F\u4F7F\u7528\u7684BeanPostProcessor\uFF0CBeanPostProcessor\u7684\u6838\u5FC3\u529F\u80FD\u5C31\u662F\u53EF\u4EE5\u5BF9\u4E00\u4E2Abean\u8FDB\u884C\u518D\u52A0\u5DE5\uFF0C\u53C2\u8003\u4E0A\u9762bean\u7684\u751F\u547D\u5468\u671F\u53EF\u77E5BeanPostProcessor\u6267\u884C\u5B9E\u9645\u662F\u5728bean\u521D\u59CB\u5316\u524D\u540E\uFF0C\u800CSpringAOP\u7684\u539F\u7406\u5C31\u662F\u5728BeanPostProcessor\u7684\u540E\u7F6E\u65B9\u6CD5\u4E2D\u5BF9bean\u8FDB\u884C\u4FEE\u6539\uFF0C\u540C\u65F6\u628A\u4FEE\u6539\u540E\u7684\u4EE3\u7406\u5BF9\u8C61\u66FF\u6362\u539F\u5BF9\u8C61\u3002
</code></pre></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>    \u5F53\u914D\u7F6E\u4E86AOP\u540E\uFF0Cspring\u5BB9\u5668\u4F1A\u81EA\u52A8\u914D\u7F6E\u4E00\u4E2A\u53EB\u505AAnnotationAwareAspectJAutoProxyCreator\u7684\u7C7B\uFF0C\u5B83\u4E5F\u662F\u4E00\u4E2ABeanPostProcessor\uFF0C\u6700\u7EC8\u4F1A\u8C03\u7528\u540E\u7F6E\u65B9\u6CD5
    @Override
	public Object postProcessAfterInitialization(@Nullable Object bean, String beanName) {
		if (bean != null) {
			Object cacheKey = getCacheKey(bean.getClass(), beanName);
			if (this.earlyProxyReferences.remove(cacheKey) != bean) {
				return wrapIfNecessary(bean, beanName, cacheKey);
			}
		}
		return bean;
	}


<span class="token code keyword">    protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey) {
		if (StringUtils.hasLength(beanName) &amp;&amp; this.targetSourcedBeans.contains(beanName)) {
			return bean;
		}
		if (Boolean.FALSE.equals(this.advisedBeans.get(cacheKey))) {
			return bean;
		}
		if (isInfrastructureClass(bean.getClass()) || shouldSkip(bean.getClass(), beanName)) {
			this.advisedBeans.put(cacheKey, Boolean.FALSE);
			return bean;
		}</span>

<span class="token code keyword">		// Create proxy if we have advice.
		Object[] specificInterceptors = getAdvicesAndAdvisorsForBean(bean.getClass(), beanName, null);
		if (specificInterceptors != DO_NOT_PROXY) {
			this.advisedBeans.put(cacheKey, Boolean.TRUE);
            //\u8FD4\u56DE\u4EE3\u7406\u5BF9\u8C61
			Object proxy = createProxy(
					bean.getClass(), beanName, specificInterceptors, new SingletonTargetSource(bean));
            //\u7528\u4EE3\u7406\u5BF9\u8C61\u66FF\u6362\u539F\u751F\u5BF9\u8C61
			this.proxyTypes.put(cacheKey, proxy.getClass());
			return proxy;
		}</span>

<span class="token code keyword">		this.advisedBeans.put(cacheKey, Boolean.FALSE);
		return bean;
	}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-\u6E90\u7801\u5C42\u9762\u67E5\u770Bspringaop\u662F\u4F7F\u7528jdk\u52A8\u6001\u4EE3\u7406\u8FD8\u662Fcglib" tabindex="-1"><a class="header-anchor" href="#_4-2-\u6E90\u7801\u5C42\u9762\u67E5\u770Bspringaop\u662F\u4F7F\u7528jdk\u52A8\u6001\u4EE3\u7406\u8FD8\u662Fcglib" aria-hidden="true">#</a> 4.2 \u6E90\u7801\u5C42\u9762\u67E5\u770BSpringAOP\u662F\u4F7F\u7528JDK\u52A8\u6001\u4EE3\u7406\u8FD8\u662FCGlib</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//org.springframework.aop.framework.DefaultAopProxyFactory#createAopProxy</span>
    <span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">AopProxy</span> <span class="token function">createAopProxy</span><span class="token punctuation">(</span><span class="token class-name">AdvisedSupport</span> config<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AopConfigException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">NativeDetector</span><span class="token punctuation">.</span><span class="token function">inNativeImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">isOptimize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> config<span class="token punctuation">.</span><span class="token function">isProxyTargetClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">hasNoUserSuppliedProxyInterfaces</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> targetClass <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">getTargetClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>targetClass <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AopConfigException</span><span class="token punctuation">(</span><span class="token string">&quot;TargetSource cannot determine target class: &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;Either an interface or a target is required for proxy creation.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>targetClass<span class="token punctuation">.</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">isProxyClass</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isLambdaClass</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JdkDynamicAopProxy</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ObjenesisCglibAopProxy</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JdkDynamicAopProxy</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-\u65F6\u5E8F\u56FE" tabindex="-1"><a class="header-anchor" href="#_4-3-\u65F6\u5E8F\u56FE" aria-hidden="true">#</a> 4.3 \u65F6\u5E8F\u56FE</h3>`,23),c=[p];function o(i,l){return s(),a("div",null,c)}var d=n(e,[["render",o],["__file","SpringAOP.html.vue"]]);export{d as default};
