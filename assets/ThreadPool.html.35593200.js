import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as o,b as n,a as c,e as s,d as a,r as l}from"./app.3dcaa209.js";const u={},i=s(`<p>\u7EBF\u7A0B\u6C60</p><p><strong>\u524D\u8A00\uFF1A</strong></p><blockquote><p>\u7EBF\u7A0B\u6C60\u4F7F\u7528submit\u63D0\u4EA4\u4EFB\u52A1\u82E5\u9047\u5230\u5F02\u5E38\uFF0C\u7EBF\u7A0B\u4E0D\u4F1A\u76F4\u63A5\u629B\u51FA\u5F02\u5E38\uFF0C\u5728\u5F00\u53D1\u4E2D\u8981\u6CE8\u610F\u5904\u7406\u5F02\u5E38\u60C5\u51B5</p></blockquote><h2 id="_1\u3001\u5148\u4E0A\u6D4B\u8BD5\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u5148\u4E0A\u6D4B\u8BD5\u4EE3\u7801" aria-hidden="true">#</a> 1\u3001\u5148\u4E0A\u6D4B\u8BD5\u4EE3\u7801</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        executorService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        executorService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u7ED3\u679C\uFF1A</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329145737001.png" alt="image-20220329145737001" loading="lazy"></p><p>\u6D4B\u8BD5\u53D1\u73B0\u5F02\u5E38\u5E76\u672A\u629B\u51FA\uFF0C\u5982\u679C\u4E0D\u77E5\u9053\u8FD9\u4E2A\u77E5\u8BC6\u70B9\u7EBF\u4E0A\u9047\u5230\u95EE\u9898\u5C31\u4E0D\u597D\u6392\u67E5\uFF0C\u6211\u56E0\u4E3A\u5728\u6D4B\u8BD5\u73AF\u5883\u4F7F\u7528<code>executorService.submit</code>,submit\u65B9\u6CD5\u63D0\u4EA4\u540E\u5C31\u6CA1\u7BA1\u4E86\uFF0C\u7ED3\u679C\u5728submit\u6709\u5F02\u5E38\uFF0C\u4E00\u76F4\u6CA1\u5F80\u8FD9\u91CC\u60F3\uFF0C\u641E\u4E86\u4FE9\u5C0F\u65F6\u624D\u5B9A\u4F4D\u5230\u3002</p><h2 id="_2\u3001-\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_2\u3001-\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> 2\u3001 \u6E90\u7801\u89E3\u6790</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Submits a Runnable task for execution and returns a Future
     * representing that task. The Future&#39;s <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">get</span></span><span class="token punctuation">}</span> method will
     * return <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> upon <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>successful<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span> completion.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">task</span> the task to submit
     * <span class="token keyword">@return</span> a Future representing pending completion of the task
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">RejectedExecutionException</span></span> if the task cannot be
     *         scheduled for execution
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the task is null
     */</span>
    <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u91CA\u4E2D\u6709\u8BF4\u660E\uFF0C</p><ol><li><code>submit</code>\u65B9\u6CD5\u6267\u884C\u6210\u529F\u65F6\u5176\u8FD4\u56DE\u7684<code>Future.get()</code>\u5E94\u8BE5\u662F\u7A7A\uFF1B</li><li>\u5F53\u4F20\u5165\u7684task\u4E3A<code>null</code>\u4F1A\u76F4\u63A5\u5728\u4E3B\u8FDB\u7A0B\u629B\u51FA<code>NPE</code>\uFF0C\u5F02\u5E38\u540E\u8C03\u7528\u5B83\u7684\u8FDB\u7A0B\u540E\u7EED\u4EE3\u7801\u5C31\u4E0D\u4F1A\u6267\u884C\u4E86\uFF1B</li></ol><h3 id="_2-1-\u4FEE\u6539\u6D4B\u8BD5\u4EE3\u7801\u7EE7\u7EED\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_2-1-\u4FEE\u6539\u6D4B\u8BD5\u4EE3\u7801\u7EE7\u7EED\u6D4B\u8BD5" aria-hidden="true">#</a> 2.1 \u4FEE\u6539\u6D4B\u8BD5\u4EE3\u7801\u7EE7\u7EED\u6D4B\u8BD5</h3><p>\u4FEE\u6539\u4EE3\u7801\uFF0C\u5728\u540E\u9762\u8C03\u7528<code>Future.get()</code>\u770B\u770B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">ExecutionException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> future1 <span class="token operator">=</span> executorService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u6B63\u5E38\u7EBF\u7A0B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> future2 <span class="token operator">=</span> executorService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5F02\u5E38\u7EBF\u7A0B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        Runnable runnable = null;</span>
<span class="token comment">//        Future&lt;?&gt; future3 = executorService.submit(runnable);</span>

        <span class="token class-name">Object</span> o <span class="token operator">=</span> future1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Object</span> o1 <span class="token operator">=</span> future2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>o1<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329151313405.png" alt="image-20220329151313405" loading="lazy"></p><p>\u53EF\u4EE5\u770B\u5230\u7B2C\u4E00\u6B21\u6267\u884C\u6210\u529F\u7684\u4EFB\u52A1\u8FD4\u56DE\u5F97\u5230\u7684\u662F<code>null</code>\uFF0C\u7B2C\u4E8C\u6B21\u629B\u51FA\u4E86\u5F02\u5E38\uFF0C\u6240\u4EE5\u8C03\u7528<code>submit</code>\u662F\u8981\u6CE8\u610F\uFF0C\u6B64\u65B9\u6CD5\u662F\u5E26\u8FD4\u56DE\u503C\u7684\uFF0C\u548C<code>execute</code>\u6709\u533A\u522B\uFF0C<code>execute</code>\u662F\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</p><p>\u518D\u770B\u770B\u4E3A\u4EC0\u4E48\u8C03\u7528<code>java.util.concurrent.Future#get()</code>\u629B\u51FA\u5F02\u5E38\uFF0C\u5728\u4EE5\u4E0B\u6E90\u7801\u6CE8\u91CA\u5199\u7684\u5F88\u6E05\u695A\u4E86\uFF0C\u5F53\u4EFB\u52A1\u672C\u8EAB\u629B\u51FA\u5F02\u5E38\uFF0C\u5219\u8C03\u7528<code>get</code>\u4E5F\u4F1A\u629B\u51FA\u4E00\u4E2A<code>ExecutionException</code></p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329152103052.png" alt="image-20220329152103052" loading="lazy"></p><p>\u5982\u679C\u4EC5\u4EC5\u662F\u4E3A\u4E86\u80FD\u591F\u629B\u51FA\u5F02\u5E38\uFF0C\u76F4\u63A5\u4F7F\u7528<code>execute</code>\u5373\u53EF\uFF0C\u90A3\u4E48<code>submit</code>\u7684<code>Future</code>\u6709\u4EC0\u4E48\u4F5C\u7528\u5462\uFF1F</p><blockquote><p>\u6709\u65F6\u6211\u4EEC\u6267\u884C\u591A\u7EBF\u7A0B\u4EFB\u52A1\u65F6\uFF0C\u5E0C\u671B\u5F97\u5230\u8FD4\u56DE\u7ED3\u679C\uFF0C\u800C\u76F4\u63A5\u63D0\u4EA4Runnable\u7C7B\u578B\u7684\u4EFB\u52A1\u8BDD\uFF0C\u662F\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\uFF0Cjava\u63D0\u4F9B\u4E86\u53E6\u4E00\u4E2A\u63A5\u53E3\u53EB\u505ACallable\uFF0C\u5B83\u53EF\u4EE5\u6267\u884C\u4E00\u4E2A\u5E26\u8FD4\u56DE\u503C\u7684\u4EFB\u52A1</p></blockquote><h3 id="_2-2-\u6D4B\u8BD5\u5E26\u8FD4\u56DE\u503C\u7684\u591A\u7EBF\u7A0B\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#_2-2-\u6D4B\u8BD5\u5E26\u8FD4\u56DE\u503C\u7684\u591A\u7EBF\u7A0B\u4EFB\u52A1" aria-hidden="true">#</a> 2.2 \u6D4B\u8BD5\u5E26\u8FD4\u56DE\u503C\u7684\u591A\u7EBF\u7A0B\u4EFB\u52A1</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token comment">//lambda\u5199\u6CD5\uFF0C\u6B64\u5904\u4F20\u5165\u7684\u662F\u4E00\u4E2ACaller\u533F\u540D\u5B9E\u73B0\u7C7B</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> executorService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;ok hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329153946950.png" alt="image-20220329153946950" loading="lazy"></p><p>\u53EF\u4EE5\u770B\u5230\u8C03\u7528get\u65B9\u6CD5\u83B7\u53D6\u5230\u4E86caller\u63A5\u53E3\u5B9E\u73B0\u7C7B\u4E2D\u7684\u8FD4\u56DE\u503C</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329153915843.png" alt="image-20220329153915843" loading="lazy"></p><p><code>java.util.concurrent.ExecutorService#submit(java.util.concurrent.Callable&lt;T&gt;)</code>\u6E90\u7801</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329154106854.png" alt="image-20220329154106854" loading="lazy"></p><h2 id="_3\u3001\u7EBF\u7A0B\u6C60\u7684\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u7EBF\u7A0B\u6C60\u7684\u603B\u7ED3" aria-hidden="true">#</a> 3\u3001\u7EBF\u7A0B\u6C60\u7684\u603B\u7ED3</h2><h3 id="_3-1-\u4E0D\u5EFA\u8BAE\u4F7F\u7528\u5B98\u65B9\u5DE5\u5177\u7C7B\u76F4\u63A5\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#_3-1-\u4E0D\u5EFA\u8BAE\u4F7F\u7528\u5B98\u65B9\u5DE5\u5177\u7C7B\u76F4\u63A5\u521B\u5EFA" aria-hidden="true">#</a> 3.1 \u4E0D\u5EFA\u8BAE\u4F7F\u7528\u5B98\u65B9\u5DE5\u5177\u7C7B\u76F4\u63A5\u521B\u5EFA</h3><p><code>Executors</code>\u5DE5\u5177\u7C7B\u5B9E\u9645\u4E0A\u53EA\u662F\u5BF9<code>ThreadPoolExecutor</code>\u8FDB\u884C\u4E86\u7B80\u5355\u7684\u5C01\u88C5\uFF0C\u6240\u4EE5\u8FD8\u662F\u6709\u5FC5\u8981\u5BF9<code>ThreadPoolExecutor</code>\u8FDB\u884C\u5B66\u4E60</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329155120825.png" alt="image-20220329155120825" loading="lazy"></p><h3 id="_3-2-java-util-concurrent-threadpoolexecutor" tabindex="-1"><a class="header-anchor" href="#_3-2-java-util-concurrent-threadpoolexecutor" aria-hidden="true">#</a> 3.2 <code>java.util.concurrent.ThreadPoolExecutor</code></h3><h4 id="_3-2-1-\u6784\u9020\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-2-1-\u6784\u9020\u65B9\u6CD5" aria-hidden="true">#</a> 3.2.1 \u6784\u9020\u65B9\u6CD5</h4><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329161315724.png" alt="image-20220329161315724" loading="lazy"></p><p>\u8868\u9762\u4E0A\u770B\u67094\u4E2A\uFF0C\u5B9E\u9645\u4E0A\u5C31\u4E00\u4E2A\u5728\u5E72\u6D3B\uFF0C\u6700\u7EC8\u90FD\u8C03\u7528\u7684\u662F\u4E0B\u9762\u8FD9\u4E2A\uFF0C\u65E0\u975E\u5C31\u662F\u4F20\u9012\u4E0D\u540C\u7684\u6784\u9020\u53C2\u6570\uFF0C\u8FD9\u91CC\u70B9\u5F00<code>java.util.concurrent.Executors#newFixedThreadPool(int)</code>\u770B\u4E00\u4E0B\u5C31\u77E5\u9053\u4E86</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329161738207.png" alt="image-20220329161738207" loading="lazy"></p><p><strong>\u6784\u9020\u53C2\u6570\u8BF4\u660E\uFF1A</strong></p><p><strong>corePoolSize</strong>\uFF1A\u521D\u59CB\u5316\u65F6\u7ED9\u8BE5\u6C60\u5B50\u7684\u7EBF\u7A0B\u6570\uFF0C\u5F53\u4EFB\u52A1\u6765\u4E86\u4EE5\u540E\u5148\u521D\u59CB\u5316corePoolSize\u4E2A\u7EBF\u7A0B\u653E\u5728\u6C60\u5B50\uFF08<code>new ThreadPoolExecutor</code>\u7684\u65F6\u5019\u8FD8\u6CA1\u6709\u521B\u5EFA\uFF0C\u662F\u63D0\u4EA4\u4EFB\u52A1\u540E\u624D\u4F1A\u521D\u59CB\u5316\uFF09\uFF1B</p><p><strong>maximumPoolSize</strong>\uFF1A\u5F53\u4EFB\u52A1\u961F\u5217\u8FC7\u591A\u65F6\u6700\u5927\u80FD\u6269\u5C55\u7684\u7EBF\u7A0B\u6570\uFF1B</p><p><strong>keepAliveTime</strong>\uFF1A\u5F53\u4EFB\u52A1\u6267\u884C\u5B8C\u4E86\u4EE5\u540E\uFF0C\u7A7A\u95F2\u7EBF\u7A0B\u6700\u5927\u80FD\u7A7A\u95F2\u7684\u65F6\u95F4\uFF0C\u8D85\u8FC7\u8BE5\u65F6\u95F4\u5219\u56DE\u6536\u3002\u6BD4\u5982corePoolSize\u4E3A2\uFF0CmaximumPoolSize\u4E3A4\uFF0CBlockingQueue\u961F\u5217\u4E3A2\u4E2A\u957F\u5EA6\uFF0C\u6B64\u65F6\u6765\u4E8610\u4E2A\u4EFB\u52A1\uFF0C\u5219\u524D2\u4E2A\u4EFB\u52A1\u4EA4\u7ED9corePoolSize \u90A3\u4E24\u4E2A\u7EBF\u7A0B\u6765\u6267\u884C\uFF0C3\u30014\u4EFB\u52A1\u7F13\u5B58\u5728BlockingQueue\u961F\u5217\u4E2D\uFF0C\u7B2C5\u4E2A\u4EFB\u52A1\u5230\u6765\u7684\u65F6\u5019\uFF0C\u5C31\u8981\u518D\u8D77\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u7B2C6\u4E2A\u4EFB\u52A1\u6765\u4E86\u518D\u8D77\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u6B64\u65F6\u603B\u7EBF\u7A0B\u6570\u5DF2\u7ECF\u8FBE\u5230\u4E86maximumPoolSize\uFF0C\u6709\u65B0\u4EFB\u52A1\u6765\u4E86\u4E5F\u4E0D\u80FD\u518D\u8D77\u65B0\u7684\u7EBF\u7A0B\u4E86\uFF08\u540E\u9762\u76847\u30018\u30019\u300110 \u4EFB\u52A1\u8BF7\u6C42\u518D\u6765\u7684\u8BDD\u5C31\u8981\u6839\u636E\u8BBE\u7F6E\u7684RejectedExecutionHandler\u7B56\u7565\u6765\u5904\u7406\uFF0C\u6B64\u5904\u5148\u4E0D\u8003\u8651\uFF09\uFF0C\u5F53\u4EFB\u52A1\u6267\u884C\u5B8C\u540E\uFF0C\u65B0\u542F\u52A8\u7684\u4E24\u4E2A\u7EBF\u7A0B\u4E5F\u5C31\u7A7A\u95F2\u4E0B\u6765\uFF0C\u8FD9\u65F6\u5C31\u5F00\u59CB\u8BA1\u65F6\uFF0C\u7A7A\u95F2\u65F6\u95F4\u8FBE\u5230\u4E86keepAliveTime\u5219\u628A\u7EBF\u7A0B\u56DE\u6536\u4E86\uFF0C\u8FD9\u662F\u5C31\u662F\u5269\u4E0BcorePoolSize\u4E2A\u7EBF\u7A0B\u5B58\u6D3B\u4E86\u3002</p>`,41),r=a("\u7F13\u51B2\u961F\u5217\u53C2\u8003\uFF1A"),k={href:"https://blog.csdn.net/ican87/article/details/80874933",target:"_blank",rel:"noopener noreferrer"},d=a("https://blog.csdn.net/ican87/article/details/80874933"),m=s(`<p>workQueue\uFF1A\u7F13\u5B58\u7684\u961F\u5217\uFF0C\u6709\u591A\u91CD\u5B9E\u73B0\u961F\u5217\u3002\u5B9E\u73B01\uFF1AArrayBlockingQueue\uFF0C\u6709\u754C\u961F\u5217\uFF0C\u53EF\u4EE5\u9650\u5236\u7F13\u5B58\u961F\u5217\u7684\u5927\u5C0F\uFF1B\u5B9E\u73B0\u4E8C\uFF1ALinkedBlockingQueue\uFF0C\u65E0\u754C\u961F\u5217\uFF0C\u80FD\u6700\u591A\u7F13\u5B58<code>Integer.MAX_VALUE</code>\u4E2A\uFF08\u5F53\u7136\u4E5F\u53EF\u4EE5\u5728\u6784\u9020\u51FD\u6570\u4E2D\u6307\u5B9A\u56FA\u5B9A\u6570\u91CF\u7684\u7F13\u5B58\u961F\u5217\uFF09\uFF0C\u7406\u8BBA\u4E0A\u53EF\u4EE5\u7F13\u5B58\u4E00\u76F4\u5230\u5185\u5B58\u8017\u5C3D\uFF0C\u4F7F\u7528\u8BE5\u961F\u5217\u540E\u5219maximumPoolSize\u5C31\u5931\u6548\u4E86\uFF1B\u5B9E\u73B0\u4E09\uFF1ASynchronousQueue\uFF0C\u76F4\u63A5\u63D0\u4EA4\u7B56\u7565\u8868\u793A\u7EBF\u7A0B\u6C60\u4E0D\u5BF9\u4EFB\u52A1\u8FDB\u884C\u7F13\u5B58\u3002\u65B0\u8FDB\u4EFB\u52A1\u76F4\u63A5\u63D0\u4EA4\u7ED9\u7EBF\u7A0B\u6C60\uFF0C\u5F53\u7EBF\u7A0B\u6C60\u4E2D\u6CA1\u6709\u7A7A\u95F2\u7EBF\u7A0B\u65F6\uFF0C\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u7EBF\u7A0B\u5904\u7406\u6B64\u4EFB\u52A1\u3002\u8FD9\u79CD\u7B56\u7565\u9700\u8981\u7EBF\u7A0B\u6C60\u5177\u6709\u65E0\u9650\u589E\u957F\u7684\u53EF\u80FD\u6027\u3002</p><p>handler\uFF1A\u4EFB\u52A1\u8FC7\u591A\uFF08\u7F13\u5B58\u961F\u5217\u5DF2\u6EE1\uFF0C\u5E76\u4E14\u5DF2\u6269\u5C55\u5230maximumPoolSize\u4E2A\u7EBF\u7A0B\uFF0C\u540E\u7EED\u518D\u6765\u65B0\u7684\u4EFB\u52A1\u5C31\u4F1A\u89E6\u53D1\uFF09\u89E6\u53D1\u62D2\u7EDD\u7B56\u7565\u3002ThreadPoolExecutor\u5185\u7F6E\u4E86\u591A\u4E2D\u9759\u6001\u5185\u90E8\u7C7B\uFF0C\u5BF9\u5E94\u5404\u79CD\u62D2\u7EDD\u7B56\u7565\u3002</p><p>\uFF081\uFF09AbortPolicy \u62D2\u7EDD\u7B56\u7565\uFF1A\u629B\u51FA\u8FD0\u884C\u65F6\u5F02\u5E38RejectedExecutionException\u3002 \u8FD9\u79CD\u7B56\u7565\u4E22\u5F03\u4EFB\u52A1\uFF0C\u5E76\u629B\u51FA\u5F02\u5E38\u3002\uFF08jdk\u9ED8\u8BA4\u7B56\u7565\uFF09 \uFF082\uFF09DiscardPolicy \u62D2\u7EDD\u7B56\u7565\uFF1A\u4E0D\u80FD\u6267\u884C\u7684\u4EFB\u52A1\u5C06\u88AB\u4E22\u5F03\u3002 \u8FD9\u79CD\u7B56\u7565\u4EC0\u4E48\u90FD\u6CA1\u505A\u3002 \uFF083\uFF09DiscardOldestPolicy \u62D2\u7EDD\u7B56\u7565\uFF1A\u5982\u679C\u6267\u884C\u7A0B\u5E8F\u5C1A\u672A\u5173\u95ED\uFF0C\u5219\u4F4D\u4E8E\u5DE5\u4F5C\u961F\u5217\u5934\u90E8\u7684\u4EFB\u52A1\u5C06\u88AB\u5220\u9664\uFF0C\u7136\u540E\u91CD\u8BD5\u6267\u884C\u7A0B\u5E8F\u3002</p><p><img src="https://img2018.cnblogs.com/blog/940289/201903/940289-20190317160324929-400052712.png" alt="" loading="lazy"></p><h4 id="_3-2-2-\u5B9E\u9A8C\u9A8C\u8BC1threadpoolexecutor\u5404\u4E2A\u53C2\u6570\u7684\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#_3-2-2-\u5B9E\u9A8C\u9A8C\u8BC1threadpoolexecutor\u5404\u4E2A\u53C2\u6570\u7684\u4F5C\u7528" aria-hidden="true">#</a> 3.2.2 \u5B9E\u9A8C\u9A8C\u8BC1<code>ThreadPoolExecutor</code>\u5404\u4E2A\u53C2\u6570\u7684\u4F5C\u7528</h4><h5 id="_3-2-2-1-\u7B2C\u4E00\u6B21\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_3-2-2-1-\u7B2C\u4E00\u6B21\u6D4B\u8BD5" aria-hidden="true">#</a> 3.2.2.1 \u7B2C\u4E00\u6B21\u6D4B\u8BD5</h5><p>\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u5DE5\u5382\uFF0C\u7EBF\u7A0B\u540D\u968F\u4FBF\u8D77\uFF0C\u6211\u8FD9\u91CC\u76F4\u63A5\u7528\u65F6\u95F4\u6233</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyThreadFactory</span> <span class="token keyword">implements</span> <span class="token class-name">ThreadFactory</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Thread</span> <span class="token function">newThread</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> <span class="token string">&quot;xxxx&quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> t<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E00\u6B21\u6D4B\u8BD5\u53C2\u6570\uFF1A</p><table><thead><tr><th>\u53C2\u6570</th><th>\u53C2\u6570\u503C</th></tr></thead><tbody><tr><td>corePoolSize</td><td>1</td></tr><tr><td>maximumPoolSize</td><td>4</td></tr><tr><td>keepAliveTime</td><td>100\u79D2</td></tr><tr><td>workQueue</td><td>new LinkedBlockingQueue&lt;&gt;(1)</td></tr><tr><td>threadFactory</td><td>\u81EA\u5B9A\u4E49\u5DE5\u5382MyThreadFactory</td></tr><tr><td>handler</td><td>new ThreadPoolExecutor.AbortPolicy()</td></tr></tbody></table><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThreadPoolExecutor</span> threadPoolExecutor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">100L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MyThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment">//\u4E3A\u4E86\u65B9\u4FBF\u63CF\u8FF0\u628A\u6B64\u4EFB\u52A1\u53EB\u505AA\u4EFB\u52A1\uFF0C\u4EE5\u4E0B\u5206\u522B\u4E3AB\\C\\D</span>
        threadPoolExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">&quot;=============AAAAAAAAAAAAaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        threadPoolExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;===========BBBBBBBBBB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1010</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        threadPoolExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;===========CCCCCCCC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        threadPoolExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=========DDDDD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">xxxxxxx30832344860303</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>AAAAAAAAAAAAaa
<span class="token assign-left variable">xxxxxxx30832345605562</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>CCCCCCCC
<span class="token assign-left variable">xxxxxxx30832345942575</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>DDDDD
<span class="token assign-left variable">xxxxxxx30832344860303</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>BBBBBBBBBB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u4E00\u5171\u542F\u52A8\u4E863\u4E2A\u7EBF\u7A0B\uFF0C\u7EBF\u7A0B\u6267\u884C\u8FC7\u7A0B\u5206\u6790\uFF1A</p><ol><li>\u63D0\u4EA4A\u4EFB\u52A1\uFF0C\u5148\u521D\u59CB\u5316<code>corePoolSize</code>\u4E2A\u7EBF\u7A0B\uFF0C\u5E76\u4E14\u5206\u914D\u4E00\u4E2A\u7EBF\u7A0B\u6267\u884CA</li><li>\u6B64\u65F6\u518D\u63D0\u4EA4B\u4EFB\u52A1\uFF0C\u56E0\u4E3A<code>corePoolSize</code>\u53EA\u6709\u4E00\u4E2A\uFF0C\u6240\u4EE5\u9700\u8981\u7ED9\u4ED6\u7F13\u5B58\u5230\u961F\u5217\uFF0C<code>LinkedBlockingQueue</code>\u8BBE\u7F6E\u76841,\u521A\u597D\u53EF\u4EE5\u7F13\u5B58\u4E00\u4E2A\u4EFB\u52A1\uFF0CB\u88AB\u7F13\u5B58\uFF0C\u5148\u4E0D\u6267\u884C</li><li>\u518D\u63D0\u4EA4C,\u6B64\u65F6\u53D1\u73B0<code>corePoolSize</code>\u521D\u59CB\u5316\u7684\u7EBF\u7A0B\u7528\u5B8C\u4E86\uFF0C<code>LinkedBlockingQueue</code>\u4E5F\u7528\u5B8C\u4E86\uFF0C\u800C<code>maximumPoolSize</code>\u4E3A4,\u8FD8\u53EF\u4EE5\u542F\u52A83\u4E2A\u7EBF\u7A0B\uFF0C\u6240\u4EE5\u5728\u7ED9C\u5206\u914D\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u8FD0\u884C\u4EFB\u52A1</li><li>\u518D\u63D0\u4EA4D,\u548C\u7B2C\u4E09\u6B65\u4E00\u6837\uFF0C\u5728\u542F\u52A8\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u6B64\u65F6\u5C31\u5DF2\u7ECF\u8FBE\u5230<code>maximumPoolSize</code>\u4E2A\u7EBF\u7A0B</li><li>\u7A7A\u95F2\u65F6\u95F4\u8BBE\u7F6E\u7684100\u79D2\uFF0C\u610F\u601D\u662F\u9664\u4E86<code>corePoolSize</code>\u521D\u59CB\u5316\u7684\u90A3\u4E2A\u7EBF\u7A0B\u4E4B\u5916\u7684\u53E63\u4E2A\u7EBF\u7A0B\uFF0C\u5728\u6267\u884C\u5B8C\u81EA\u5DF1\u7684\u4EFB\u52A1\u540E\uFF0C\u53EF\u4EE5\u518D\u7B49100\u79D2\uFF0C\u5982\u679C100\u79D2\u5185\u6CA1\u6709\u65B0\u7684\u4EFB\u52A1\u7533\u8BF7\u4F7F\u7528\u7EBF\u7A0B\uFF0C\u90A3\u4E48\u5C31\u4F1A\u88AB\u56DE\u6536</li></ol><blockquote><p>\u6839\u636E\u4EE5\u4E0A\u5206\u6790\u53EF\u4EE5\u6D4B\u8BD5\u7ED3\u679C\u5B8C\u5168\u5408\u7406\uFF0C\u8FD0\u884C\u8FC7\u7A0B\u4E3AA-C-D-B\uFF0C\u5F53B\u56E0\u4E3A\u88AB\u653E\u8FDB\u4E86\u7F13\u5B58\u961F\u5217\uFF0C\u53EA\u6709\u5F53\u5176\u4ED6\u7EBF\u7A0B\u6267\u884C\u5B8C\u4EE5\u540E\uFF0C\u6709\u7A7A\u95F2\u7684\u7EBF\u7A0BB\u624D\u4F1A\u6709\u673A\u4F1A\u8FD0\u884C\uFF0C\u6240\u4EE5\u5B83\u5728\u6700\u540E\u6267\u884C\uFF0C</p></blockquote><p><strong>\u6CE8\u610F\uFF1A</strong></p><p><em>\u4EE5\u4E0A\u6211\u4EEC\u4E0A\u67094\u4E2A\u4EFB\u52A1\uFF0C\u4F46\u662F\u6700\u7EC8\u542F\u52A8\u7684\u7EBF\u7A0B\u53EA\u67093\u4E2A\uFF0C\u56E0\u4E3A\u6709\u4E00\u4E2A\u88AB\u653E\u8FDB\u7F13\u5B58\u961F\u5217</em></p><h5 id="_3-2-2-2-\u7B2C\u4E8C\u6B21\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_3-2-2-2-\u7B2C\u4E8C\u6B21\u6D4B\u8BD5" aria-hidden="true">#</a> 3.2.2.2 \u7B2C\u4E8C\u6B21\u6D4B\u8BD5</h5><p>\u5728\u7B2C\u4E00\u6B21\u6D4B\u8BD5\u57FA\u7840\u4E0A\u5728\u52A02\u4E2A\u4EFB\u52A1\uFF0C\u6D4B\u8BD5\u62D2\u7EDD\u7B56\u7565\uFF0C\u4E3A\u4EC0\u4E48\u52A0\u4E00\u4E2A\u4E0D\u884C\uFF1F\u81EA\u884C\u601D\u8003\u4E00\u4E0B</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    public static void main(String[] args) throws InterruptedException {
        ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 4, 100L, TimeUnit.SECONDS, new LinkedBlockingQueue&lt;&gt;(1), new MyThreadFactory(), new ThreadPoolExecutor.AbortPolicy());
        threadPoolExecutor.execute(() -&gt; {
            System.out.println(Thread.currentThread().getName()+ &quot;=============AAAAAAAAAAAAaa&quot;);
            try {
                Thread.sleep(1001);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });

        threadPoolExecutor.execute(() -&gt; {
                System.out.println(Thread.currentThread().getName() + &quot;===========BBBBBBBBBB&quot;);
            try {
                Thread.sleep(1010);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });
        threadPoolExecutor.execute(() -&gt; {
                System.out.println(Thread.currentThread().getName() + &quot;===========CCCCCCCC&quot;);
            try {
                Thread.sleep(1001);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });
        threadPoolExecutor.execute(() -&gt; {
            System.out.println(Thread.currentThread().getName() + &quot;=========DDDDD&quot;);
            try {
                Thread.sleep(1001);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });
        threadPoolExecutor.execute(() -&gt; {
            System.out.println(Thread.currentThread().getName() + &quot;=========EEEEEE&quot;);
            try {
                Thread.sleep(1001);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });
        threadPoolExecutor.execute(() -&gt; {
            System.out.println(Thread.currentThread().getName() + &quot;=========ffff&quot;);
            try {
                Thread.sleep(1001);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">xxxxxxx31891613408362</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>AAAAAAAAAAAAaa
<span class="token assign-left variable">xxxxxxx31891614159432</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>CCCCCCCC
<span class="token assign-left variable">xxxxxxx31891614545186</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>DDDDD
<span class="token assign-left variable">xxxxxxx31891614917120</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>EEEEEE
Exception <span class="token keyword">in</span> thread <span class="token string">&quot;main&quot;</span> java.util.concurrent.RejectedExecutionException: Task com.chen.base.thread.ThreadFactoryClient<span class="token variable">$$</span>Lambda<span class="token variable">$6</span>/1828972342@568db2f2 rejected from java.util.concurrent.ThreadPoolExecutor@378bf509<span class="token punctuation">[</span>Running, pool size <span class="token operator">=</span> <span class="token number">4</span>, active threads <span class="token operator">=</span> <span class="token number">4</span>, queued tasks <span class="token operator">=</span> <span class="token number">1</span>, completed tasks <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">]</span>
	at java.util.concurrent.ThreadPoolExecutor<span class="token variable">$AbortPolicy</span>.rejectedExecution<span class="token punctuation">(</span>ThreadPoolExecutor.java:2063<span class="token punctuation">)</span>
	at java.util.concurrent.ThreadPoolExecutor.reject<span class="token punctuation">(</span>ThreadPoolExecutor.java:830<span class="token punctuation">)</span>
	at java.util.concurrent.ThreadPoolExecutor.execute<span class="token punctuation">(</span>ThreadPoolExecutor.java:1379<span class="token punctuation">)</span>
	at com.chen.base.thread.ThreadFactoryClient.main<span class="token punctuation">(</span>ThreadFactoryClient.java:56<span class="token punctuation">)</span>
<span class="token assign-left variable">xxxxxxx31891613408362</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>BBBBBBBBBB

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u89E6\u53D1\u4E86\u8BBE\u7F6E\u7684\u62D2\u7EDD\u7B56\u7565\uFF0C\u4EFB\u52A1\u8D85\u51FA\u65F6\u76F4\u63A5\u629B\u51FA\u5F02\u5E38</p><h4 id="_3-2-3-\u51E0\u79CD\u7EBF\u7A0B\u6C60\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3-2-3-\u51E0\u79CD\u7EBF\u7A0B\u6C60\u7684\u5B9E\u73B0" aria-hidden="true">#</a> 3.2.3 \u51E0\u79CD\u7EBF\u7A0B\u6C60\u7684\u5B9E\u73B0</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u7F13\u5B58\u6C60\uFF0C\u521D\u59CB\u53160\u4E2A\u7EBF\u7A0B\uFF0C\u4F7F\u7528SynchronousQueue\u961F\u5217\u6BCF\u6B21\u6765\u4E86\u65B0\u4EFB\u52A1\u9A6C\u4E0A\u8D77\u4E00\u4E2A\u65B0\u7684\u7EBF\u7A0B\uFF0C\u800C\u4E0D\u662F\u7F13\u5B58\u4E0B\u6765\uFF0C\u6700\u5927\u53EF\u4EE5\u8D77Integer.MAX_VALUE\u4E2A\u7EBF\u7A0B\uFF08\u5185\u5B58\u591F\u7528\u524D\u63D0\u4E0B\uFF09  </span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span>
                                      <span class="token number">60L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
                                      <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u5355\u4E2A\u7EBF\u7A0B\u6C60\uFF0C\u76F8\u5F53\u4E8E\u628A\u56FA\u5B9A\u6C60\u7684\u7EBF\u7A0B\u6570\u8BBE\u7F6E\u62101\u4E2A  public static ExecutorService newSingleThreadExecutor() {</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FinalizableDelegatedExecutorService</span>
            <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>
                                    <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>
                                    <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u56FA\u5B9A\u7EBF\u7A0B\u6570\u7684\u7EBF\u7A0B\u6C60\uFF0C\u6CE8\u610F\u4ED6\u7684\u521D\u59CB\u5316\u7EBF\u7A0B\u6570\u548C\u6700\u5927\u7EBF\u7A0B\u6570\u662F\u4E00\u6837\uFF0C\u4E00\u65E6\u4EFB\u52A1\u8D85\u8FC7\u7EBF\u7A0B\u6570\u5C31\u5F00\u59CB\u65E0\u9650\u7F13\u5B58\uFF0C\u7B49\u7EBF\u7A0B\u5904\u7406\u5B8C\u5176\u4ED6\u4EFB\u52A1\u540E\u518D\u4ECE\u65E0\u754C\u961F\u5217\u4E2D\u53D6\u4EFB\u52A1\u6765\u5904\u7406  </span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> nThreads<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>nThreads<span class="token punctuation">,</span> nThreads<span class="token punctuation">,</span>
                                      <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>
                                      <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-3-\u7EBF\u7A0B\u6C60\u4E2D\u4EFB\u52A1\u6267\u884C\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#_3-2-3-\u7EBF\u7A0B\u6C60\u4E2D\u4EFB\u52A1\u6267\u884C\u6D41\u7A0B" aria-hidden="true">#</a> 3.2.3 \u7EBF\u7A0B\u6C60\u4E2D\u4EFB\u52A1\u6267\u884C\u6D41\u7A0B</h4><p><img src="https://img2018.cnblogs.com/blog/940289/201903/940289-20190317152802067-348051138.png" alt="" loading="lazy"></p><h3 id="_3-3-\u7EBF\u7A0B\u6C60\u4E2D\u7684\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_3-3-\u7EBF\u7A0B\u6C60\u4E2D\u7684\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> 3.3 \u7EBF\u7A0B\u6C60\u4E2D\u7684\u5F02\u5E38\u5904\u7406</h3><p>\u7EBF\u7A0B\u6C60\u4E2D\u63D0\u4EA4\u4EFB\u52A1\u7684\u4E24\u79CD\u65B9\u6CD5\uFF1A<code>submit</code>\u3001<code>execute</code>\uFF0Csubmit\u65B9\u6CD5\u7684\u53C2\u6570\u53EF\u4EE5\u662F<code>Runnable</code>\u3001<code>Caller</code>\uFF0Cexecute\u7684\u53C2\u6570\u7C7B\u578B\u53EA\u6709<code>Runnable</code>\uFF0Csubmit\u63D0\u4EA4\u7684\u65B9\u6CD5\u53EF\u4EE5\u83B7\u53D6\u8FD4\u56DE\u503C\uFF0C\u8981\u60F3\u83B7\u53D6\u8FD4\u56DE\u503C\u9700\u8981\u4F20\u9012Caller\u7C7B\u578B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//java.util.concurrent.ThreadPoolExecutor#execute</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*
         * Proceed in 3 steps:
         *
         * 1. If fewer than corePoolSize threads are running, try to
         * start a new thread with the given command as its first
         * task.  The call to addWorker atomically checks runState and
         * workerCount, and so prevents false alarms that would add
         * threads when it shouldn&#39;t, by returning false.
         *
         * 2. If a task can be successfully queued, then we still need
         * to double-check whether we should have added a thread
         * (because existing ones died since last checking) or that
         * the pool shut down since entry into this method. So we
         * recheck state and if necessary roll back the enqueuing if
         * stopped, or start a new thread if there are none.
         *
         * 3. If we cannot queue task, then we try to add a new
         * thread.  If it fails, we know we are shut down or saturated
         * and so reject the task.
         */</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&lt;</span> corePoolSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">addWorker</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRunning</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> workQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> recheck <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isRunning</span><span class="token punctuation">(</span>recheck<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">remove</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>recheck<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">addWorker</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token comment">//\u7EE7\u627F\u81EAAbstractExecutorService</span>
<span class="token comment">//java.util.concurrent.AbstractExecutorService#submit(java.util.concurrent.Callable&lt;T&gt;)</span>
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>task <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RunnableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> ftask <span class="token operator">=</span> <span class="token function">newTaskFor</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">execute</span><span class="token punctuation">(</span>ftask<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ftask<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u7EE7\u627F\u81EAAbstractExecutorService</span>
<span class="token comment">//java.util.concurrent.AbstractExecutorService#submit(java.lang.Runnable)</span>
    <span class="token keyword">public</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>task <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RunnableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> ftask <span class="token operator">=</span> <span class="token function">newTaskFor</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">execute</span><span class="token punctuation">(</span>ftask<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ftask<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-1-\u4F7F\u7528execute\u65F6\u7684\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_3-2-1-\u4F7F\u7528execute\u65F6\u7684\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> 3.2.1 \u4F7F\u7528execute\u65F6\u7684\u5F02\u5E38\u5904\u7406</h4><p>\u4F7F\u7528execute\u63D0\u4EA4\u6709\u5F02\u5E38\u4F1A\u6B63\u5E38\u7684\u629B\u51FA\uFF0C\u5F53\u7136\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\u5F02\u5E38\u5904\u7406\u5668</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyThreadFactory</span> <span class="token keyword">implements</span> <span class="token class-name">ThreadFactory</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Thread</span> <span class="token function">newThread</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> <span class="token string">&quot;xxxxxxx&quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread<span class="token punctuation">.</span><span class="token function">setUncaughtExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;enter into uncaughtException&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F02\u5E38\u4FE1\u606F:&quot;</span><span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> thread<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThreadPoolExecutor</span> threadPoolExecutor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">100L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MyThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            threadPoolExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;enter into submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662F\u4E00\u4E2A\u5F02\u5E38\u4FE1\u606F\u3002\u3002\u3002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-2-\u4F7F\u7528submit\u65F6\u7684\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_3-2-2-\u4F7F\u7528submit\u65F6\u7684\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> 3.2.2 \u4F7F\u7528submit\u65F6\u7684\u5F02\u5E38\u5904\u7406</h4><p>submit\u4F1A\u8FD4\u56DE\u4E00\u4E2Afuture,\u9700\u8981\u4E3B\u52A8\u8C03\u7528\u8FD9\u4E2Afuture\u7684get\u65B9\u6CD5\u624D\u4F1A\u89E6\u53D1\u5F02\u5E38\uFF0C\u5982\u679C\u6B63\u5E38\u6267\u884C\u4F20\u9012\u7684runnable\u7C7B\u578B\uFF0C\u5219\u8FD4\u56DEnull,\u5982\u679C\u662Fcaller\u7C7B\u578B\u53C2\u6570\uFF0C\u4F1A\u8FD4\u56DE\u76F8\u5E94\u7684\u503C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyThreadFactory</span> <span class="token keyword">implements</span> <span class="token class-name">ThreadFactory</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Thread</span> <span class="token function">newThread</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> <span class="token string">&quot;xxxxxxx&quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread<span class="token punctuation">.</span><span class="token function">setUncaughtExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;enter into uncaughtException&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F02\u5E38\u4FE1\u606F:&quot;</span><span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> thread<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThreadPoolExecutor</span> threadPoolExecutor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">100L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MyThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token class-name">Future</span> future<span class="token operator">=</span> threadPoolExecutor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;enter into submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662F\u4E00\u4E2A\u5F02\u5E38\u4FE1\u606F\u3002\u3002\u3002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-\u8865\u5145\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_3-4-\u8865\u5145\u8BF4\u660E" aria-hidden="true">#</a> 3.4 \u8865\u5145\u8BF4\u660E</h3><p>\u5173\u4E8E<code>ThreadPoolExecutor</code>\u7684\u6784\u9020\u65B9\u6CD5\u4E2D\u7684<code>keepAliveTime</code>\u8BF4\u660E</p><p>[\u5728\u524D\u9762\u6709\u8BF4\u660E](#3.2.1 \u6784\u9020\u65B9\u6CD5)\uFF0C\u5728\u4E3E\u4F8B\u7F57\u55E6\u4E00\u8FB9\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF0C\u7B2C\u4E00\u4E2A\u4EFB\u52A1\u8FDB\u6765\uFF0C\u76F4\u63A5\u542F\u52A8\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u4E5F\u5C31\u662FcorePoolSize\u8BBE\u7F6E\u7684\u90A3\u4E2A\u7EBF\u7A0B\uFF0C\u7B2C\u4E8C\u4E2A\u4EFB\u52A1\u8FDB\u6765\u76F4\u63A5\u7F13\u5B58\u5230<code>LinkedBlockingQueue</code>\u4E2D\uFF0C\u7B2C\u4E09\u4E2A\u7EBF\u7A0B\u8FDB\u6765\uFF0C\u53D1\u73B0<code>LinkedBlockingQueue</code>\u5DF2\u7ECF\u6EE1\u4E86\uFF08\u56E0\u4E3A\u793A\u4F8B\u4EE3\u7801\u7F13\u5B58\u957F\u5EA6\u662F1\uFF09\u76F4\u63A5\u518D\u542F\u52A8\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u8FD9\u4E2A\u5360\u7528\u7684\u662FmaxmumPoolSize\u8BBE\u7F6E\u7684\u7EBF\u7A0B\uFF0C\u7B2C4\u4E2A\u3001\u7B2C5\u4E2A\u4EFB\u52A1\u8FDB\u6765\u548C\u7B2C\u4E09\u4E2A\u4E00\u6837\uFF0C\u518D\u5404\u81EA\u542F\u52A8\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u6B64\u65F6\u6C60\u4E2D\u4E00\u5171\u67094\u4E2A\u7EBF\u7A0B\u4E86\uFF0C\u518D\u6709\u4EFB\u52A1\u8FDB\u6765\u5C31\u4F1A\u89E6\u53D1\u62D2\u7EDD\u7B56\u7565\uFF0C\u6B64\u5904\u4E0D\u505A\u63CF\u8FF0\u4E86\u3002\u5F53\u6C60\u5B50\u4E2D\u7684\u6570\u91CF\u8D85\u8FC7\u4E86corePoolSize\u8BBE\u7F6E\u7684\u6570\u91CF\u662F\uFF0C\u8FD9\u4E2AkeepAliveTime\u53C2\u6570\u5C31\u8D77\u4F5C\u7528\u4E86\uFF0C\u5047\u5982\u4EFB\u52A1\u90FD\u6267\u884C\u5B8C\u4E86\uFF0C4\u4E2A\u7EBF\u7A0B\u90FD\u662F\u7A7A\u95F2\uFF08idle\uFF09\uFF0C\u5219\u5148\u7A7A\u95F2\u6EE1keepAliveTime\u8FD9\u4E48\u957F\u65F6\u95F4\u7684\u7EBF\u7A0B\u5C31\u4F1A\u88AB\u56DE\u6536\uFF0C\u6700\u540E\u5269\u4E0BcorePoolSize\u4E2A\u65F6\u4E0D\u518D\u56DE\u6536\uFF0C\u8FD9corePoolSize\u4E2A\u7EBF\u7A0B\u4E00\u76F4\u7F13\u5B58\u5728\u6C60\u5B50\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
 <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MyThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u4EE3\u7801\u5982\u4E0B\uFF0C\u6211\u8BBE\u7F6E<code>keepAliveTime</code>\u662F10s,</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThreadPoolExecutor</span> threadPoolExecutor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MyThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Future</span> future <span class="token operator">=</span> threadPoolExecutor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u4E00\u5B9A\u4E0D\u8981\u6253\u5F00future.get()\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u89E6\u53D1\u540C\u6B65\u64CD\u4F5C\uFF0C\u5BFC\u81F4\u6C38\u8FDC\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u5728\u5DE5\u4F5C</span>
<span class="token comment">//                future.get();</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u7ED3\u679C\uFF0C\u53D1\u73B0\u521A\u5F00\u59CB\u67094\u4E2A\u7EBF\u7A0B\uFF0C</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329212937714.png" alt="image-20220329212937714" loading="lazy"></p><p>\u8FC7\u4E8610s\u540E\uFF0C\u53D1\u73B0\u53EA\u6709\u4E00\u4E2A\u4E86\uFF0C\u7B26\u5408\u6211\u4EEC\u7684\u9884\u671F</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329213033143.png" alt="image-20220329213033143" loading="lazy"></p><p><code>java.util.concurrent.Future#get()</code>\u6709\u8BF4\u660E\uFF0Cget\u662F\u4F1A\u4E00\u76F4\u7B49\u5230\u6B64\u7EBF\u7A0B\u7ED3\u675F</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220329213244994.png" alt="image-20220329213244994" loading="lazy"></p>`,55);function v(b,h){const t=l("ExternalLinkIcon");return p(),o("div",null,[i,n("p",null,[r,n("a",k,[d,c(t)])]),m])}var y=e(u,[["render",v],["__file","ThreadPool.html.vue"]]);export{y as default};
