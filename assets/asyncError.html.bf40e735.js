import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as o,b as s,a as c,e as a,d as n,r as l}from"./app.ac1c4060.js";const i={},u=a(`<h2 id="\u4E00-\u4E3A\u4EC0\u4E48\u8981\u6355\u83B7\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u4E00-\u4E3A\u4EC0\u4E48\u8981\u6355\u83B7\u5F02\u5E38" aria-hidden="true">#</a> \u4E00\uFF0C\u4E3A\u4EC0\u4E48\u8981\u6355\u83B7\u5F02\u5E38</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u786E\u8BA4\u63D0\u4EA4</span>
<span class="token keyword">const</span> <span class="token function-variable function">submitWorkloadSure</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">WorkloadSures</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">555</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6211\u4EEC\u6CA1\u6709\u8FDB\u884C\u5F02\u5E38\u6355\u83B7\uFF0C\u5982\u679C\u8FD9\u4E2A<code>let data = await WorkloadSures()</code>\u6267\u884C\u62A5\u9519\u7684\u8BDD\uFF0C\u90A3\u4E48\u63A5\u4E0B\u6765\u7684\u4EE3\u7801\u5C06\u56E0\u4E3A\u7A0B\u5E8F\u53D1\u751F\u9519\u8BEF\u4E0D\u4F1A\u7EE7\u7EED\u6267\u884C\u4E0B\u53BB\uFF0C\u8FD9\u91CC\u7684555\u5C31\u4E0D\u4F1A\u88AB\u6253\u5370\u51FA\u6765\u3002 \u5982\u679C\u6211\u4EEC\u6709\u8FDB\u884C\u5F02\u5E38\u6355\u83B7\u7684\u8BDD\uFF0C\u540E\u7EED\u4EE3\u7801\u4F9D\u65E7\u53EF\u4EE5\u6B63\u5E38\u6267\u884C\u3002</p><p>1.2 \u4F7F\u7528catch\u6355\u83B7\u5F02\u5E38</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token comment">//\u786E\u8BA4\u63D0\u4EA4</span>
<span class="token keyword">const</span> <span class="token function-variable function">submitWorkloadSure</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">WorkloadSures</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">555</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1.3 \u4F7F\u7528try.catch\u6355\u83B7\u5F02\u5E38</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u786E\u8BA4\u63D0\u4EA4</span>
<span class="token keyword">const</span> <span class="token function-variable function">submitWorkloadSure</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">WorkloadSures</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>  
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">555</span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C-\u76F8\u5173\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u4E8C-\u76F8\u5173\u6848\u4F8B" aria-hidden="true">#</a> \u4E8C\uFF0C\u76F8\u5173\u6848\u4F8B</h2><p>\u6D4B\u8BD5\u7684\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>		<span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;\u64CD\u4F5C\u6210\u529F&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
						<span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u4F7F\u7528.then().catch()\u7684\u65B9\u6CD5\u8C03\u7528,\u6211\u4EEC\u5728catch\u4E2D\u5C31\u53EF\u4EE5\u6355\u83B7\u5230\u5F02\u5E38</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>		<span class="token function">getList2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),k=n("\u4F46\u662F\u5F53\u6211\u4EEC\u4F7F\u7528es7\u7684 "),r={href:"https://so.csdn.net/so/search?q=async&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},d=n("async"),v=n("/await\u5462? \u53EA\u662F\u8FD9\u4E48\u5199\uFF0C\u6211\u4EEC\u662F\u6355\u83B7\u4E0D\u5230\u5F02\u5E38\u7684\uFF01"),m=a(`<div class="language-Javascript ext-Javascript line-numbers-mode"><pre class="language-Javascript"><code>		async getList3() {
			let resp = await this.httpTest();
			console.log(resp);
		},
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC\u9700\u8981\u4E00\u4E2A\u6355\u83B7\u5F02\u5E38\u7684\u5730\u65B9\uFF0C\u6709\u4E9B\u4EBA\u5C31\u60F3\u5230\u4E86\u94FE\u5F0F\u8C03\u7528\u7684catch\uFF0C\u4F46\u662F\u8FD9\u4E48\u5199\u603B\u662F\u6709\u70B9\u56DB\u4E0D\u50CF\u7684\u6837\u5B50\uFF0C\u6211\u65E2\u7136\u60F3\u7528async/await\u8FD9\u79CD\u8C03\u7528\u65B9\u5F0F\uFF0C\u90A3\u5C31\u770B\u4E0A\u4E86\u8FD9\u79CD\u7684\u8C03\u7528\u66F4\u52A0\u7684\u4F18\u96C5\uFF0C\u4EE3\u7801\u66F4\u52A0\u7684\u6E05\u6670\u660E\u4E86\uFF0C\u5728\u540E\u9762\u52A0\u4E0A\u4E00\u4E2A.catch\u5C31\u663E\u7684\u5F88\u602A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>		<span class="token keyword">async</span> <span class="token function">getList4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">let</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528try / catch\u6765\u6355\u83B7\u5F02\u5E38\uFF0C\u8FD9\u6837\u7684\u8BDD\u4EE3\u7801\u5C31\u770B\u8D77\u6765\u8212\u670D\u591A\u4E86\uFF0Ccatch\u91CC\u9762\u7684err\u5C31\u662F\u6211\u4EEC\u6240\u6355\u83B7\u7684\u5F02\u5E38.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>		<span class="token keyword">async</span> <span class="token function">getList6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				<span class="token keyword">let</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u95EE\u9898\uFF0C\u53C8\u6765\u4E86\uFF0C\u6211\u5728\u4E00\u4E2A\u65B9\u6CD5\u91CC\u9762\u5199\u4E86\u597D\u51E0\u4E2A\u8BF7\u6C42\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65F6\u5019\u8BE5\u600E\u4E48\u529E\uFF1F\u6709\u7684\u4EBA\u7684\u5199\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>		<span class="token keyword">async</span> <span class="token function">getList6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				<span class="token keyword">let</span> resp1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp1<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">let</span> resp2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp2<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">let</span> resp3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp3<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5408\u7406\u5417\uFF1F\u663E\u7136\u662F\u4E0D\u5408\u7406\uFF01\u8FD9\u4E2Aerr\u503C\u53EA\u8F93\u51FA\u4E86\u4E00\u6B21\uFF0C\u6211\u600E\u4E48\u77E5\u9053\u8FD9\u6355\u83B7\u7684\u662F\u8C01\u7684\uFF1F\uFF0C\u90A3\u600E\u4E48\u529E\uFF1F\u6BCF\u4E2A\u90FD\u5199\u4E00\u4E2Atry / catch,\u662F\u4E2A\u89E3\u51B3\u529E\u6CD5\uFF0C\u50CF\u4E0B\u9762\u8FD9\u6837\uFF0C\u597D\u770B\u5417\uFF0C\u770B\u7740\u8FD8\u6574\u6D01\uFF0C\u5982\u679C\u518D\u52A0\u4E0A\u4E1A\u52A1\u4EE3\u7801\u5904\u7406\uFF0C\u90A3\u5C31\u5199\u4E86\u597D\u591A\u4EE3\u7801\u554A\u3002\u3002\u3002\u4F5C\u4E3A\u4E00\u4E2A\u61D2\u4EBA\uFF0C\u6211\u4EEC\u9700\u8981\u60F3\u70B9\u62DB.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>		<span class="token keyword">async</span> <span class="token function">getList6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				<span class="token keyword">let</span> resp1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp1<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				<span class="token keyword">let</span> resp2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp2<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				<span class="token keyword">let</span> resp3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp3<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u4E2A\u5C0F\u62DB\uFF0C\u6211\u4EEC\u5199\u4E86\u4E00\u4E2Atest\u7684\u65B9\u6CD5\uFF0C\u505A\u4E00\u4E2A\u7B80\u5355\u7684\u5C01\u88C5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>		<span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">resovle</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> fn<span class="token punctuation">;</span>
					<span class="token function">resovle</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">resovle</span><span class="token punctuation">(</span><span class="token punctuation">[</span>err<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
 
        <span class="token comment">//\u6216\u8005\u8FD9\u6837</span>
        <span class="token keyword">async</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	        <span class="token keyword">try</span> <span class="token punctuation">{</span>
		        <span class="token keyword">let</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> fn
		        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> resp<span class="token punctuation">]</span>
	        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		        <span class="token keyword">return</span> <span class="token punctuation">[</span>err<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span>
	        <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>		<span class="token keyword">async</span> <span class="token function">getList5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">let</span> <span class="token punctuation">[</span>err<span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res===&gt;&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err===&gt;&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">let</span> <span class="token punctuation">[</span>err1<span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res1===&gt;&#39;</span><span class="token punctuation">,</span> res1<span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err1===&gt;&#39;</span><span class="token punctuation">,</span> err1<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">let</span> <span class="token punctuation">[</span>err2<span class="token punctuation">,</span> res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">httpTest</span><span class="token punctuation">(</span><span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res2===&gt;&#39;</span><span class="token punctuation">,</span> res2<span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err2===&gt;&#39;</span><span class="token punctuation">,</span> err2<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function b(y,g){const t=l("ExternalLinkIcon");return e(),o("div",null,[u,s("p",null,[k,s("a",r,[d,c(t)]),v]),m])}var f=p(i,[["render",b],["__file","asyncError.html.vue"]]);export{f as default};
