import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.4f6b4ef3.js";const p={},e=t(`<h3 id="_1-beanpostprocessor\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#_1-beanpostprocessor\u4ECB\u7ECD" aria-hidden="true">#</a> 1. BeanPostProcessor\u4ECB\u7ECD</h3><p>\u6253\u5F00\u6E90\u7801\u91CC\u9762\u6709\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u5206\u522B\u662FpostProcessBeforeInitialization\u548CpostProcessAfterInitialization\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span>
	<span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">default</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">default</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-1-postprocessbeforeinitialization\u65B9\u6CD5\u548Cpostprocessafterinitialization\u65B9\u6CD5\u8C03\u7528\u65F6\u673A" tabindex="-1"><a class="header-anchor" href="#_1-1-postprocessbeforeinitialization\u65B9\u6CD5\u548Cpostprocessafterinitialization\u65B9\u6CD5\u8C03\u7528\u65F6\u673A" aria-hidden="true">#</a> 1.1 postProcessBeforeInitialization\u65B9\u6CD5\u548CpostProcessAfterInitialization\u65B9\u6CD5\u8C03\u7528\u65F6\u673A</h4><p>\u901A\u8FC7\u65B9\u6CD5\u540D\u5B57\u770B\uFF0C\u5B83\u7684\u6267\u884C\u65F6\u95F4\u662F\u5728\u5BF9\u8C61\u521D\u59CB\u5316\u4E4B\u524D\uFF0C<strong>\u8FD9\u4E2A\u521D\u59CB\u5316\u6307\u7684\u662Fbean\u5BF9\u8C61\u7684initMethod\u65B9\u6CD5</strong>\uFF0C\u4E5F\u5C31\u662F\u8BF4postProcessBeforeInitialization\u53EA\u4FDD\u8BC1\u5728\u81EA\u5B9A\u4E49\u7684initMethod\u4E4B\u524D\u6267\u884C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory\u7684initializeBean\u65B9\u6CD5</span>
<span class="token comment">//\u6CE8\u610F\u6B64\u65B9\u6CD5\u662F\u5728\u5BB9\u5668\u521D\u59CB\u5316\u540E\uFF0C\u5B9E\u4F8B\u5316bean\u4F1A\u81EA\u52A8\u8C03\u7528\uFF0C\u9700\u8981\u4F7F\u7528ApplicationContext\u5BB9\u5668\u624D\u4F1A\u81EA\u52A8\u521D\u59CB\u5316bean\u5BF9\u8C61\uFF0CBeanFacotry\u5BB9\u5668\u4E0D\u4F1A\u81EA\u52A8\u521D\u59CB\u5316\u5BF9\u8C61\uFF0C</span>
<span class="token comment">//BeanFacotry\u53EA\u521D\u59CB\u5316\u5BB9\u5668\uFF0C\u5E76\u4E14\u5B9A\u4E49BeanDefinition\uFF0C\u53EA\u6709\u8C03\u7528getBean\u624D\u4F1A\u89E6\u53D1\u5BF9\u8C61\u521D\u59CB\u5316</span>
<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">initializeBean</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
				<span class="token function">invokeAwareMethods</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token function">invokeAwareMethods</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token class-name">Object</span> wrappedBean <span class="token operator">=</span> bean<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mbd <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">isSynthetic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u8C03\u7528\u4E86postProcessBeforeInitialization\uFF0C\u8BFB\u8005\u670B\u53CB\u8BF7\u81EA\u884C\u6253\u5F00applyBeanPostProcessorsBeforeInitialization\u8DDF\u8E2A\u6E90\u7801\uFF0C\u4F1A\u53D1\u73B0\u91CC\u9762\u8C03\u7528\u4E86BeanPostProcessor\u7684postProcessBeforeInitialization\u65B9\u6CD5</span>
			wrappedBean <span class="token operator">=</span> <span class="token function">applyBeanPostProcessorsBeforeInitialization</span><span class="token punctuation">(</span>wrappedBean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u8C03\u7528\u51FAinitMethod\u65B9\u6CD5</span>
			<span class="token function">invokeInitMethods</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> wrappedBean<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>
					<span class="token punctuation">(</span>mbd <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					beanName<span class="token punctuation">,</span> <span class="token string">&quot;Invocation of init method failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mbd <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">isSynthetic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u8C03\u7528postProcessAfterInitialization\uFF0C\u548C\u4E0A\u9762\u7684\u8C03\u7528\u4E86postProcessBeforeInitialization\u4E00\u4E2A\u9053\u7406</span>
			wrappedBean <span class="token operator">=</span> <span class="token function">applyBeanPostProcessorsAfterInitialization</span><span class="token punctuation">(</span>wrappedBean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> wrappedBean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u5F00\u59CB\u6211\u4EE5\u4E3A\u8FD9\u4E2A\u6240\u8C13\u7684\u521D\u59CB\u5316\u4E4B\u524D\u548C\u521D\u59CB\u5316\u4E4B\u540E\u503C\u5F97\u662Fbean\u5BF9\u8C61\u586B\u5145\u5C5E\u6027\u503C\u7684\u524D\u540E\uFF0C\u6BD4\u5982\u4E0B\u9762\u521D\u59CB\u5316\u4E00\u4E2Abean,\u586B\u5145\u5BF9\u8C61name \u548Cage,\u6211\u4E00\u5F00\u59CB\u4EE5\u4E3A\u662F\u5148\u901A\u8FC7\u53CD\u5C04\u521B\u5EFA\u4E86\u4E00\u4E2A\u7A7A\u7684\uFF08\u6307\u7684\u662Fname\u4E3Anull,age\u4E3A0,\u5E76\u4E0D\u662F\u8BF4\u5BF9\u8C61\u662Fnull\uFF09sonoBean\u5BF9\u8C61\uFF0C\u7136\u540E\u8C03\u7528postProcessBeforeInitialization\uFF0C<strong>\u8FD9\u4E2A\u7406\u89E3\u662F\u9519\u8BEF\u7684</strong>\uFF0C\u901A\u8FC7\u4EE5\u4E0A\u6E90\u7801\u53EF\u4EE5\u770B\u51FA\u5B9E\u9645\u4E0A\u662F\u503C\u5F97\u8C03\u7528initMethod\u4E4B\u524D\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sonoscape<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.chen.ioc.bean.SonoBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>singleton<span class="token punctuation">&quot;</span></span> <span class="token attr-name">init-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>init<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u518D\u770B\u770Bbeanpostprocessor\u80FD\u505A\u4EC0\u4E48-\u6709\u4EC0\u4E48\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_2-\u518D\u770B\u770Bbeanpostprocessor\u80FD\u505A\u4EC0\u4E48-\u6709\u4EC0\u4E48\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> 2. \u518D\u770B\u770BBeanPostProcessor\u80FD\u505A\u4EC0\u4E48\uFF0C\u6709\u4EC0\u4E48\u4F7F\u7528\u573A\u666F</h3><p>\u4E00\u4E0B\u81EA\u5B9A\u4E49\u4E86\u4E00\u4E2ABeanPostProcessor\uFF0C\u6211\u4EEC\u4F7F\u7528postProcessBeforeInitialization\u6765\u4ECB\u7ECD\u4E00\u4E0B\u4F7F\u7528\u573A\u666F\uFF0CpostProcessBeforeInitialization\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C</p><ul><li><p>bean\uFF1A\u4EE3\u8868\u901A\u8FC7\u53CD\u5C04\u521B\u5EFA\u7684\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u8FD8\u672A\u8C03\u7528\u5176initMethod\u65B9\u6CD5</p></li><li><p>beanName\uFF1A\u8FD9\u4E2Abean\u7684\u540D\u5B57</p><p>\u6211\u4EEC\u77E5\u9053<strong>\u6BCF\u4E2A\u5BF9\u8C61</strong>\u8C03\u7528\u521D\u59CB\u5316\u65B9\u6CD5\u4E4B\u524D\u90FD\u4F1A\u8C03\u7528BeanPostProcessor\u7684postProcessBeforeInitialization\u65B9\u6CD5\uFF0C\u90A3\u4E48\u6211\u4EEC\u5728postProcessBeforeInitialization\u65B9\u6CD5\u65E2\u7136\u80FD\u62FF\u5230bean\u5BF9\u8C61\uFF0C\u5F53\u7136\u53EF\u4EE5\u5BF9\u5B83\u8FDB\u884C\u4FEE\u6539\uFF0C\u6BD4\u5982\uFF0C\u6211\u60F3\u901A\u8FC7\u6CE8\u89E3\u6765\u7ED9\u5BF9\u5BF9\u8C61\u5C5E\u6027\u8BBE\u7F6E\u9ED8\u8BA4\u503C\uFF0C\u53EF\u4EE5\u770B\u5230\u5728xml\u7ED9bean\u8BBE\u7F6E\u4E86name\u548Cage,\u4F46\u662F\u5728postProcessBeforeInitialization\u4E2D\u901A\u8FC7\u6CE8\u89E3\u4FEE\u6539\u4E86name\u503C\uFF0C\u90A3\u4E48\u5B9E\u9645\u751F\u6548\u7684name\u503C\u5B9E\u9645\u4E0A\u662F\u6CE8\u89E3\u4E0A\u7684\u90A3\u4E2A\u3002</p><p><strong>\u603B\u7684\u6765\u8BF4BeanPostProcessor\u5C31\u662F\u7528\u6765\u4FEE\u6539bean\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u901A\u8FC7\u5B9E\u73B0\u63A5\u53E3\u6216\u8005\u6CE8\u89E3\u7684\u65B9\u5F0F\u6765\u5B9E\u73B0\u4FEE\u6539\u5BF9\u8C61\uFF0C\u8FBE\u5230\u6211\u4EEC\u60F3\u8981\u7684\u6548\u679C</strong></p></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">MyBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;MyBeanPostProcessor init....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[\u65E5\u5FD7\u6807\u5FD7]:  postProcessBeforeInitialization&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">SonoBean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u83B7\u53D6\u6CE8\u89E3</span>
            <span class="token class-name">Custom</span> custom <span class="token operator">=</span> bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Custom</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SonoBean</span> sonoBean <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SonoBean</span><span class="token punctuation">)</span> bean<span class="token punctuation">;</span>
            <span class="token comment">//\u4FEE\u6539\u5BF9\u8C61</span>
            sonoBean<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>custom<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u8FD4\u56DE\u4FEE\u6539\u540E\u7684\u5BF9\u8C61</span>
        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">BeanPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token comment">//Bean\u5BF9\u8C61</span>
<span class="token annotation punctuation">@Custom</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;zhangsan111&quot;</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SonoBean</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">SonoBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;sono bean init..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u81EA\u5B9A\u4E49\u6CE8\u89E3</span>

<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Custom</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> <span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> <span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sonoscape<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.chen.ioc.bean.SonoBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>singleton<span class="token punctuation">&quot;</span></span> <span class="token attr-name">init-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getAge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>postProcessAfterInitialization\u662F\u5728initMethod\u540E\u6267\u884C\uFF0C\u5C31\u4E0D\u505A\u8FC7\u591A\u5206\u6790\u4E86</p><h3 id="_3-bean\u5B9E\u4F8B\u5316\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#_3-bean\u5B9E\u4F8B\u5316\u8FC7\u7A0B" aria-hidden="true">#</a> 3. bean\u5B9E\u4F8B\u5316\u8FC7\u7A0B</h3><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20211018150608365.png" alt="image-20211018150608365" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods   </span>
<span class="token comment">//InitializingBean\u7684\u65B9\u6CD5\uFF0C\u662F\u5728invokeInitMethod\u65B9\u6CD5\u4E2D\u68C0\u67E5\u6267\u884C\u7684\uFF0C\u5E76\u4E14\u653E\u5728\u6700\u524D\uFF0C\u6240\u4EE5\u5B83\u7684afterPropertiesSet\u65B9\u6CD5\u662F\u5728init-method\u4E4B\u524D\u3002</span>
<span class="token comment">//\u5C31\u662F\u56E0\u4E3A\u4F7F\u7528InitializingBean\u5BF9\u4EE3\u7801\u6709\u5165\u4FB5\u6027\uFF0C\u6240\u4EE5spring\u624D\u63D0\u4F9B\u7684initMethod\u65B9\u6CD5\uFF0C\u6240\u4EE5\u5B9E\u9645\u5F00\u53D1\u4E2D\u6211\u4EEC\u53EA\u9700\u8981\u4F7F\u7528init-method\u6307\u5B9A\u521D\u59CB\u5316\u65B9\u6CD5\u5373\u53EF\uFF0C\u4E0D\u63A8\u8350\u4F7F\u7528InitializingBean</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">invokeInitMethods</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>

		<span class="token keyword">boolean</span> isInitializingBean <span class="token operator">=</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">InitializingBean</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isInitializingBean <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>mbd <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">isExternallyManagedInitMethod</span><span class="token punctuation">(</span><span class="token string">&quot;afterPropertiesSet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Invoking afterPropertiesSet() on bean with name &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					<span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PrivilegedExceptionAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
						<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">InitializingBean</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PrivilegedActionException</span> pae<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">throw</span> pae<span class="token punctuation">.</span><span class="token function">getException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u8C03\u7528\u4E86InitializingBean\u7684afterPropertiesSet</span>
				<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">InitializingBean</span>\u7684<span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>mbd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span> initMethodName <span class="token operator">=</span> mbd<span class="token punctuation">.</span><span class="token function">getInitMethodName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>initMethodName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
					<span class="token operator">!</span><span class="token punctuation">(</span>isInitializingBean <span class="token operator">&amp;&amp;</span> <span class="token string">&quot;afterPropertiesSet&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>initMethodName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
					<span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">isExternallyManagedInitMethod</span><span class="token punctuation">(</span>initMethodName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">invokeCustomInitMethod</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> bean<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[e];function c(i,l){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","BeanPostProcessor.html.vue"]]);export{r as default};
