import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.62b7e528.js";const e={},p=t(`<h2 id="_1\u3001\u9700\u6C42" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u9700\u6C42" aria-hidden="true">#</a> 1\u3001\u9700\u6C42</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\u524D\u540E\u5206\u79BB\u9879\u76EE\u4F7F\u7528\u4E0D\u540C\u767B\u5F55\u65B9\u5F0F\u8FDB\u884C\u767B\u5F55
    <span class="token list punctuation">1.</span> \u4F7F\u7528\u5E10\u53F7/\u5BC6\u7801\u767B\u5F55
    <span class="token list punctuation">2.</span> \u4F7F\u7528\u624B\u673A\u53F7/\u9A8C\u8BC1\u7801\u767B\u5F55
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2\u3001\u5B9E\u73B0\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u5B9E\u73B0\u65B9\u6CD5" aria-hidden="true">#</a> 2\u3001\u5B9E\u73B0\u65B9\u6CD5</h2><div class="custom-container note"><p class="custom-container-title">\u6CE8</p><p>Security\u662F\u4E00\u4E2A\u6269\u5C55\u6027\u5F88\u5F3A\u7684\u6846\u67B6\uFF0C\u9884\u7559\u4E86\u5404\u79CD\u7AEF\u70B9\u8FDB\u884C\u6269\u5C55\uFF0C\u591A\u79CD\u65B9\u5F0F\u767B\u5F55\u9700\u8981\u6269\u5C55AuthenticationProvider\uFF0C\u8FDB\u884C\u81EA\u5B9A\u4E49\u5B9E\u73B0\u3002\u9ED8\u8BA4\u60C5\u51B5 Security\u4F7F\u7528\u7684\u662FDAOAuthenticationProvider\uFF0C\u5C31\u662F\u4ECE\u6570\u636E\u5E93\u4E2D\u8BFB\u53D6\u7528\u6237\u540D/\u5BC6\u7801\u8FDB\u884C\u6821\u9A8C\u3002</p></div><h3 id="_2-1-\u81EA\u5B9A\u4E49authenticationprovider" tabindex="-1"><a class="header-anchor" href="#_2-1-\u81EA\u5B9A\u4E49authenticationprovider" aria-hidden="true">#</a> 2.1 \u81EA\u5B9A\u4E49AuthenticationProvider</h3><div class="custom-container danger"><p class="custom-container-title">\u601D\u8003</p><pre><code>\u81EA\u5B9A\u4E49\u4E86AuthenticationProvider\u540E\u4E3A\u4EC0\u4E48\u8FDEAuthenticationToken\u4E5F\u8981\u81EA\u5B9A\u4E49\uFF1F
\u4E3A\u4EC0\u4E48\u4E0D\u76F4\u63A5\u7528UsernamePasswordAuthenticationToken\uFF1F
</code></pre></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u81EA\u5B9A\u4E49AuthenticationProvider</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomMobileAuthenticationProvider</span> <span class="token keyword">implements</span> <span class="token class-name">AuthenticationProvider</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">UserDetailsService</span> userDetailsService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;enter into custom AuthenticationProvider&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//</span>
        <span class="token class-name">CustomSecurityUser</span> customSecurityUser <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">CustomSecurityUser</span><span class="token punctuation">)</span> userDetailsService<span class="token punctuation">.</span><span class="token function">loadUserByUsername</span><span class="token punctuation">(</span>authentication<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PhoneAuthenticationToken</span> phoneAuthenticationToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PhoneAuthenticationToken</span><span class="token punctuation">(</span>customSecurityUser<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> phoneAuthenticationToken<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supports</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> authentication<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">PhoneAuthenticationToken</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-\u81EA\u5B9A\u4E49authenticationtoken" tabindex="-1"><a class="header-anchor" href="#_2-2-\u81EA\u5B9A\u4E49authenticationtoken" aria-hidden="true">#</a> 2.2 \u81EA\u5B9A\u4E49AuthenticationToken</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u81EA\u5B9A\u4E49AuthenticationToken</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PhoneAuthenticationToken</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractAuthenticationToken</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token class-name">SpringSecurityCoreVersion</span><span class="token punctuation">.</span>SERIAL_VERSION_UID<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> principal<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Object</span> credentials<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * This constructor can be safely used by any code that wishes to create a
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">UsernamePasswordAuthenticationToken</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, as the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">isAuthenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
     * will return <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">false</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>.
     *
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">PhoneAuthenticationToken</span><span class="token punctuation">(</span><span class="token class-name">Object</span> principal<span class="token punctuation">,</span> <span class="token class-name">Object</span> credentials<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>principal <span class="token operator">=</span> principal<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>credentials <span class="token operator">=</span> credentials<span class="token punctuation">;</span>
        <span class="token function">setAuthenticated</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * This constructor should only be used by <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">AuthenticationManager</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> or
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">AuthenticationProvider</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> implementations that are satisfied with
     * producing a trusted (i.e. <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">isAuthenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> = <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">true</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>)
     * authentication token.
     * <span class="token keyword">@param</span> <span class="token parameter">principal</span>
     * <span class="token keyword">@param</span> <span class="token parameter">credentials</span>
     * <span class="token keyword">@param</span> <span class="token parameter">authorities</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">PhoneAuthenticationToken</span><span class="token punctuation">(</span><span class="token class-name">Object</span> principal<span class="token punctuation">,</span> <span class="token class-name">Object</span> credentials<span class="token punctuation">,</span>
                                               <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GrantedAuthority</span><span class="token punctuation">&gt;</span></span> authorities<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>authorities<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>principal <span class="token operator">=</span> principal<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>credentials <span class="token operator">=</span> credentials<span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">setAuthenticated</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// must use super, as we override</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * This factory method can be safely used by any code that wishes to create a
     * unauthenticated <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">UsernamePasswordAuthenticationToken</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>.
     * <span class="token keyword">@param</span> <span class="token parameter">principal</span>
     * <span class="token keyword">@param</span> <span class="token parameter">credentials</span>
     * <span class="token keyword">@return</span> UsernamePasswordAuthenticationToken with false isAuthenticated() result
     *
     * <span class="token keyword">@since</span> 5.7
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span> <span class="token function">unauthenticated</span><span class="token punctuation">(</span><span class="token class-name">Object</span> principal<span class="token punctuation">,</span> <span class="token class-name">Object</span> credentials<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>principal<span class="token punctuation">,</span> credentials<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * This factory method can be safely used by any code that wishes to create a
     * authenticated <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">UsernamePasswordAuthenticationToken</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>.
     * <span class="token keyword">@param</span> <span class="token parameter">principal</span>
     * <span class="token keyword">@param</span> <span class="token parameter">credentials</span>
     * <span class="token keyword">@return</span> UsernamePasswordAuthenticationToken with true isAuthenticated() result
     *
     * <span class="token keyword">@since</span> 5.7
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span> <span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token class-name">Object</span> principal<span class="token punctuation">,</span> <span class="token class-name">Object</span> credentials<span class="token punctuation">,</span>
                                                                    <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GrantedAuthority</span><span class="token punctuation">&gt;</span></span> authorities<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>principal<span class="token punctuation">,</span> credentials<span class="token punctuation">,</span> authorities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>credentials<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>principal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAuthenticated</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> isAuthenticated<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IllegalArgumentException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token operator">!</span>isAuthenticated<span class="token punctuation">,</span>
                <span class="token string">&quot;Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">setAuthenticated</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eraseCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">eraseCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>credentials <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\u56DE\u7B54\u4E0A\u9762\u7684\u95EE\u9898\uFF0CAuthenticationProvider\u63A5\u53E3\u4E2D\u4E2D\u6709\u4E2Aboolean supports(Class<span class="token prolog">&lt;?&gt; authentication);\u65B9\u6CD5\uFF0C
\u6B64\u65B9\u6CD5\u8868\u660E\u8BE5AuthenticationProvider\u7684\u5904\u7406\u8303\u56F4\uFF0C\u6211\u4EEC\u77E5\u9053AuthenticationManager\u7684\u5B9E\u73B0\u7C7B\u4E00\u822C\u7528\u7684\u662FProviderManager\uFF0C
\u5728\u6B64\u7C7B\u4E2D\u7BA1\u7406\u4E86\u5F88\u591AAuthenticationProvider\u8D1F\u8D23\u771F\u6B63\u7684\u8BA4\u8BC1\u5DE5\u4F5C\uFF0C\u90A3\u4E48\u5F53\u6709\u591A\u4E2AAuthenticationProvider\u7684\u65F6\u5019\uFF0C\u5B83\u4EEC
\u662F\u5982\u4F55\u786E\u5B9A\u67D0\u4E2AAuthenticationProvider\u662F\u5426\u9700\u8981\u5BF9\u6B64\u6B21\u767B\u5F55\u8FDB\u884C\u8BA4\u8BC1\u5462\uFF1F\u7384\u673A\u5C31\u5728\u4E0A\u9762\u7684support\u65B9\u6CD5\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\u5B83\u7684\u5B9E\u73B0\u5982\u4E0B


    @Override
    public boolean supports(Class&lt;?&gt;</span> authentication) {
        //authentication\u662FPhoneAuthenticationToken\u6216\u5176\u5B50\u7C7B
        return PhoneAuthenticationToken.class.isAssignableFrom(authentication);
    }

\u4E0A\u9762\u53C2\u6570authentication\uFF0C\u662F\u5728\u8BA4\u8BC1\u65F6\u4F20\u9012\u8FC7\u6765\u7684\uFF0C\u5728Service\u5C42\u6388\u6743\u662F\u4F20\u9012\u7684\u5982\u4E0B\u56FE\u6240\u793A\uFF0C\u5F53\u8BA4\u8BC1\u65F6\u4F20\u9012\u7684PhoneAuthenticationToken\u7C7B\u578B\uFF0C
\u5219\u6B64\u7C7B\u578B\u7ECF\u8FC7supports\u65B9\u6CD5\u5224\u65AD\u65F6\u8BE5Provider\u662F\u5426\u8981\u5904\u7406\u6B64\u65F6\u8BA4\u8BC1\uFF0C\u5F53\u7136\u4E0A\u9762\u7684\u53EA\u662F\u4E00\u822C\u5199\u6CD5\uFF0C\u53EF\u4EE5\u6839\u636E\u4E1A\u52A1\u9700\u6C42\u5199\u4E00\u4E9B\u590D\u6742\u7684\u5224\u65AD\u3002

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221222214542.png" alt="20221222214542" loading="lazy"></p><h3 id="_2-3-\u81EA\u5B9A\u4E49\u767B\u5F55\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_2-3-\u81EA\u5B9A\u4E49\u767B\u5F55\u63A5\u53E3" aria-hidden="true">#</a> 2.3 \u81EA\u5B9A\u4E49\u767B\u5F55\u63A5\u53E3</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//Controller\u5C42</span>
    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;phone&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> phone<span class="token punctuation">,</span><span class="token class-name">String</span> code<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> loginService<span class="token punctuation">.</span><span class="token function">loginByPhone</span><span class="token punctuation">(</span>phone<span class="token punctuation">,</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">//Service\u5C42</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span> <span class="token function">loginByPhone</span><span class="token punctuation">(</span><span class="token class-name">String</span> phone<span class="token punctuation">,</span> <span class="token class-name">String</span> code<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">//TODO \u6821\u9A8C\u9A8C\u8BC1\u7801\u5408\u6CD5\u6027</span>

        <span class="token comment">//\u6839\u636E\u624B\u673A\u53F7\u548C\u9A8C\u8BC1\u7801\u67E5\u8BE2\u7528\u6237\uFF0C\u624B\u673A\u53F7\u2014\u2014&gt;\u7528\u6237</span>
        <span class="token class-name">SysUser</span> sysUser <span class="token operator">=</span>  sysUserService<span class="token punctuation">.</span><span class="token function">findUserByPhone</span><span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6784\u9020\u4E00\u4E2A\u672A\u8BA4\u8BC1\u7684\u5BF9\u8C61</span>
        <span class="token class-name">PhoneAuthenticationToken</span> phoneAuthenticationToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PhoneAuthenticationToken</span><span class="token punctuation">(</span>sysUser<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sysUser<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//1. \u4F7F\u7528AuthenticationManager\u8BA4\u8BC1\u7528\u6237</span>
        <span class="token class-name">Authentication</span> authenticate <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>

            authenticate <span class="token operator">=</span> authenticationManager<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>phoneAuthenticationToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//2. \u8BA4\u8BC1\u5931\u8D25</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BA4\u8BC1\u5931\u8D25\uFF0C{}&quot;</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//3. \u8BA4\u8BC1\u901A\u8FC7\uFF0C\u751F\u6210token,key-&gt;token,value-&gt;username</span>
        <span class="token class-name">String</span> token <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">fastUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CustomSecurityUser</span> customSecurityUser <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">CustomSecurityUser</span><span class="token punctuation">)</span> authenticate<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//4. token\u5B58\u5165redis</span>
        redisTemplate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">CacheConst</span><span class="token punctuation">.</span>TOKEN_PREFIX <span class="token operator">+</span> <span class="token class-name">StrPool</span><span class="token punctuation">.</span>COLON <span class="token operator">+</span> token<span class="token punctuation">,</span> customSecurityUser<span class="token punctuation">,</span> expiration<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;access_token&quot;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;authorities&quot;</span><span class="token punctuation">,</span> customSecurityUser<span class="token punctuation">.</span><span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-\u914D\u7F6E\u81EA\u5B9A\u4E49\u7684authenticationprovider" tabindex="-1"><a class="header-anchor" href="#_2-4-\u914D\u7F6E\u81EA\u5B9A\u4E49\u7684authenticationprovider" aria-hidden="true">#</a> 2.4 \u914D\u7F6E\u81EA\u5B9A\u4E49\u7684AuthenticationProvider</h3><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\u6CE8\u610F\u8981\u8BB0\u5F97\u4FDD\u7559\u9ED8\u8BA4\u7684\u767B\u5F55\u65B9\u6CD5\uFF0C\u5F53\u8BBE\u7F6E\u4E86\u81EA\u5B9A\u4E49AuthenticationProvider\u65F6\uFF0CSecurity\u4E0D\u4F1A\u81EA\u52A8\u6CE8\u5165\u539F\u6765\u9ED8\u8BA4
\u7684DAOAuthenticationProvider\u4E86\uFF0C\u5982\u679C\u60F3\u4FDD\u7559\u7684\u8BDD\uFF0C\u9700\u8981\u6211\u4EEC\u624B\u52A8\u6CE8\u5165\uFF0C
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u65B0\u7248\u672Csecurity\u83B7\u53D6AuthenticationManager\u7684\u4E24\u79CD\u65B9\u6CD5
     * <span class="token keyword">@param</span> <span class="token parameter">authenticationConfiguration</span>
     * <span class="token keyword">@return</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
     */</span>
<span class="token comment">//    @Bean</span>
<span class="token comment">//    public AuthenticationManager authenticationManager(AuthenticationConfiguration authenticationConfiguration) throws Exception {</span>
<span class="token comment">//        return authenticationConfiguration.getAuthenticationManager();</span>
<span class="token comment">//    }</span>


    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">AuthenticationManager</span> <span class="token function">authManager</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">AuthenticationManagerBuilder</span> authenticationManagerBuilder <span class="token operator">=</span>
                http<span class="token punctuation">.</span><span class="token function">getSharedObject</span><span class="token punctuation">(</span><span class="token class-name">AuthenticationManagerBuilder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        authenticationManagerBuilder<span class="token punctuation">.</span><span class="token function">authenticationProvider</span><span class="token punctuation">(</span>customMobileAuthenticationProvider<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u81EA\u5B9A\u4E49\u7684</span>
        authenticationManagerBuilder<span class="token punctuation">.</span><span class="token function">authenticationProvider</span><span class="token punctuation">(</span><span class="token function">authProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u539F\u6765\u9ED8\u8BA4\u7684</span>

        <span class="token keyword">return</span> authenticationManagerBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * \u9ED8\u8BA4AuthenticationProvider,\u5982\u679C\u521B\u5EFA\u4E86\u81EA\u5B9A\u4E49AuthenticationProvider\uFF0C\u5219\u9ED8\u8BA4\u7684\u5C31\u4E0D\u4F1A\u88AB\u6CE8\u5165\u5230AuthenticationManager,
     * \u6240\u4EE5\u5982\u679C\u8FD8\u60F3\u4FDD\u7559\u9ED8\u8BA4\u7684\uFF0C\u9700\u8981\u624B\u52A8\u521B\u5EFAbean,\u5E76\u5728AuthenticationManager\u4E2D\u6CE8\u5165
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DaoAuthenticationProvider</span> <span class="token function">authProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DaoAuthenticationProvider</span> authenticationProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DaoAuthenticationProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        authenticationProvider<span class="token punctuation">.</span><span class="token function">setPasswordEncoder</span><span class="token punctuation">(</span><span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        authenticationProvider<span class="token punctuation">.</span><span class="token function">setUserDetailsService</span><span class="token punctuation">(</span>userDetailsService<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> authenticationProvider<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223102912.png" alt="20221223102912" loading="lazy"></p>`,17),c=[p];function o(i,l){return s(),a("div",null,c)}var k=n(e,[["render",o],["__file","CustomAuthenticationProvider.html.vue"]]);export{k as default};
