import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as e,e as a}from"./app-COSs6b7v.js";const s={},o=a(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>spring-security-oauth2已经被废弃，采用Security5.7 之后就用spring-security-oauth2-authorization-server，</p><h2 id="oauth2-token" tabindex="-1"><a class="header-anchor" href="#oauth2-token"><span>/oauth2/token</span></a></h2><p>在之前的老版本中请求token的端点是在一个叫做TokenEndpoint的类中，此类可以处理/oauth/token请求，这个类可看成是一个Controller，而在新版本中已经没有这个类，新版本中请求token的端点是/oauth2/token,我看源码没有找到对应的controller,直到我debug源码，才发现根本没有类似之前的专门处理/oauth/token的controller,其实新版本在Filter（实际是OAuth2TokenEndpointFilter）中就已经直接响应给客户端了， <img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230509201806.png" alt="20230509201806"></p><p>下面写个demo测试在filter中直接响应，新建一个springboot的web项目，添加一个filter，这个过滤器仅仅用来测试，所有请求都给他返回一个“hello world&quot;，我们请求任意路径发现确实如此，根本没有进入Controller，我甚至都没定义Controller，打破了我的惯性思维，潜意识认为只要有请求，最终都要进入Controller,谬矣。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomFilter</span> <span class="token keyword">extends</span> <span class="token class-name">OncePerRequestFilter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230509201658.png" alt="20230509201658"></p>`,7),i=[o];function r(p,c){return n(),e("div",null,i)}const h=t(s,[["render",r],["__file","spring-security-oauth2-authorization-server.html.vue"]]),d=JSON.parse('{"path":"/java/framework/security/spring-security-oauth2-authorization-server.html","title":"spring-security-oauth2-authorization-server","lang":"zh-CN","frontmatter":{"title":"spring-security-oauth2-authorization-server","date":"2023-05-09T00:00:00.000Z","isOriginal":true,"description":"介绍 spring-security-oauth2已经被废弃，采用Security5.7 之后就用spring-security-oauth2-authorization-server， /oauth2/token 在之前的老版本中请求token的端点是在一个叫做TokenEndpoint的类中，此类可以处理/oauth/token请求，这个类可看成是...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/blog/java/framework/security/spring-security-oauth2-authorization-server.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"spring-security-oauth2-authorization-server"}],["meta",{"property":"og:description","content":"介绍 spring-security-oauth2已经被废弃，采用Security5.7 之后就用spring-security-oauth2-authorization-server， /oauth2/token 在之前的老版本中请求token的端点是在一个叫做TokenEndpoint的类中，此类可以处理/oauth/token请求，这个类可看成是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230509201806.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"ChenSino"}],["meta",{"property":"article:published_time","content":"2023-05-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"spring-security-oauth2-authorization-server\\",\\"image\\":[\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230509201806.png\\",\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230509201658.png\\"],\\"datePublished\\":\\"2023-05-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ChenSino\\",\\"url\\":\\"https://ChenSino.github.io\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"/oauth2/token","slug":"oauth2-token","link":"#oauth2-token","children":[]}],"git":{"createdTime":1683634730000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"462488588@qq.com","commits":1},{"name":"chenxk","email":"chenxk@sonoscape.net","commits":1}]},"readingTime":{"minutes":1.02,"words":307},"filePathRelative":"java/framework/security/spring-security-oauth2-authorization-server.md","localizedDate":"2023年5月9日","excerpt":"<h2>介绍</h2>\\n<p>spring-security-oauth2已经被废弃，采用Security5.7 之后就用spring-security-oauth2-authorization-server，</p>\\n<h2>/oauth2/token</h2>\\n<p>在之前的老版本中请求token的端点是在一个叫做TokenEndpoint的类中，此类可以处理/oauth/token请求，这个类可看成是一个Controller，而在新版本中已经没有这个类，新版本中请求token的端点是/oauth2/token,我看源码没有找到对应的controller,直到我debug源码，才发现根本没有类似之前的专门处理/oauth/token的controller,其实新版本在Filter（实际是OAuth2TokenEndpointFilter）中就已经直接响应给客户端了，\\n<img src=\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230509201806.png\\" alt=\\"20230509201806\\"></p>","autoDesc":true}');export{h as comp,d as data};
