import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as n,e as o}from"./app-xHrnIhLr.js";const r={},s=o('<h2 id="_1、-refresh-token介绍" tabindex="-1"><a class="header-anchor" href="#_1、-refresh-token介绍"><span>1、 refresh_token介绍</span></a></h2><p>==refresh_token是OAuth2协议中的一个概念==，用于在access_token过期时获取新的access_token，说道token续签大多博客上来就refresh_token巴拉巴拉。在OAuth2协议中，通过客户端以授权服务器的名义请求access_token，客户端会收到access_token和refresh_token，并在access_token过期时使用refresh_token申请新的access_token。refresh_token的安全性非常重要，授权服务器会根据设定的有效期对refresh_token进行管理，以确保对用户的信息和资源进行保护。同时，在使用refresh_token时，也需要进行国家或行业标准的数据保护和安全性认证，以避免出现不必要的风险和隐私泄漏。</p><h2 id="_2、token过期处理" tabindex="-1"><a class="header-anchor" href="#_2、token过期处理"><span>2、token过期处理</span></a></h2><h3 id="_2-1-方式一-重新登录" tabindex="-1"><a class="header-anchor" href="#_2-1-方式一-重新登录"><span>2.1 方式一，重新登录</span></a></h3><p>让用户重新登录，获得新的Token，但是这种方式体验很差，通常Token过期时间都比较短，每次都要重新登录操作。</p><h3 id="_2-2-方式二-续签-刷新-token" tabindex="-1"><a class="header-anchor" href="#_2-2-方式二-续签-刷新-token"><span>2.2 方式二，续签（刷新）token</span></a></h3><p>续签token,避免用户在操作的过程中被强制下线，续签也有多种方式</p><ol><li>在每个请求响应后进行拦截，如果发现请求失败（Token过期导致的）时，刷新Token再刷新请求接口。这种方式的优点是无需Token过期时间字段且无需判断时间，缺点在于多消耗一次请求。</li><li>在每个请求发起前进行拦截，根据expires_in判断token是否过期，如果过期则会刷新后再继续请求接口。这个方法的优点是请求前拦截处理，能节省请求次数，缺点是后端需要提供Token过期时间字段，并且需要结合计算机本地时间判断，如果计算机时间被篡改，拦截就会失败。</li><li>添加一个过滤器，每个请求进来都重置token的过期时间，这种方式对服务器资源消耗增加了</li><li>在OAuth2.0协议中，可以使用refresh_token实现自动续期token。这个方案需要你的应用程序使用OAuth2.0的认证机制，并且获取到了refresh_token。</li><li>使用JSON Web Token：对于使用JSON Web Token (JWT)的应用程序，可以在JWT中设置token的过期时间，预先考虑过期时间，合理设置有效期，通常情况下，token的有效期建议短一些，这样更安全。在即将到期时，在后端进行更新或延长有效期。</li></ol>',8),a=[s];function h(c,k){return t(),n("div",null,a)}const l=e(r,[["render",h],["__file","RefreshToken.html.vue"]]),p=JSON.parse('{"path":"/other/web/RefreshToken.html","title":"refresh_token","lang":"zh-CN","frontmatter":{"title":"refresh_token","date":"2023-05-08T00:00:00.000Z","isOriginal":true,"description":"1、 refresh_token介绍 ==refresh_token是OAuth2协议中的一个概念==，用于在access_token过期时获取新的access_token，说道token续签大多博客上来就refresh_token巴拉巴拉。在OAuth2协议中，通过客户端以授权服务器的名义请求access_token，客户端会收到access_tok...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/other/web/RefreshToken.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"refresh_token"}],["meta",{"property":"og:description","content":"1、 refresh_token介绍 ==refresh_token是OAuth2协议中的一个概念==，用于在access_token过期时获取新的access_token，说道token续签大多博客上来就refresh_token巴拉巴拉。在OAuth2协议中，通过客户端以授权服务器的名义请求access_token，客户端会收到access_tok..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"ChenSino"}],["meta",{"property":"article:published_time","content":"2023-05-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"refresh_token\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ChenSino\\",\\"url\\":\\"https://ChenSino.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、 refresh_token介绍","slug":"_1、-refresh-token介绍","link":"#_1、-refresh-token介绍","children":[]},{"level":2,"title":"2、token过期处理","slug":"_2、token过期处理","link":"#_2、token过期处理","children":[{"level":3,"title":"2.1 方式一，重新登录","slug":"_2-1-方式一-重新登录","link":"#_2-1-方式一-重新登录","children":[]},{"level":3,"title":"2.2 方式二，续签（刷新）token","slug":"_2-2-方式二-续签-刷新-token","link":"#_2-2-方式二-续签-刷新-token","children":[]}]}],"git":{"createdTime":1683634730000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"462488588@qq.com","commits":1},{"name":"chenxk","email":"chenxk@sonoscape.net","commits":1}]},"readingTime":{"minutes":2.1,"words":631},"filePathRelative":"other/web/RefreshToken.md","localizedDate":"2023年5月8日","excerpt":"<h2>1、 refresh_token介绍</h2>\\n<p>==refresh_token是OAuth2协议中的一个概念==，用于在access_token过期时获取新的access_token，说道token续签大多博客上来就refresh_token巴拉巴拉。在OAuth2协议中，通过客户端以授权服务器的名义请求access_token，客户端会收到access_token和refresh_token，并在access_token过期时使用refresh_token申请新的access_token。refresh_token的安全性非常重要，授权服务器会根据设定的有效期对refresh_token进行管理，以确保对用户的信息和资源进行保护。同时，在使用refresh_token时，也需要进行国家或行业标准的数据保护和安全性认证，以避免出现不必要的风险和隐私泄漏。</p>","autoDesc":true}');export{l as comp,p as data};
