import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e}from"./app-eaM1OiHO.js";const t={},p=e(`<h2 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述"><span>问题描述</span></a></h2><p>有一个业务服务，启动了两个做成负载均衡，分别为10.6.6.11:2221,10.6.6.11:5221,为了调试，所以把route修改为只路由到5221,但是网关服务配置好route后，发送请求无法路由到指定的10.6.6.11:5221服务，一直路由到另一个服务10.6.6.11:2221上，并且连自定义的gatewayfilter都失效了</p><p>请求路径为：<code>http://gateway:port/mcs/test</code> 配置如下</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token comment"># 让gateway可以发现nacos中的微服务，实现动态路由</span>
        <span class="token key atrule">locator</span><span class="token punctuation">:</span>
          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token key atrule">lower-case-service-id</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> StripPrefix=0
      <span class="token comment">#路由数组[路由 就是指定当请求满足什么条件的时候转到哪个微服务]</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> mcs
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//10.10.102.106<span class="token punctuation">:</span><span class="token number">5221</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/mcs/<span class="token important">**</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> StripPrefix=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原因" tabindex="-1"><a class="header-anchor" href="#原因"><span>原因</span></a></h2><p>还是对gateway不够熟悉，其实是因为配置了<code>spring.cloud.gateway.locator.enable=true</code>，这个配置会开启服务自动发现，从而实现动态路由。意思就是当你开启了这个配置，就会自动去到你的请求路径去找服务名，这里我的服务名就是mcs,当请求<code>http://gateway:port/mcs/test</code>，发现有mcs,就会自动把这个请求路由到服务名为mcs的服务上（去注册中心找这个服务），如果找不到这个服务，那么就会继续从下面配置的route中去看看有没有匹配的。所以这里可以在nacos手动把msc下线，你就会发现下面的route生效了，可以路由到5221了。</p><blockquote><p>动态路由：<br> 动态路由说白了就是每新注册一个服务，都可以通过<code>http://gateway:port/serviceName/xxx</code>去访问，而无需手动配置路由，这种情况在大多数情况是很方便，但是遇到需要自定义路由就非常不好，比如我们上面需要把所有请求都路由到5221.。</p></blockquote><h2 id="针对本次问题的解决方法" tabindex="-1"><a class="header-anchor" href="#针对本次问题的解决方法"><span>针对本次问题的解决方法</span></a></h2><h3 id="方法1" tabindex="-1"><a class="header-anchor" href="#方法1"><span>方法1</span></a></h3><p>把动态路由配置关闭（默认就是关闭）</p><h3 id="方法2" tabindex="-1"><a class="header-anchor" href="#方法2"><span>方法2</span></a></h3><p>到nacos把服务下线，route中的路由就会生效，当然uri只能用具体ip的形式了，不能使用lb://servicename这种负载均衡写法了</p>`,12),o=[p];function l(c,i){return a(),s("div",null,o)}const d=n(t,[["render",l],["__file","SpringCloudGateway.html.vue"]]),k=JSON.parse('{"path":"/java/framework/springcloud/SpringCloudGateway.html","title":"网关路由失效","lang":"zh-CN","frontmatter":{"title":"网关路由失效","date":"2023-06-20T00:00:00.000Z","isOriginal":true,"description":"问题描述 有一个业务服务，启动了两个做成负载均衡，分别为10.6.6.11:2221,10.6.6.11:5221,为了调试，所以把route修改为只路由到5221,但是网关服务配置好route后，发送请求无法路由到指定的10.6.6.11:5221服务，一直路由到另一个服务10.6.6.11:2221上，并且连自定义的gatewayfilter都失效...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/java/framework/springcloud/SpringCloudGateway.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"网关路由失效"}],["meta",{"property":"og:description","content":"问题描述 有一个业务服务，启动了两个做成负载均衡，分别为10.6.6.11:2221,10.6.6.11:5221,为了调试，所以把route修改为只路由到5221,但是网关服务配置好route后，发送请求无法路由到指定的10.6.6.11:5221服务，一直路由到另一个服务10.6.6.11:2221上，并且连自定义的gatewayfilter都失效..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"ChenSino"}],["meta",{"property":"article:published_time","content":"2023-06-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网关路由失效\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ChenSino\\",\\"url\\":\\"https://ChenSino.github.io\\"}]}"]]},"headers":[{"level":2,"title":"问题描述","slug":"问题描述","link":"#问题描述","children":[]},{"level":2,"title":"原因","slug":"原因","link":"#原因","children":[]},{"level":2,"title":"针对本次问题的解决方法","slug":"针对本次问题的解决方法","link":"#针对本次问题的解决方法","children":[{"level":3,"title":"方法1","slug":"方法1","link":"#方法1","children":[]},{"level":3,"title":"方法2","slug":"方法2","link":"#方法2","children":[]}]}],"git":{"createdTime":1687663284000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"462488588@qq.com","commits":2}]},"readingTime":{"minutes":1.83,"words":550},"filePathRelative":"java/framework/springcloud/SpringCloudGateway.md","localizedDate":"2023年6月20日","excerpt":"<h2>问题描述</h2>\\n<p>有一个业务服务，启动了两个做成负载均衡，分别为10.6.6.11:2221,10.6.6.11:5221,为了调试，所以把route修改为只路由到5221,但是网关服务配置好route后，发送请求无法路由到指定的10.6.6.11:5221服务，一直路由到另一个服务10.6.6.11:2221上，并且连自定义的gatewayfilter都失效了</p>\\n<p>请求路径为：<code>http://gateway:port/mcs/test</code>\\n配置如下</p>\\n<div class=\\"language-yaml\\" data-ext=\\"yml\\" data-title=\\"yml\\"><pre class=\\"language-yaml\\"><code><span class=\\"token key atrule\\">spring</span><span class=\\"token punctuation\\">:</span>\\n  <span class=\\"token key atrule\\">cloud</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token key atrule\\">gateway</span><span class=\\"token punctuation\\">:</span>\\n      <span class=\\"token key atrule\\">discovery</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token comment\\"># 让gateway可以发现nacos中的微服务，实现动态路由</span>\\n        <span class=\\"token key atrule\\">locator</span><span class=\\"token punctuation\\">:</span>\\n          <span class=\\"token key atrule\\">enabled</span><span class=\\"token punctuation\\">:</span> <span class=\\"token boolean important\\">true</span>\\n          <span class=\\"token key atrule\\">lower-case-service-id</span><span class=\\"token punctuation\\">:</span> <span class=\\"token boolean important\\">true</span>\\n          <span class=\\"token key atrule\\">filters</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token punctuation\\">-</span> StripPrefix=0\\n      <span class=\\"token comment\\">#路由数组[路由 就是指定当请求满足什么条件的时候转到哪个微服务]</span>\\n      <span class=\\"token key atrule\\">routes</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">id</span><span class=\\"token punctuation\\">:</span> mcs\\n          <span class=\\"token key atrule\\">uri</span><span class=\\"token punctuation\\">:</span> http<span class=\\"token punctuation\\">:</span>//10.10.102.106<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">5221</span>\\n          <span class=\\"token key atrule\\">predicates</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token punctuation\\">-</span> Path=/mcs/<span class=\\"token important\\">**</span>\\n          <span class=\\"token key atrule\\">filters</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token punctuation\\">-</span> StripPrefix=1\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
