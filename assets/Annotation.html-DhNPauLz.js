import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as r,c,a as n,b as e,d as t,w as l,e as s}from"./app-xHrnIhLr.js";const d={},u=s(`<h2 id="_1、依赖注入" tabindex="-1"><a class="header-anchor" href="#_1、依赖注入"><span>1、依赖注入</span></a></h2><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code> <span class="token list punctuation">1.</span> @Autowired
     是Spring中的注解，按照类型注入，此注解可以用于字段属性上、setter方法上、构造函数上，用在字段上则Spring底层会使用反射对字段进行赋值，用成员变量的在setter方法上，则会调用setter方法进行注入。从Spring4.3开始，如果只有一个有参的构造方法，则可以省略构造方法上的@Autowired
 <span class="token list punctuation">2.</span> @Autowired + @Qualifier 
    按照bean的名字注入
 <span class="token list punctuation">3.</span> @Resource
    是JavaEE规范中的注解在JSR250引入，默认是按照bean的名字注入，如果没指定名字则按照类型注入
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、关于spring不建议使用-autowired在字段上" tabindex="-1"><a class="header-anchor" href="#_2、关于spring不建议使用-autowired在字段上"><span>2、关于Spring不建议使用@Autowired在字段上</span></a></h2>`,3),m={href:"https://juejin.cn/post/6965673679342551048",target:"_blank",rel:"noopener noreferrer"},g=s(`<p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223170907.png" alt="Idea提示Field inject is not recommanded"></p><p>idea自动修复方法如下，正好说明了只有一个带参的构造方法时，可以省略构造方法上的@Autowired</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223170953.png" alt="Idea给出的修复方法"></p><h3 id="_2-1-如果使用-autowoired在字段上-可能带来的问题" tabindex="-1"><a class="header-anchor" href="#_2-1-如果使用-autowoired在字段上-可能带来的问题"><span>2.1 如果使用@Autowoired在字段上，可能带来的问题</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">Person</span> person<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> company<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>company <span class="token operator">=</span> person<span class="token punctuation">.</span><span class="token function">getCompany</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动报错:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>Instantiation of bean failed<span class="token punctuation">;</span> nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate <span class="token punctuation">[</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span>: Constructor threw exception<span class="token punctuation">;</span> nested exception is java.lang.NullPointerException
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),h=n("ol",null,[n("li",null,"反射调用构造方法，创建一个对象"),n("li",null,"使用反射给person赋值"),n("li",null,"调用BeanPostProcessor的前置方法"),n("li",null,"调用初始化方法"),n("li",null,"BeanPostProcessor后置方法"),n("li",null,"得到对象")],-1),v=n("p",null,[e("实际上的过程是： 使用反射调用构造方法，构造方法执行"),n("code",null,"this.company = person.getCompany();"),e("发现此时person是空，直接报空指针。")],-1);function k(b,w){const i=a("ExternalLinkIcon"),o=a("RouteLink");return r(),c("div",null,[u,n("p",null,[n("a",m,[e("此参考此博客"),t(i)])]),g,n("p",null,[e("要搞明白报错原因，需要对bean的生命周期有所了解，参考"),t(o,{to:"/java/framework/spring/CircularDependency.html"},{default:l(()=>[e("bean生命周期")]),_:1}),e("，Spring容器创建UserServiceImpl的实例正常过程如下：")]),h,v])}const f=p(d,[["render",k],["__file","Annotation.html.vue"]]),S=JSON.parse('{"path":"/java/framework/spring/Annotation.html","title":"注解","lang":"zh-CN","frontmatter":{"title":"注解","date":"2022-12-21T00:00:00.000Z","category":["Spring"],"description":"1、依赖注入 2、关于Spring不建议使用@Autowired在字段上 此参考此博客 Idea提示Field inject is not recommanded idea自动修复方法如下，正好说明了只有一个带参的构造方法时，可以省略构造方法上的@Autowired Idea给出的修复方法 2.1 如果使用@Autowoired在字段上，可能带来的问题...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/java/framework/spring/Annotation.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"注解"}],["meta",{"property":"og:description","content":"1、依赖注入 2、关于Spring不建议使用@Autowired在字段上 此参考此博客 Idea提示Field inject is not recommanded idea自动修复方法如下，正好说明了只有一个带参的构造方法时，可以省略构造方法上的@Autowired Idea给出的修复方法 2.1 如果使用@Autowoired在字段上，可能带来的问题..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223170907.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"ChenSino"}],["meta",{"property":"article:published_time","content":"2022-12-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"注解\\",\\"image\\":[\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223170907.png\\",\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223170953.png\\"],\\"datePublished\\":\\"2022-12-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ChenSino\\",\\"url\\":\\"https://ChenSino.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、依赖注入","slug":"_1、依赖注入","link":"#_1、依赖注入","children":[]},{"level":2,"title":"2、关于Spring不建议使用@Autowired在字段上","slug":"_2、关于spring不建议使用-autowired在字段上","link":"#_2、关于spring不建议使用-autowired在字段上","children":[{"level":3,"title":"2.1 如果使用@Autowoired在字段上，可能带来的问题","slug":"_2-1-如果使用-autowoired在字段上-可能带来的问题","link":"#_2-1-如果使用-autowoired在字段上-可能带来的问题","children":[]}]}],"git":{"createdTime":1671630421000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"462488588@qq.com","commits":1},{"name":"ChenSino","email":"chenxk@sonoscape.net","commits":1},{"name":"chenkun","email":"462488588@qq.com","commits":1}]},"readingTime":{"minutes":1.48,"words":445},"filePathRelative":"java/framework/spring/Annotation.md","localizedDate":"2022年12月21日","excerpt":"<h2>1、依赖注入</h2>\\n<div class=\\"language-markdown\\" data-ext=\\"md\\" data-title=\\"md\\"><pre class=\\"language-markdown\\"><code> <span class=\\"token list punctuation\\">1.</span> @Autowired\\n     是Spring中的注解，按照类型注入，此注解可以用于字段属性上、setter方法上、构造函数上，用在字段上则Spring底层会使用反射对字段进行赋值，用成员变量的在setter方法上，则会调用setter方法进行注入。从Spring4.3开始，如果只有一个有参的构造方法，则可以省略构造方法上的@Autowired\\n <span class=\\"token list punctuation\\">2.</span> @Autowired + @Qualifier \\n    按照bean的名字注入\\n <span class=\\"token list punctuation\\">3.</span> @Resource\\n    是JavaEE规范中的注解在JSR250引入，默认是按照bean的名字注入，如果没指定名字则按照类型注入\\n</code></pre></div>","autoDesc":true}');export{f as comp,S as data};
