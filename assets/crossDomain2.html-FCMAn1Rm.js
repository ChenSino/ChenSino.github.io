import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-eaM1OiHO.js";const p={},e=t(`<h3 id="一-什么是jsonp" tabindex="-1"><a class="header-anchor" href="#一-什么是jsonp"><span>一，什么是JSONP</span></a></h3><blockquote><p>Jsonp(JSON with Padding) 是 json 的一种&quot;使用模式&quot;，可以让网页从别的域名（网站）那获取资料，即跨域读取数据。</p></blockquote><p>为什么我们从不同的域（网站）访问数据需要一个特殊的技术( JSONP )呢？这是因为同源策略。 同源策略，它是由 Netscape 提出的一个著名的安全策略，现在所有支持 JavaScript 的浏览器都会使用这个策略。</p><h3 id="二-jsonp的原理" tabindex="-1"><a class="header-anchor" href="#二-jsonp的原理"><span>二，JSONP的原理</span></a></h3><p>我们知道，在页面上有三种资源是可以与页面本身不同源的。它们是：js脚本，css样式文件，图片。像taobao等大型网站，很定会将这些静态资源放入cdn中，然后在页面上链接。而jsonp就是利用了script标签可以链接到不同源的js脚本，来到达跨域目的。 于是可以判断，当前阶段如果想通过纯web端（ActiveX控件、服务端代理、Web socket等方式不算）跨域访问数据就只有一种可能，那就是在远程服务器上设法把数据装进js格式的文件里，供客户端调用和进一步处理；</p><h3 id="三-jsonp的具体实现" tabindex="-1"><a class="header-anchor" href="#三-jsonp的具体实现"><span>三,JSONP的具体实现</span></a></h3><p>JSONP实现跨域请求的具体实现就是动态创建script标签，利用“src”不受同源策略约束的性质来实现跨域获取数据。</p><h4 id="_1-服务端jsonp格式数据" tabindex="-1"><a class="header-anchor" href="#_1-服务端jsonp格式数据"><span>1，服务端JSONP格式数据</span></a></h4><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>如客户想访问 : https://www.runoob.com/try/ajax/jsonp.php?jsoncallback=callbackFunction。

假设客户期望返回数据：[&quot;customername1&quot;,&quot;customername2&quot;]。

真正返回到客户端的数据显示为: callbackFunction([&quot;customername1&quot;,&quot;customername2&quot;])。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Content-type: application/json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取回调函数名</span>
<span class="token variable">$jsoncallback</span> <span class="token operator">=</span> <span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;jsoncallback&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//json数据</span>
<span class="token variable">$json_data</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;[&quot;customername1&quot;,&quot;customername2&quot;]&#39;</span><span class="token punctuation">;</span>
<span class="token comment">//输出jsonp格式的数据</span>
<span class="token keyword">echo</span> <span class="token variable">$jsoncallback</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;(&quot;</span> <span class="token operator">.</span> <span class="token variable">$json_data</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;)&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-客户端接收" tabindex="-1"><a class="header-anchor" href="#_2-客户端接收"><span>2，客户端接收</span></a></h4><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JSONP 实例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">function</span> <span class="token function">callbackFunction</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;i got it&quot;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  window<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> script<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    script<span class="token punctuation">.</span>src<span class="token operator">=</span><span class="token string">&quot;https://www.runoob.com/try/ajax/jsonp.php?jsoncallback=callbackFunction&quot;</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-用jquery中-getjson-实现jsonp" tabindex="-1"><a class="header-anchor" href="#_2-2-用jquery中-getjson-实现jsonp"><span>2.2，用jQuery中$.getJSON()实现JSONP</span></a></h4><p>方法允许通过使用JSONP形式的回调函数来加载其他网域的JSON数据. 使用$.getJSON()方法实现跨域请求，需要在请求路径URL后增加callback＝?, jQuery将自动替换“？”为正确的函数名，以执行回调函数。</p><p>注：下面代码中路径后是jsoncallback=？，因为服务端的代码中获取回调函数的参数名为jsoncallback</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JSONP 实例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.static.runoob.com/libs/jquery/1.8.3/jquery.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
$<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.runoob.com/try/ajax/jsonp.php?jsoncallback=?&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-用jquery中-ajax-实现jsonp" tabindex="-1"><a class="header-anchor" href="#_2-3-用jquery中-ajax-实现jsonp"><span>2.3 用jQuery中$.ajax()实现JSONP</span></a></h4><p>$.ajax()方法同样可以实现JSONP跨域请求，我们主要来看看它的一些选项参数：</p><ol><li><ul><li>url：请求地址</li></ul></li><li><ul><li>type：请求方式</li></ul></li><li><ul><li>dataType：“jsonp” 必写，设置服务器端返回的数据类型，这里是&quot;jsonp&quot;</li></ul></li><li><ul><li>jsonp：获得jsonp回调函数名的参数名（跟服务端保持一致）</li></ul></li><li><ul><li>success：请求成功后的回调函数。</li></ul></li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;https://www.runoob.com/try/ajax/jsonp.php&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&quot;jsonp&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">jsonp</span><span class="token operator">:</span> <span class="token string">&quot;jsoncallback&quot;</span><span class="token punctuation">,</span>
        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[&quot;customername1&quot;,&quot;customername2&quot;]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="四-总结" tabindex="-1"><a class="header-anchor" href="#四-总结"><span>四,总结</span></a></h3><p>1，我们知道 script，link, img 等等标签引入外部资源，都是 get 请求的，那么就决定了 jsonp 一定是 get请求。</p><p>2，jsonp是一种方式或者说非强制性协议，如同ajax一样，它也不一定非要用json格式来传递数据，如果你愿意，字符串都行，只不过这样不利于用jsonp提供公开服务。</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/1045378-20220426095036509-990636020.jpg" alt="jsonp图片"></p>`,24),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","crossDomain2.html.vue"]]),d=JSON.parse('{"path":"/frontweb/es5/crossDomain2.html","title":"前端跨域(二)之JSONP跨域","lang":"zh-CN","frontmatter":{"title":"前端跨域(二)之JSONP跨域","date":"2022-04-25T00:00:00.000Z","author":"qianxun","category":["vue知识点"],"tag":["必会"],"description":"一，什么是JSONP Jsonp(JSON with Padding) 是 json 的一种\\"使用模式\\"，可以让网页从别的域名（网站）那获取资料，即跨域读取数据。 为什么我们从不同的域（网站）访问数据需要一个特殊的技术( JSONP )呢？这是因为同源策略。 同源策略，它是由 Netscape 提出的一个著名的安全策略，现在所有支持 JavaScrip...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/frontweb/es5/crossDomain2.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"前端跨域(二)之JSONP跨域"}],["meta",{"property":"og:description","content":"一，什么是JSONP Jsonp(JSON with Padding) 是 json 的一种\\"使用模式\\"，可以让网页从别的域名（网站）那获取资料，即跨域读取数据。 为什么我们从不同的域（网站）访问数据需要一个特殊的技术( JSONP )呢？这是因为同源策略。 同源策略，它是由 Netscape 提出的一个著名的安全策略，现在所有支持 JavaScrip..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/1045378-20220426095036509-990636020.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-01T13:56:59.000Z"}],["meta",{"property":"article:author","content":"qianxun"}],["meta",{"property":"article:tag","content":"必会"}],["meta",{"property":"article:published_time","content":"2022-04-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-08-01T13:56:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端跨域(二)之JSONP跨域\\",\\"image\\":[\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/1045378-20220426095036509-990636020.jpg\\"],\\"datePublished\\":\\"2022-04-25T00:00:00.000Z\\",\\"dateModified\\":\\"2022-08-01T13:56:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"qianxun\\"}]}"]]},"headers":[{"level":3,"title":"一，什么是JSONP","slug":"一-什么是jsonp","link":"#一-什么是jsonp","children":[]},{"level":3,"title":"二，JSONP的原理","slug":"二-jsonp的原理","link":"#二-jsonp的原理","children":[]},{"level":3,"title":"三,JSONP的具体实现","slug":"三-jsonp的具体实现","link":"#三-jsonp的具体实现","children":[]},{"level":3,"title":"四,总结","slug":"四-总结","link":"#四-总结","children":[]}],"git":{"createdTime":1659362219000,"updatedTime":1659362219000,"contributors":[{"name":"chenkun","email":"462488588@qq.com","commits":1}]},"readingTime":{"minutes":2.97,"words":892},"filePathRelative":"frontweb/es5/crossDomain2.md","localizedDate":"2022年4月25日","excerpt":"<h3>一，什么是JSONP</h3>\\n<blockquote>\\n<p>Jsonp(JSON with Padding) 是 json 的一种\\"使用模式\\"，可以让网页从别的域名（网站）那获取资料，即跨域读取数据。</p>\\n</blockquote>\\n<p>为什么我们从不同的域（网站）访问数据需要一个特殊的技术( JSONP )呢？这是因为同源策略。\\n同源策略，它是由 Netscape 提出的一个著名的安全策略，现在所有支持 JavaScript 的浏览器都会使用这个策略。</p>\\n<h3>二，JSONP的原理</h3>\\n<p>我们知道，在页面上有三种资源是可以与页面本身不同源的。它们是：js脚本，css样式文件，图片。像taobao等大型网站，很定会将这些静态资源放入cdn中，然后在页面上链接。而jsonp就是利用了script标签可以链接到不同源的js脚本，来到达跨域目的。\\n于是可以判断，当前阶段如果想通过纯web端（ActiveX控件、服务端代理、Web socket等方式不算）跨域访问数据就只有一种可能，那就是在远程服务器上设法把数据装进js格式的文件里，供客户端调用和进一步处理；</p>","autoDesc":true}');export{k as comp,d as data};
