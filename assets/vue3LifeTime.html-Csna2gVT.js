import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,a as n,b as a,d as l,e as s}from"./app-Cs38sdJl.js";const i={},u=s(`<h2 id="一-vue生命周期钩子函数" tabindex="-1"><a class="header-anchor" href="#一-vue生命周期钩子函数"><span>一，vue生命周期钩子函数</span></a></h2><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/d0c8a786c9177f3e668177cd4bfcf9c19e3d5676.png" alt="d0c8a786c9177f3e668177cd4bfcf9c19e3d5676"></p><h3 id="_1-1-beforecreate" tabindex="-1"><a class="header-anchor" href="#_1-1-beforecreate"><span>1.1 beforeCreate</span></a></h3><ul><li><p>该函数执行在<code>组件创建、数据观测 (data observer) 和 event/watcher 事件配置之前</code>，实例初始化之后被调用。</p></li><li><p>在该阶段<code>组件未创建</code>，<code>不能访问数据</code>，组件中的data，ref均为undefined。</p></li></ul><h3 id="_1-2-created" tabindex="-1"><a class="header-anchor" href="#_1-2-created"><span>1.2 created</span></a></h3><ul><li><p>该函数在组件创建完成后被立即调用，在这一步，实例已完成以下的配置：数据观测 (data observer)，属性和方法的运算，watch/event 事件回调。</p></li><li><p>但是还未渲染成HTML模板，组件中的data对象已经存在，可以对data进行操作了，即可以访问数据，发请求，ref依旧是undefined，挂载阶段还没开始，$el 属性目前尚不可用。</p></li><li><p>般我们可以将对数据的初始化和初始化页面的请求放到里面，结束loading。</p></li></ul><h3 id="_1-3-beforemount" tabindex="-1"><a class="header-anchor" href="#_1-3-beforemount"><span>1.3 beforeMount</span></a></h3><ul><li><p>该函数在组件挂载之前，在该阶段页面上<code>还没</code>渲染出HTML元素，data初始化完成，ref<code>依旧</code>不可以操作，相关的 render 函数<code>首次</code>被调用。</p></li><li><p>可以<code>访问数据</code>，编译模板<code>结束</code>，虚拟dom<code>已经存在</code>。</p></li><li><p>该钩子在\`服务器端渲染期间不被调用。</p></li></ul><h3 id="_1-4-mounted" tabindex="-1"><a class="header-anchor" href="#_1-4-mounted"><span>1.4 mounted</span></a></h3><ul><li><p>该函数是页面完成挂载之后执行的，这时 el 被新创建的 vm.$el 替换了，就可以操作ref了，一般会用于将组件初始时请求数据的方法放到这里面，filter也是在这里生效。</p></li><li><p>如果根实例挂载到了一个文档内的元素上，当 mounted 被调用时 vm.$el 也在文档内。</p></li><li><p>可以拿到数据和节点，实例被挂载后调用。</p></li></ul><p><strong>注意 ：mounted 不会保证所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以在 mounted 内部使用 vm.$nextTick：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function-variable function">mounted</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Code that will run only after the</span>
    <span class="token comment">// entire view has been rendered</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>beforeMount与mounted<code>实例②</code>：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>demo<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&quot;#box&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">666</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;mounted&#39;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>demo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;beforeMount&#39;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>demo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上实例，更加有力的说明： beforeMount执行在真实的dom节点挂载之前，此时没有节点，所以拿不到节点。mounted执行时真实的dom节点已经挂载到页面上了，所以能拿到节点。</p></li></ul><h3 id="_1-5-beforeupdate" tabindex="-1"><a class="header-anchor" href="#_1-5-beforeupdate"><span>1.5 beforeUpdate</span></a></h3><ul><li>函数在<code>数据更新时调用</code>，发生<code>在虚拟 DOM 打补丁之前</code>，在有特殊需求的情况下，可以将更新之前的数据存起来，放到后面去使用。</li><li>这里适合在<code>更新之前</code>访问<code>现有的 DOM</code>，比如手动移除已添加的事件监听器。</li><li>该钩子在<code>服务器端渲染期间不被调用</code>，<code>因为</code>只有初次渲染会在服务端进行。</li></ul><h3 id="_1-6-updated" tabindex="-1"><a class="header-anchor" href="#_1-6-updated"><span>1.6 updated</span></a></h3><ul><li><p>由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子，在数据更新之后做一些处理，即监控数据的变化。</p></li><li><p>当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用计算属性或 watcher 取而代之。</p></li></ul><p><strong>注意 ：updated 不会保证所有的子组件也都一起被重绘。如果你希望等到整个视图都重绘完毕，可以在 updated 里使用 vm.$nextTick：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function-variable function">updated</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Code that will run only after the</span>
    <span class="token comment">// entire view has been re-rendered</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),r={href:"https://cn.vuejs.org/v2/api/#watch",target:"_blank",rel:"noopener noreferrer"},d=s(`<h3 id="_1-7-beforedestroy" tabindex="-1"><a class="header-anchor" href="#_1-7-beforedestroy"><span>1.7 beforeDestroy</span></a></h3><ul><li>该函数在实例销毁之前调用，这里的ref依旧可以操作，实例仍然完全可用，可以在这里做清除定时器的操作，防止内存泄漏。</li><li>该钩子在服务器端渲染期间不被调用。</li></ul><h3 id="_1-8-destroyed" tabindex="-1"><a class="header-anchor" href="#_1-8-destroyed"><span>1.8 destroyed</span></a></h3><ul><li>该函数在组件销毁的时候执行，即实例销毁后调用，这里的ref不存在。</li><li>该钩子被调用后，对应 Vue 实例的所有指令都被解绑，所有的事件监听器被移除，所有的子实例也都被销毁\`。</li><li>该钩子在服务器端渲染期间不被调用。</li></ul><p>（<code>this.$destroy()</code>可以销毁组件）</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Com</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Com</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">var</span> Com <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt; 
                  &lt;button @click=&quot;kill&quot;&gt;kill&lt;/button&gt;
                &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;beforeDestory&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">destroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;destoryed&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token function">kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//销毁组件</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#box&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      Com<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>组件进行销毁的时候,是先销毁的是父组件,然后销毁子组件</strong></p><h3 id="_1-9-activated" tabindex="-1"><a class="header-anchor" href="#_1-9-activated"><span>1.9 activated</span></a></h3><ul><li><p>被 keep-alive缓存的组件激活时调用。</p></li><li><p>该钩子在服务器端渲染期间不被调用。</p></li></ul><h3 id="_1-10-deactivated" tabindex="-1"><a class="header-anchor" href="#_1-10-deactivated"><span>1.10 deactivated</span></a></h3><ul><li>被 keep-alive缓存的组件停用时调用。</li><li>该钩子在服务器端渲染期间不被调用。</li></ul><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cName=&#39;One&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>change1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cName=&#39;Two&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>change2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> One <span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;one component&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token function">activated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;activated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">deactivated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;deactivated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> Two <span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;two component&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&quot;#box&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{</span>
            One<span class="token punctuation">,</span>Two
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token literal-property property">cName</span><span class="token operator">:</span><span class="token string">&#39;One&#39;</span>  <span class="token comment">//存组件的名字</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-11-errorcaptured" tabindex="-1"><a class="header-anchor" href="#_1-11-errorcaptured"><span>1.11 errorCaptured</span></a></h3><ul><li>当捕获一个来自子孙组件的错误时被调用。此钩子会收到三个参数：错误对象、发生错误的组件实例以及一个包含错误来源信息的字符串。此钩子可以返回 false 以阻止该错误继续向上传播。</li></ul><h2 id="二、-父子组件生命周期执行顺序" tabindex="-1"><a class="header-anchor" href="#二、-父子组件生命周期执行顺序"><span>二、 父子组件生命周期执行顺序</span></a></h2><p>在正常开发，挂载周期的执行顺序为：</p><p>父beforeCreate =&gt; 父created =&gt; 父beforeMount =&gt; 子beforeCreate =&gt; 子created =&gt; 子beforeMount =&gt; <strong>子mounted =&gt; 父mounted</strong></p><p>在数据更新阶段执行顺序为：</p><p>父beforeUpdate =&gt; 子beforeUpdate =&gt; 子updated =&gt; 父updated</p><p>在组件销毁阶段执行顺序为：</p><p>父beforeDestroy -&gt; 子beforeDestroy -&gt; 子destroyed -&gt; 父destroyed</p><p>由此可见，其实所有周期规律就是：只要子组件被引入触发，所处不管任何周期都是父组件先开始执行，然后等到子组件执行完，父组件收尾。</p><p>实际开发中遇到一个问题，父组件中挂载子组件，子组件里也含有子组件，祖父组件中挂载父组件，</p><p>。父，子，孙，没有if渲染条件的阻止，mounted的执行顺序为</p><p><strong>孙mounted-&gt;父mounted-&gt;祖父mounted</strong></p>`,25);function k(v,m){const t=p("ExternalLinkIcon");return o(),c("div",null,[u,n("blockquote",null,[n("p",null,[a("注意："),n("a",r,[a("watch"),l(t)]),a("是监控特定数据的变化，而updated是监控组件里所有数据的变化。")])]),d])}const f=e(i,[["render",k],["__file","vue3LifeTime.html.vue"]]),h=JSON.parse('{"path":"/frontweb/vue/vue3LifeTime.html","title":"vue中组件的生命周期","lang":"zh-CN","frontmatter":{"title":"vue中组件的生命周期","date":"2022-07-06T00:00:00.000Z","author":"qianxun","category":["vue知识点"],"tag":["必会"],"description":"一，vue生命周期钩子函数 d0c8a786c9177f3e668177cd4bfcf9c19e3d5676 1.1 beforeCreate 该函数执行在组件创建、数据观测 (data observer) 和 event/watcher 事件配置之前，实例初始化之后被调用。 在该阶段组件未创建，不能访问数据，组件中的data，ref均为undefin...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/frontweb/vue/vue3LifeTime.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"vue中组件的生命周期"}],["meta",{"property":"og:description","content":"一，vue生命周期钩子函数 d0c8a786c9177f3e668177cd4bfcf9c19e3d5676 1.1 beforeCreate 该函数执行在组件创建、数据观测 (data observer) 和 event/watcher 事件配置之前，实例初始化之后被调用。 在该阶段组件未创建，不能访问数据，组件中的data，ref均为undefin..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/d0c8a786c9177f3e668177cd4bfcf9c19e3d5676.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-01T13:56:59.000Z"}],["meta",{"property":"article:author","content":"qianxun"}],["meta",{"property":"article:tag","content":"必会"}],["meta",{"property":"article:published_time","content":"2022-07-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-08-01T13:56:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue中组件的生命周期\\",\\"image\\":[\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/d0c8a786c9177f3e668177cd4bfcf9c19e3d5676.png\\"],\\"datePublished\\":\\"2022-07-06T00:00:00.000Z\\",\\"dateModified\\":\\"2022-08-01T13:56:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"qianxun\\"}]}"]]},"headers":[{"level":2,"title":"一，vue生命周期钩子函数","slug":"一-vue生命周期钩子函数","link":"#一-vue生命周期钩子函数","children":[{"level":3,"title":"1.1  beforeCreate","slug":"_1-1-beforecreate","link":"#_1-1-beforecreate","children":[]},{"level":3,"title":"1.2  created","slug":"_1-2-created","link":"#_1-2-created","children":[]},{"level":3,"title":"1.3  beforeMount","slug":"_1-3-beforemount","link":"#_1-3-beforemount","children":[]},{"level":3,"title":"1.4  mounted","slug":"_1-4-mounted","link":"#_1-4-mounted","children":[]},{"level":3,"title":"1.5 beforeUpdate","slug":"_1-5-beforeupdate","link":"#_1-5-beforeupdate","children":[]},{"level":3,"title":"1.6 updated","slug":"_1-6-updated","link":"#_1-6-updated","children":[]},{"level":3,"title":"1.7 beforeDestroy","slug":"_1-7-beforedestroy","link":"#_1-7-beforedestroy","children":[]},{"level":3,"title":"1.8 destroyed","slug":"_1-8-destroyed","link":"#_1-8-destroyed","children":[]},{"level":3,"title":"1.9 activated","slug":"_1-9-activated","link":"#_1-9-activated","children":[]},{"level":3,"title":"1.10 deactivated","slug":"_1-10-deactivated","link":"#_1-10-deactivated","children":[]},{"level":3,"title":"1.11 errorCaptured","slug":"_1-11-errorcaptured","link":"#_1-11-errorcaptured","children":[]}]},{"level":2,"title":"二、 父子组件生命周期执行顺序","slug":"二、-父子组件生命周期执行顺序","link":"#二、-父子组件生命周期执行顺序","children":[]}],"git":{"createdTime":1659362219000,"updatedTime":1659362219000,"contributors":[{"name":"chenkun","email":"462488588@qq.com","commits":1}]},"readingTime":{"minutes":5.35,"words":1605},"filePathRelative":"frontweb/vue/vue3LifeTime.md","localizedDate":"2022年7月6日","excerpt":"<h2>一，vue生命周期钩子函数</h2>\\n<p><img src=\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/d0c8a786c9177f3e668177cd4bfcf9c19e3d5676.png\\" alt=\\"d0c8a786c9177f3e668177cd4bfcf9c19e3d5676\\"></p>\\n<h3>1.1  beforeCreate</h3>\\n<ul>\\n<li>\\n<p>该函数执行在<code>组件创建、数据观测 (data observer) 和 event/watcher 事件配置之前</code>，实例初始化之后被调用。</p>\\n</li>\\n<li>\\n<p>在该阶段<code>组件未创建</code>，<code>不能访问数据</code>，组件中的data，ref均为undefined。</p>\\n</li>\\n</ul>","autoDesc":true}');export{f as comp,h as data};
