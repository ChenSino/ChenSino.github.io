import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e as t}from"./app-eaM1OiHO.js";const p={},o=t(`<div class="hint-container caution"><p class="hint-container-title">注意</p><p>本篇博客是用来配置前后不分离的项目，正常情况下现在的项目都是前后分离了，因此本篇内容 并没有太多学习价值，但是网上大多数教程都特别喜欢讲这一部分内容，就我目前了解到的内容， 在搭建oauth2授权服务器可能会用到，因为授权服务器需要一个登录页面，这个页面可以单独放到后端，仅仅做个登录没有必要开一个前端项目.</p></div><h2 id="_1、修改自定义的登陆页面以及登陆请求校验" tabindex="-1"><a class="header-anchor" href="#_1、修改自定义的登陆页面以及登陆请求校验"><span>1、修改自定义的登陆页面以及登陆请求校验</span></a></h2><div class="hint-container note"><p class="hint-container-title">官方文档</p><p>https://docs.spring.io/spring-security/reference/servlet/authentication/passwords/form.html</p></div><h3 id="_1-1-secutity配置" tabindex="-1"><a class="header-anchor" href="#_1-1-secutity配置"><span>1.1 Secutity配置</span></a></h3><blockquote><p>在Security配置文件配置loginPage指定登陆的页面，loginProcessingUrl指定用户名密码认证处理地址，同时一定要放行这两个页面，否则会一直被拦截导致重定向到登陆页面。 另外，还要准备自定义页面，以及自定义处理接口。</p></blockquote><div class="hint-container caution"><p class="hint-container-title">注意</p><p>一般情况，无需自定义登陆处理逻辑，只需要修改登陆页面，在登陆页面把action保留原来的login即可</p></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    http<span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loginPage</span><span class="token punctuation">(</span><span class="token string">&quot;/token/login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loginProcessingUrl</span><span class="token punctuation">(</span><span class="token string">&quot;/token/custom&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">successHandler</span><span class="token punctuation">(</span><span class="token function">tenantSavedRequestAwareAuthenticationSuccessHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">failureHandler</span><span class="token punctuation">(</span><span class="token function">authenticationFailureHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">logoutSuccessHandler</span><span class="token punctuation">(</span><span class="token function">logoutSuccessHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">deleteCookies</span><span class="token punctuation">(</span><span class="token string">&quot;JSESSIONID&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invalidateHttpSession</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">&quot;/token/**&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/actuator/**&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/mobile/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PageController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;login&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/custom&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">ok</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response <span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token class-name">String</span> username <span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//自定义校验逻辑</span>
        <span class="token comment">//...</span>
        <span class="token comment">//处理完后重定向到之前的请求路径</span>
        response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-自定义登陆页面" tabindex="-1"><a class="header-anchor" href="#_1-2-自定义登陆页面"><span>1.2 自定义登陆页面</span></a></h3><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sign_body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container form-margin-top<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-signin<span class="token punctuation">&quot;</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/token/custom<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-signin-heading<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>统一认证系统<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#if</span> <span class="token attr-name">tenantList??</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-margin-top<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>所属租户<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TENANT-ID<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">tenantList</span> <span class="token attr-name">as</span> <span class="token attr-name">tenant</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${tenant.id}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\${tenant.name}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clientId<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pig<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>所属客户端<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>账号<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span> <span class="token attr-name">autofocus</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>密码<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-lg btn-primary btn-block<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>sign in<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#if</span> <span class="token attr-name">error??</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> </span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>\${error?html}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、开启表单认证" tabindex="-1"><a class="header-anchor" href="#_2、开启表单认证"><span>2、开启表单认证</span></a></h2><ol><li>如下图，开启表单登录可以Security开启了14个过滤器（忽略TokenAuthenticationFilter这个是我自定义的）</li></ol><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223100309.png" alt="20221223100309"><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223100226.png" alt="20221223100226"></p><ol start="2"><li>开启表单登录后，当访问一个未认证的接口时，会被重定向到登录页，因为开启表单认证后，默认的AuthenticationEntryPoint实现是LoginUrlAuthenticationEntryPoint， <img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223100757.png" alt="20221223100757"></li></ol><h2 id="_3、关闭表单认证" tabindex="-1"><a class="header-anchor" href="#_3、关闭表单认证"><span>3、关闭表单认证</span></a></h2><p>除了我自定义的TokenAuthenticationFilter过滤器外还有11个，与上面相比刚好少了3个和表单相关的过滤器（UsernamePassworkAuthenticationFilter,DefaultLoginPageGeneratingFilter,DefaultLogoutPageGeneratingFilter） <img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223100930.png" alt="20221223100930"></p><p>并且关闭表单验证后，默认的AuthenticationEntryPoint变成了Http403ForbiddenEntryPoint，当用户未认证时，去访问一个接口就会被此类处理，返回403异常，不会跳转到登录表单。</p>`,17),e=[o];function c(u,l){return a(),s("div",null,e)}const r=n(p,[["render",c],["__file","CustomLoginPage.html.vue"]]),d=JSON.parse('{"path":"/java/framework/security/CustomLoginPage.html","title":"自定义登陆页面","lang":"zh-CN","frontmatter":{"title":"自定义登陆页面","date":"2022-11-03T00:00:00.000Z","author":"chenkun","keys":null,"description":"注意 本篇博客是用来配置前后不分离的项目，正常情况下现在的项目都是前后分离了，因此本篇内容 并没有太多学习价值，但是网上大多数教程都特别喜欢讲这一部分内容，就我目前了解到的内容， 在搭建oauth2授权服务器可能会用到，因为授权服务器需要一个登录页面，这个页面可以单独放到后端，仅仅做个登录没有必要开一个前端项目. 1、修改自定义的登陆页面以及登陆请求校...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/java/framework/security/CustomLoginPage.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"自定义登陆页面"}],["meta",{"property":"og:description","content":"注意 本篇博客是用来配置前后不分离的项目，正常情况下现在的项目都是前后分离了，因此本篇内容 并没有太多学习价值，但是网上大多数教程都特别喜欢讲这一部分内容，就我目前了解到的内容， 在搭建oauth2授权服务器可能会用到，因为授权服务器需要一个登录页面，这个页面可以单独放到后端，仅仅做个登录没有必要开一个前端项目. 1、修改自定义的登陆页面以及登陆请求校..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223100309.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"chenkun"}],["meta",{"property":"article:published_time","content":"2022-11-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自定义登陆页面\\",\\"image\\":[\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223100309.png\\",\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223100226.png\\",\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223100757.png\\",\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20221223100930.png\\"],\\"datePublished\\":\\"2022-11-03T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"chenkun\\"}]}"]]},"headers":[{"level":2,"title":"1、修改自定义的登陆页面以及登陆请求校验","slug":"_1、修改自定义的登陆页面以及登陆请求校验","link":"#_1、修改自定义的登陆页面以及登陆请求校验","children":[{"level":3,"title":"1.1 Secutity配置","slug":"_1-1-secutity配置","link":"#_1-1-secutity配置","children":[]},{"level":3,"title":"1.2 自定义登陆页面","slug":"_1-2-自定义登陆页面","link":"#_1-2-自定义登陆页面","children":[]}]},{"level":2,"title":"2、开启表单认证","slug":"_2、开启表单认证","link":"#_2、开启表单认证","children":[]},{"level":2,"title":"3、关闭表单认证","slug":"_3、关闭表单认证","link":"#_3、关闭表单认证","children":[]}],"git":{"createdTime":1667459365000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"chenxk@sonoscape.net","commits":2},{"name":"ChenSino","email":"462488588@qq.com","commits":1}]},"readingTime":{"minutes":2.48,"words":745},"filePathRelative":"java/framework/security/CustomLoginPage.md","localizedDate":"2022年11月3日","excerpt":"<div class=\\"hint-container caution\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本篇博客是用来配置前后不分离的项目，正常情况下现在的项目都是前后分离了，因此本篇内容\\n并没有太多学习价值，但是网上大多数教程都特别喜欢讲这一部分内容，就我目前了解到的内容，\\n在搭建oauth2授权服务器可能会用到，因为授权服务器需要一个登录页面，这个页面可以单独放到后端，仅仅做个登录没有必要开一个前端项目.</p>\\n</div>\\n<h2>1、修改自定义的登陆页面以及登陆请求校验</h2>\\n<div class=\\"hint-container note\\">\\n<p class=\\"hint-container-title\\">官方文档</p>\\n<p>https://docs.spring.io/spring-security/reference/servlet/authentication/passwords/form.html</p>\\n</div>","autoDesc":true}');export{r as comp,d as data};
