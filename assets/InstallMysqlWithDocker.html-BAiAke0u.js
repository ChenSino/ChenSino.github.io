import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as e,e as n}from"./app-DaXuKV75.js";const t={},l=n(`<h2 id="_1-不要用太新的版本" tabindex="-1"><a class="header-anchor" href="#_1-不要用太新的版本"><span>1. 不要用太新的版本</span></a></h2><p>安装一定要选对版本，刚开始我使用的8.0.30镜像，一直无法启动，日志报错大概意思是我映射的目录有问题，应该是新版本mysql的安装文件有变动， 我也懒得去深究，直接换了一个版本就好了了。</p><h2 id="_2-安装" tabindex="-1"><a class="header-anchor" href="#_2-安装"><span>2 安装</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 1. 下载镜像</span>
<span class="token function">docker</span> pull mysql:8.0.23
<span class="token comment"># 2. 启动</span>
<span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token parameter variable">--name</span> mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/docker/mysql/mysql-files:/var/lib/mysql-files <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/docker/mysql/conf:/etc/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/docker/mysql/logs:/var/log/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/docker/mysql/data:/var/lib/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>root <span class="token punctuation">\\</span>
<span class="token parameter variable">-d</span> mysql:8.0.23
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-报错" tabindex="-1"><a class="header-anchor" href="#_3-报错"><span>3 报错</span></a></h2><p>在本机命令行无法使用<code>mysql -uroot -proot</code>直接连到mysql报错如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ERROR <span class="token number">2002</span> <span class="token punctuation">(</span>HY000<span class="token punctuation">)</span>: Can<span class="token string">&#39;t connect to local MySQL server through socket &#39;</span>/var/run/mysqld/mysqld.sock&#39; <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但是使用别的机器(<code>mysql -h 192.168.92.31 -uroot -proot</code>)居然可以连接上，在本机添加本机地址也可以连接上</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-h</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-proot</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),o=[l];function r(p,c){return s(),e("div",null,o)}const d=a(t,[["render",r],["__file","InstallMysqlWithDocker.html.vue"]]),u=JSON.parse('{"path":"/other/linux/InstallMysqlWithDocker.html","title":"docker安装mysql","lang":"zh-CN","frontmatter":{"title":"docker安装mysql","date":"2022-10-08T00:00:00.000Z","author":"chenkun","publish":true,"keys":null,"description":"1. 不要用太新的版本 安装一定要选对版本，刚开始我使用的8.0.30镜像，一直无法启动，日志报错大概意思是我映射的目录有问题，应该是新版本mysql的安装文件有变动， 我也懒得去深究，直接换了一个版本就好了了。 2 安装 3 报错 在本机命令行无法使用mysql -uroot -proot直接连到mysql报错如下： 但是使用别的机器(mysql -...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/other/linux/InstallMysqlWithDocker.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"docker安装mysql"}],["meta",{"property":"og:description","content":"1. 不要用太新的版本 安装一定要选对版本，刚开始我使用的8.0.30镜像，一直无法启动，日志报错大概意思是我映射的目录有问题，应该是新版本mysql的安装文件有变动， 我也懒得去深究，直接换了一个版本就好了了。 2 安装 3 报错 在本机命令行无法使用mysql -uroot -proot直接连到mysql报错如下： 但是使用别的机器(mysql -..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"chenkun"}],["meta",{"property":"article:published_time","content":"2022-10-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"docker安装mysql\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"chenkun\\"}]}"]]},"headers":[{"level":2,"title":"1. 不要用太新的版本","slug":"_1-不要用太新的版本","link":"#_1-不要用太新的版本","children":[]},{"level":2,"title":"2 安装","slug":"_2-安装","link":"#_2-安装","children":[]},{"level":2,"title":"3 报错","slug":"_3-报错","link":"#_3-报错","children":[]}],"git":{"createdTime":1665223315000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"462488588@qq.com","commits":2},{"name":"ChenSino","email":"chenxk@sonoscape.net","commits":2}]},"readingTime":{"minutes":0.75,"words":224},"filePathRelative":"other/linux/InstallMysqlWithDocker.md","localizedDate":"2022年10月8日","excerpt":"<h2>1. 不要用太新的版本</h2>\\n<p>安装一定要选对版本，刚开始我使用的8.0.30镜像，一直无法启动，日志报错大概意思是我映射的目录有问题，应该是新版本mysql的安装文件有变动，\\n我也懒得去深究，直接换了一个版本就好了了。</p>\\n<h2>2 安装</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 1. 下载镜像</span>\\n<span class=\\"token function\\">docker</span> pull mysql:8.0.23\\n<span class=\\"token comment\\"># 2. 启动</span>\\n<span class=\\"token function\\">docker</span> run <span class=\\"token parameter variable\\">-p</span> <span class=\\"token number\\">3306</span>:3306 <span class=\\"token parameter variable\\">--name</span> mysql <span class=\\"token punctuation\\">\\\\</span>\\n<span class=\\"token parameter variable\\">-v</span> /usr/local/docker/mysql/mysql-files:/var/lib/mysql-files <span class=\\"token punctuation\\">\\\\</span>\\n<span class=\\"token parameter variable\\">-v</span> /usr/local/docker/mysql/conf:/etc/mysql <span class=\\"token punctuation\\">\\\\</span>\\n<span class=\\"token parameter variable\\">-v</span> /usr/local/docker/mysql/logs:/var/log/mysql <span class=\\"token punctuation\\">\\\\</span>\\n<span class=\\"token parameter variable\\">-v</span> /usr/local/docker/mysql/data:/var/lib/mysql <span class=\\"token punctuation\\">\\\\</span>\\n<span class=\\"token parameter variable\\">-e</span> <span class=\\"token assign-left variable\\">MYSQL_ROOT_PASSWORD</span><span class=\\"token operator\\">=</span>root <span class=\\"token punctuation\\">\\\\</span>\\n<span class=\\"token parameter variable\\">-d</span> mysql:8.0.23\\n</code></pre></div>","autoDesc":true}');export{d as comp,u as data};
