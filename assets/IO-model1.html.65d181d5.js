import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c,a as s,b as o,e as a,d as n,r as l}from"./app.cbe6b065.js";const i={},u=a('<h2 id="_1-bio" tabindex="-1"><a class="header-anchor" href="#_1-bio" aria-hidden="true">#</a> 1 BIO</h2><p>\u5F53\u7ED9BIO\u7684accept\u548Cread\u65B9\u6CD5\u52A0\u4E0A\u8D85\u65F6\u673A\u5236\u540E\uFF0C\u53EF\u4EE5\u5728\u4EE3\u7801\u5C42\u9762\u89E3\u51B3\u963B\u585E\u95EE\u9898\uFF0C\u4F46\u8FD9\u4E0D\u662F\u771F\u6B63\u7684\u975E\u963B\u585E\uFF0C\u901A\u5E38\u6211\u4EEC\u8BF4\u7684\u975E\u963B\u585E\u662F\u6307\u7684\u64CD\u4F5C\u7CFB\u7EDF\u5C42\u9762\u7684\u975E\u963B\u585E\uFF0C\u5C31\u662F\u5F53accept\u901A\u8FC7jni\u8C03\u7528native\u65B9\u6CD5\u540E\uFF0C\u6700\u7EC8\u7CFB\u7EDF\u4E0D\u4F1A\u4E00\u76F4\u88AB\u963B\u585E\u3002\u771F\u6B63\u7684\u975E\u963B\u585E\u662F\u64CD\u4F5C\u7CFB\u7EDF\u589E\u52A0\u975E\u963B\u585E\u529F\u80FD\u540E\uFF0Cjava\u540C\u6B65\u6DFB\u52A0java.nio\u51FA\u73B0\u4EE5\u540E\u624D\u6709\u7684\uFF0C\u56E0\u6B64\u901A\u8FC7java\u5B9E\u73B0\u975E\u963B\u585E\uFF0C\u9700\u8981\u8C03\u7528nio\u4E2D\u7684\u7C7B\u3002</p><h2 id="_2-nio" tabindex="-1"><a class="header-anchor" href="#_2-nio" aria-hidden="true">#</a> 2 NIO</h2><h2 id="_3-io\u591A\u8DEF\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#_3-io\u591A\u8DEF\u590D\u7528" aria-hidden="true">#</a> 3 IO\u591A\u8DEF\u590D\u7528</h2><h2 id="_4-\u5F02\u6B65io" tabindex="-1"><a class="header-anchor" href="#_4-\u5F02\u6B65io" aria-hidden="true">#</a> 4 \u5F02\u6B65IO</h2><h2 id="_5-\u4E8B\u4EF6\u9A71\u52A8\u7684io" tabindex="-1"><a class="header-anchor" href="#_5-\u4E8B\u4EF6\u9A71\u52A8\u7684io" aria-hidden="true">#</a> 5 \u4E8B\u4EF6\u9A71\u52A8\u7684io</h2><h2 id="_6-reactor\u7EBF\u7A0B\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#_6-reactor\u7EBF\u7A0B\u6A21\u578B" aria-hidden="true">#</a> 6 reactor\u7EBF\u7A0B\u6A21\u578B</h2>',7),k=n("reactor\u7EBF\u7A0B\u6A21\u578B\u53EF\u53C2\u8003"),r={href:"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/nio.pdf",target:"_blank",rel:"noopener noreferrer"},d=n("Scalable IO in java"),v=n("\uFF0C\u8BE5\u4E66\u4F5C\u8005\u4E5F\u662Fjava.nio\u7684\u4F5C\u8005"),m=a(`<div class="custom-container danger"><p class="custom-container-title">\u6CE8\u610F</p><p>\u6CE8\u610Freactor\u7EBF\u7A0B\u6A21\u578B\u5E76\u4E0D\u662F5\u79CDio\u6A21\u578B\u4E4B\u4E00\uFF0C\u5B83\u662F\u4E00\u79CD\u7ECF\u5178\u7684\u4E8B\u4EF6\u9A71\u52A8\u7684\u7EBF\u7A0B\u6A21\u578B\uFF0C\u5B83\u662F\u57FA\u4E8EIO\u591A\u8DEF\u590D\u7528\u6A21\u578B\u884D\u751F\u51FA\u6765\u7684\uFF1A</p><p>Reactor\u7EBF\u7A0B\u6A21\u5F0F = Reactor(I/O\u591A\u8DEF\u590D\u7528)+ \u7EBF\u7A0B\u6C60</p><p>Reactor\u8D1F\u8D23\u76D1\u542C\u548C\u5206\u914D\u4E8B\u4EF6\uFF0C\u7EBF\u7A0B\u6C60\u8D1F\u8D23\u5904\u7406\u4E8B\u4EF6</p></div><p>\u6839\u636EReactor\u7684\u6570\u91CF\u548C\u7EBF\u7A0B\u6C60\u7684\u6570\u91CF\uFF0C\u53C8\u53EF\u4EE5\u5C06Reactor\u5206\u4E3A\u4E09\u79CD\u6A21\u578B</p><ul><li>\u5355Reactor\u5355\u7EBF\u7A0B\u6A21\u578B (\u56FA\u5B9A\u5927\u5C0F\u4E3A1\u7684\u7EBF\u7A0B\u6C60)</li><li>\u5355Reactor\u591A\u7EBF\u7A0B\u6A21\u578B</li><li>\u591AReactor\u591A\u7EBF\u7A0B\u6A21\u578B (\u4E00\u822C\u662F\u4E3B\u4ECE2\u4E2AReactor)</li></ul><p>reactor\u6A21\u578B\u4E2D\u6709\u4E09\u79CD\u89D2\u8272\uFF0C\u5206\u522B\u662F\uFF1A</p><blockquote><p>Acceptor\uFF1A\u5904\u7406\u5BA2\u6237\u7AEF\u65B0\u8FDE\u63A5\uFF0C\u5E76\u5206\u6D3E\u8BF7\u6C42\u5230\u5904\u7406\u5668\u94FE\u4E2D<br> Reactor\uFF1A\u8D1F\u8D23\u76D1\u542C\u548C\u5206\u914D\u4E8B\u4EF6\uFF0C\u5C06I/O\u4E8B\u4EF6\u5206\u6D3E\u7ED9\u5BF9\u5E94\u7684Handler<br> Handler: \u4E8B\u4EF6\u5904\u7406\uFF0C\u5982\u7F16\u7801\u3001\u89E3\u7801\u7B49</p></blockquote><h3 id="_6-1-\u5355reactor\u5355\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#_6-1-\u5355reactor\u5355\u7EBF\u7A0B" aria-hidden="true">#</a> 6.1 \u5355reactor\u5355\u7EBF\u7A0B</h3><p>\u5E94\u7528\uFF1Aredis4.0</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230209155247.png" alt="20230209155247" loading="lazy"></p><p>\u6E90\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//------------------------reactor------------------</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetSocketAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SelectionKey</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">Selector</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">ServerSocketChannel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SocketChannel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Reactor</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Selector</span> selector<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">ServerSocketChannel</span> serverSocket<span class="token punctuation">;</span>

    <span class="token class-name">Reactor</span><span class="token punctuation">(</span><span class="token keyword">int</span> port<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        selector <span class="token operator">=</span> <span class="token class-name">Selector</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serverSocket <span class="token operator">=</span> <span class="token class-name">ServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serverSocket<span class="token punctuation">.</span><span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serverSocket<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SelectionKey</span> sk <span class="token operator">=</span>
                serverSocket<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span>
                        <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_ACCEPT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;listen to &quot;</span> <span class="token operator">+</span> port <span class="token punctuation">)</span><span class="token punctuation">;</span>
        sk<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Acceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
    Alternatively, use explicit SPI provider:
    SelectorProvider p = SelectorProvider.provider();
    selector = p.openSelector();
    serverSocket = p.openServerSocketChannel();
    */</span>
<span class="token comment">// class Reactor continued</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// normally in a new Thread</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDB\u5165reactor run&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                selector<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Set</span> selected <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">selectedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Iterator</span> it <span class="token operator">=</span> selected<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                selected<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDB\u5165reactor dispatch&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Runnable</span> r <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Runnable</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>k<span class="token punctuation">.</span><span class="token function">attachment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            r<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// class Reactor continued</span>
    <span class="token keyword">class</span> <span class="token class-name">Acceptor</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span> <span class="token comment">// inner</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDB\u5165Acceptor run&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">SocketChannel</span> c <span class="token operator">=</span> serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//------------------------handler------------------</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SelectionKey</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">Selector</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SocketChannel</span></span><span class="token punctuation">;</span>

<span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Handler</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">SocketChannel</span> socket<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">SelectionKey</span> sk<span class="token punctuation">;</span>
    <span class="token class-name">ByteBuffer</span> input <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ByteBuffer</span> output <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> READING <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> SENDING <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> state <span class="token operator">=</span> READING<span class="token punctuation">;</span>

    <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token class-name">Selector</span> sel<span class="token punctuation">,</span> <span class="token class-name">SocketChannel</span> c<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDB\u5165handler \u5904\u7406&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socket <span class="token operator">=</span> c<span class="token punctuation">;</span>
        c<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Optionally try first read now</span>
        sk <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sk<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sk<span class="token punctuation">.</span><span class="token function">interestOps</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sel<span class="token punctuation">.</span><span class="token function">wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">boolean</span> <span class="token function">inputIsComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">boolean</span> <span class="token function">outputIsComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>

    <span class="token comment">// class Handler continued</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span>
            <span class="token punctuation">(</span>state <span class="token operator">==</span> READING<span class="token punctuation">)</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> SENDING<span class="token punctuation">)</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        socket<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">inputIsComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            state <span class="token operator">=</span> SENDING<span class="token punctuation">;</span>
<span class="token comment">// Normally also do first write now</span>
            sk<span class="token punctuation">.</span><span class="token function">interestOps</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_WRITE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        socket<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">outputIsComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> sk<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//-----------------------main-----</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u5355reactor\u5355\u7EBF\u7A0B\u6A21\u578B
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Reactor</span> reactor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Reactor</span><span class="token punctuation">(</span><span class="token number">6666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>reactor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-\u5355reactor\u591A\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#_6-2-\u5355reactor\u591A\u7EBF\u7A0B" aria-hidden="true">#</a> 6.2 \u5355reactor\u591A\u7EBF\u7A0B</h3><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230209155305.png" alt="20230209155305" loading="lazy"></p><h3 id="_6-3-\u4E3B\u4ECE-\u591A-reactor\u591A\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#_6-3-\u4E3B\u4ECE-\u591A-reactor\u591A\u7EBF\u7A0B" aria-hidden="true">#</a> 6.3 \u4E3B\u4ECE\uFF08\u591A\uFF09reactor\u591A\u7EBF\u7A0B</h3><p>\u5E94\u7528\uFF1Anetty</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230209155722.png" alt="20230209155722" loading="lazy"></p>`,15);function b(y,h){const p=l("ExternalLinkIcon");return e(),c("div",null,[u,s("p",null,[k,s("a",r,[d,o(p)]),v]),m])}var S=t(i,[["render",b],["__file","IO-model1.html.vue"]]);export{S as default};
