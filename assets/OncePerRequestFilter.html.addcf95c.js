import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.d6eda0c8.js";const t={},p=e(`<h2 id="_1\u3001oneceperrequestfilter\u521D\u8BC6" tabindex="-1"><a class="header-anchor" href="#_1\u3001oneceperrequestfilter\u521D\u8BC6" aria-hidden="true">#</a> 1\u3001OnecePerRequestFilter\u521D\u8BC6</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\u7B2C\u4E00\u6B21\u63A5\u89E6\u8FD9\u4E2A\u7C7B\uFF0C\u5728SpringSecurity\u4E2D\uFF0C\u5927\u6982\u767E\u5EA6\u4E86\u4E00\u4E0B\uFF0C\u77E5\u9053\u6B64\u7C7B\u662F\u9650\u5236\u4E00\u6B21\u8BF7\u6C42\u53EA
\u8D70\u4E00\u6B21\u8FC7\u6EE4\u5668\uFF0C\u4F46\u662F\u6211\u4E0D\u660E\u767D\u4E3A\u5565\u8981\u505A\u8FD9\u4E2A\u9650\u5236\uFF0C\u6216\u8005\u8BF4\u96BE\u9053\u8FD8\u6709\u4E00\u6B21\u8BF7\u6C42\u4F1A\u8D70\u4E24\u6B21\u8FC7\u6EE4\u5668\uFF1F
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1-\u6E90\u7801doc" tabindex="-1"><a class="header-anchor" href="#_1-1-\u6E90\u7801doc" aria-hidden="true">#</a> 1.1 \u6E90\u7801doc</h3><p>\u5B66\u4E60\u4E00\u4E2A\u6846\u67B6\u6700\u597D\u7684\u6587\u6863\u80AF\u5B9A\u662F\u770B\u5B98\u65B9doc,\u4EE5\u4E0B\u662F\u5B98\u65B9doc\u5BF9\u6B64\u7C7B\u7684\u6CE8\u91CA\uFF0C\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u786E\u4FDD \u4E00\u4E2A\u8BF7\u6C42\u5728\u4E00\u4E2A\u8FC7\u6EE4\u5668\u53EA\u6267\u884C\u4E00\u6B21doFilter,\u56E0\u5728\u5728\u4E0D\u540C\u7248\u672C\u7684Servlet\u5BB9\u5668\u4E2D\u662F\u5B58\u5728\u591A\u6B21\u6267 \u884CdoFilter\u7684\u53EF\u80FD\u7684\uFF0C\u6BD4\u5982\u4E00\u4E2Arequest forward\u5230\u53E6\u4E00\u4E2Arequest,\u5728servlet2.0\u548C3.0 \u8868\u73B0\u53EF\u80FD\u90FD\u4E0D\u4E00\u6837\uFF0C\u5728Tomcat\u548Cweblogic\u5BB9\u5668\u4E2D\u53EF\u80FD\u8868\u73B0\u4E5F\u4E0D\u4E00\u6837\uFF0C\u4E3A\u4E86\u7EDF\u4E00\u6B64\u884C\u4E3A\uFF0C\u6240\u4EE5 Spring\u5B98\u65B9\u63D0\u4F9B\u4E86\u6B64\u7C7B\u3002</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Filter base class that aims to guarantee a single execution per request dispatch, on any servlet container. It provides a doFilterInternal method with HttpServletRequest and HttpServletResponse arguments.
As of Servlet 3.0, a filter may be invoked as part of a REQUEST or ASYNC dispatches that occur in separate threads. A filter can be configured in web.xml whether it should be involved in async dispatches. However, in some cases servlet containers assume different default configuration. Therefore, subclasses can override the method shouldNotFilterAsyncDispatch() to declare statically if they should indeed be invoked, once, during both types of dispatches in order to provide thread initialization, logging, security, and so on. This mechanism complements and does not replace the need to configure a filter in web.xml with dispatcher types.
Subclasses may use isAsyncDispatch(HttpServletRequest) to determine when a filter is invoked as part of an async dispatch, and use isAsyncStarted(HttpServletRequest) to determine when the request has been placed in async mode and therefore the current dispatch won&#39;t be the last one for the given request.
Yet another dispatch type that also occurs in its own thread is ERROR. Subclasses can override shouldNotFilterErrorDispatch() if they wish to declare statically if they should be invoked once during error dispatches.
The getAlreadyFilteredAttributeName method determines how to identify that a request is already filtered. The default implementation is based on the configured name of the concrete filter instance.
Since:
06.12.2003
Author:
Juergen Hoeller, Rossen Stoyanchev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2\u3001-\u6E90\u7801\u5256\u6790" tabindex="-1"><a class="header-anchor" href="#_2\u3001-\u6E90\u7801\u5256\u6790" aria-hidden="true">#</a> 2\u3001 \u6E90\u7801\u5256\u6790</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>    \u6E90\u7801\u5176\u5B9E\u5F88\u7B80\u5355\uFF0COncePerRequestFilter\u4E5F\u662F\u4E00\u4E2A\u57FA\u672C\u7684Filter,\u6838\u5FC3\u539F\u7406\u5C31\u662F
    \u5F53\u4E00\u4E2Arequest\u8FDB\u5165doFilter\u7684\u65F6\u5019\uFF0C\u6839\u636Erequest\u4E2D\u7684\u4E00\u4E2A\u6807\u8BC6\u7B26\u5224\u65AD\u662F\u5426\u5DF2\u7ECF
    \u6267\u884C\u8FC7\uFF0C\u5982\u679C\u662F\u7B2C\u4E00\u6B21\u6267\u884C\uFF0C\u5219\u8BA9\u5176\u8FDB\u5165doFilter,\u5E76\u4E14\u8BBE\u7F6E\u6807\u8BC6\u7B26\u4E3Atrue,\u540E\u9762\u6B64
    request\u5982\u679C\u518D\u6B21\u8FDB\u6765\uFF0C\u5224\u65AD\u5176\u6807\u8BC6\u7B26\u4E3Atrue\u4EE3\u8868\u5DF2\u7ECF\u6267\u884C\uFF0C\u5219\u76F4\u63A5doFilter,\u4E0D\u505A
    \u4EFB\u4F55\u989D\u5916\u7684\u5904\u7406
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">OncePerRequestFilter</span> <span class="token keyword">extends</span> <span class="token class-name">GenericFilterBean</span> <span class="token punctuation">{</span>


     <span class="token comment">//\u6807\u8BC6\u7B26\u524D\u7F00</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> ALREADY_FILTERED_SUFFIX <span class="token operator">=</span> <span class="token string">&quot;.FILTERED&quot;</span><span class="token punctuation">;</span>


	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>request <span class="token keyword">instanceof</span> <span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>response <span class="token keyword">instanceof</span> <span class="token class-name">HttpServletResponse</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServletException</span><span class="token punctuation">(</span><span class="token string">&quot;OncePerRequestFilter just supports HTTP requests&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">HttpServletRequest</span> httpRequest <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> request<span class="token punctuation">;</span>
		<span class="token class-name">HttpServletResponse</span> httpResponse <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">)</span> response<span class="token punctuation">;</span>

        <span class="token comment">//\u6807\u8BC6\u7B26\u7684\u540D\u5B57</span>
		<span class="token class-name">String</span> alreadyFilteredAttributeName <span class="token operator">=</span> <span class="token function">getAlreadyFilteredAttributeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">boolean</span> hasAlreadyFilteredAttribute <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>alreadyFilteredAttributeName<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">skipDispatch</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">shouldNotFilter</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// Proceed without invoking this filter...</span>
			filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
        <span class="token comment">//\u6839\u636E\u6807\u8BC6\u7B26\u5224\u65AD\u662F\u5426\u5DF2\u7ECF\u6267\u884C\u8FC7\uFF0C\u5982\u679C\u5DF2\u7ECF\u6267\u884C\u8FC7\uFF0C\u5219\u76F4\u63A5\u653E\u884C\u5230\u4E0B\u4E00\u8FC7\u6EE4\u5668\uFF0C</span>
        <span class="token comment">//\u672C\u8FC7\u6EE4\u5668\u4E0D\u505A\u4EFB\u4F55\u5904\u7406</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>hasAlreadyFilteredAttribute<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">DispatcherType</span><span class="token punctuation">.</span>ERROR<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getDispatcherType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">doFilterNestedErrorDispatch</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">,</span> httpResponse<span class="token punctuation">,</span> filterChain<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">return</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// Proceed without invoking this filter...</span>
			filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u5982\u679C\u6B64\u8FC7\u6EE4\u5668\u7B2C\u4E00\u6B21\u6267\u884C\uFF0C\u5219\u8C03\u7528doFilterInternal\u505A\u5904\u7406</span>
			<span class="token comment">// Do invoke this filter...</span>
			request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>alreadyFilteredAttributeName<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				<span class="token function">doFilterInternal</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">,</span> httpResponse<span class="token punctuation">,</span> filterChain<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">finally</span> <span class="token punctuation">{</span>
				<span class="token comment">// Remove the &quot;already filtered&quot; request attribute for this request.</span>
				request<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span>alreadyFilteredAttributeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">skipDispatch</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAsyncDispatch</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">shouldNotFilterAsyncDispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">WebUtils</span><span class="token punctuation">.</span>ERROR_REQUEST_URI_ATTRIBUTE<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">shouldNotFilterErrorDispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Return the name of the request attribute that identifies that a request
	 * is already filtered.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The default implementation takes the configured name of the concrete filter
	 * instance and appends &quot;.FILTERED&quot;. If the filter is not fully initialized,
	 * it falls back to its class name.
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getFilterName</span></span>
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">ALREADY_FILTERED_SUFFIX</span></span>
	 */</span>
	<span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">getAlreadyFilteredAttributeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token function">getFilterName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			name <span class="token operator">=</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> name <span class="token operator">+</span> ALREADY_FILTERED_SUFFIX<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	<span class="token doc-comment comment">/**
	 * Same contract as for <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">doFilter</span></span><span class="token punctuation">}</span>, but guaranteed to be
	 * just invoked once per request within a single request thread.
	 * See <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">shouldNotFilterAsyncDispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> for details.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Provides HttpServletRequest and HttpServletResponse arguments instead of the
	 * default ServletRequest and ServletResponse ones.
	 */</span>
     <span class="token comment">//\u5B9E\u73B0\u6B64\u65B9\u6CD5\uFF0C\u8FDB\u884C\u81EA\u5B9A\u4E49\u5904\u7406\u903B\u8F91</span>
	<span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">doFilterInternal</span><span class="token punctuation">(</span>
			<span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3\u3001\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u603B\u7ED3" aria-hidden="true">#</a> 3\u3001\u603B\u7ED3</h2><p>OncePerRequestFilter\u7C7B\u7684\u4F5C\u7528\u5C31\u662F\u89E3\u51B3\u4E0D\u540C\u7248\u672C\uFF08\u6216\u8005\u4E0D\u540C\u5382\u5BB6\u7684Servlet\u5BB9\u5668\uFF09\u5BB9\u5668\u53EF\u80FD\u5B58\u5728\u7684\u4E00\u6B21\u8BF7\u6C42\u91CD\u590D\u8FDB\u5165\u5230\u540C\u4E00\u4E2A\u8FC7\u6EE4\u5668\u7684\u95EE\u9898\u3002 \u5176\u89E3\u51B3\u65B9\u6CD5\u662F\u5728request\u5BF9\u8C61\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u5C5E\u6027\u6807\u8BC6\u7B26\uFF0C\u6BCF\u6B21\u8C03\u7528\u672C\u8FC7\u6EE4\u5668\u5904\u7406\u903B\u8F91\u524D\u5148\u5224\u65ADrequest\u7684\u6807\u8BC6\u7B26\uFF0C\u4FDD\u8BC1\u53EA\u6267\u884C\u4E00\u6B21\u3002</p>`,10),i=[p];function o(c,l){return s(),a("div",null,i)}var d=n(t,[["render",o],["__file","OncePerRequestFilter.html.vue"]]);export{d as default};
