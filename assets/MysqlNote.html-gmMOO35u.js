import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-xHrnIhLr.js";const e={},p=t(`<h3 id="_1、批量插入速度慢" tabindex="-1"><a class="header-anchor" href="#_1、批量插入速度慢"><span>1、批量插入速度慢</span></a></h3><blockquote><p>项目使用的MyBatis-plus批量插入效率很低，遂百度一下原因</p></blockquote><p>在jdbc的链接上加上<code>rewriteBatchedStatements=true</code>参数，可以解决此问题。</p><p>默认情况下<code>rewriteBatchedStatements=false</code>，jdbc批量插入会判断<code>rewriteBatchedStatements</code>，当为<code>true</code>才会执行批量语句，以下从源码(以下jdbc驱动源码版本为8.0.20)角度分析：</p><ol><li><code>com.mysql.cj.jdbc.StatementImpl#executeBatch</code></li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">executeBatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token comment">//注意此处打开executeBatchInternal()源码要进入ClientPreparedStatement的executeBatchInternal方法,别进入StatementImpl的executeBatchInternal方法</span>
        <span class="token keyword">return</span> <span class="token class-name">Util</span><span class="token punctuation">.</span><span class="token function">truncateAndConvertToInt</span><span class="token punctuation">(</span><span class="token function">executeBatchInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>源码要进入<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>com.mysql.cj.jdbc.ClientPreparedStatement#executeBatchInternal</code></li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">executeBatchInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token function">checkClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getConnectionMutex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">isReadOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SQLException</span><span class="token punctuation">(</span><span class="token class-name">Messages</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;PreparedStatement.25&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Messages</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;PreparedStatement.26&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token class-name">MysqlErrorNumbers</span><span class="token punctuation">.</span><span class="token constant">SQL_STATE_ILLEGAL_ARGUMENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token function">getBatchedArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token function">getBatchedArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// we timeout the entire batch, not individual statements</span>
            <span class="token keyword">int</span> batchTimeout <span class="token operator">=</span> <span class="token function">getTimeoutInMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setTimeoutInMillis</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">resetCancelledState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token function">statementBegins</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token function">clearWarnings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">//这里会判断rewriteBatchedStatements的值,只有为true,才会真正进入批量操作</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>batchHasPlainStatements <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rewriteBatchedStatements的值<span class="token punctuation">,</span>只有为<span class="token boolean">true</span><span class="token punctuation">,</span>才会真正进入批量操作<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PreparedQuery</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParseInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">canRewriteAsMultiValueInsertAtSqlLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">executeBatchedInserts</span><span class="token punctuation">(</span>batchTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>batchHasPlainStatements <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token function">getBatchedArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span>
                            <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token function">getBatchedArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token comment">/* cost of option setting rt-wise */</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">executePreparedBatchAsMultiStatement</span><span class="token punctuation">(</span>batchTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
				<span class="token comment">//如果rewriteBatchedStatements为false则走到这里,看名字中的Serially就知道这个是逐条插入</span>
                <span class="token keyword">return</span> <span class="token function">executeBatchSerially</span><span class="token punctuation">(</span>batchTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token function">getStatementExecuting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token function">clearBatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><code>com.mysql.cj.jdbc.ClientPreparedStatement#executeBatchSerially</code></li></ol><p>打开源码可看到注释写的很清楚了,是逐条插入</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220607182512020.png" alt="image-20220607182512020"></p><p><strong>结论:</strong></p><p>使用Mybatis时,批量插入慢,需要在jdbc的url上拼接<code>rewriteBatchedStatements=true</code></p><h3 id="_2、唯一索引" tabindex="-1"><a class="header-anchor" href="#_2、唯一索引"><span>2、唯一索引</span></a></h3><blockquote><p>唯一索引指的是一个字段的值在表中只能有一个，唯一索引可以有多个字段，比如用户表有姓名、年龄、性别等，当新建一个唯一索引，把姓名、年龄放在同一个唯一索引，代表用户表不允许存在姓名和年龄同时相等记录，姓名和年龄可以有一个相同。</p></blockquote>`,15),c=[p];function o(l,i){return s(),a("div",null,c)}const k=n(e,[["render",o],["__file","MysqlNote.html.vue"]]),d=JSON.parse('{"path":"/other/database/MysqlNote.html","title":"Mysql知识点记录","lang":"zh-CN","frontmatter":{"title":"Mysql知识点记录","date":"2022-06-07T00:00:00.000Z","author":"chenkun","publish":true,"keys":null,"description":"1、批量插入速度慢 项目使用的MyBatis-plus批量插入效率很低，遂百度一下原因 在jdbc的链接上加上rewriteBatchedStatements=true参数，可以解决此问题。 默认情况下rewriteBatchedStatements=false，jdbc批量插入会判断rewriteBatchedStatements，当为true才会执...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/other/database/MysqlNote.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"Mysql知识点记录"}],["meta",{"property":"og:description","content":"1、批量插入速度慢 项目使用的MyBatis-plus批量插入效率很低，遂百度一下原因 在jdbc的链接上加上rewriteBatchedStatements=true参数，可以解决此问题。 默认情况下rewriteBatchedStatements=false，jdbc批量插入会判断rewriteBatchedStatements，当为true才会执..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220607182512020.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"chenkun"}],["meta",{"property":"article:published_time","content":"2022-06-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Mysql知识点记录\\",\\"image\\":[\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220607182512020.png\\"],\\"datePublished\\":\\"2022-06-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"chenkun\\"}]}"]]},"headers":[{"level":3,"title":"1、批量插入速度慢","slug":"_1、批量插入速度慢","link":"#_1、批量插入速度慢","children":[]},{"level":3,"title":"2、唯一索引","slug":"_2、唯一索引","link":"#_2、唯一索引","children":[]}],"git":{"createdTime":1659362219000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"462488588@qq.com","commits":1},{"name":"chenkun","email":"462488588@qq.com","commits":1}]},"readingTime":{"minutes":1.56,"words":469},"filePathRelative":"other/database/MysqlNote.md","localizedDate":"2022年6月7日","excerpt":"<!--more-->\\n<h3>1、批量插入速度慢</h3>\\n<blockquote>\\n<p>项目使用的MyBatis-plus批量插入效率很低，遂百度一下原因</p>\\n</blockquote>\\n<p>在jdbc的链接上加上<code>rewriteBatchedStatements=true</code>参数，可以解决此问题。</p>\\n<p>默认情况下<code>rewriteBatchedStatements=false</code>，jdbc批量插入会判断<code>rewriteBatchedStatements</code>，当为<code>true</code>才会执行批量语句，以下从源码(以下jdbc驱动源码版本为8.0.20)角度分析：</p>","autoDesc":true}');export{k as comp,d as data};
