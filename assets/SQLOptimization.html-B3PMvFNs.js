import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as s,e as a}from"./app-eaM1OiHO.js";const i={},o=a(`<p><strong>背景：</strong></p><blockquote><p>最近在改一个老项目，其中使用到框架是mybatis，有一个业务表<code>install_record</code>,代表装机记录，一个<code>accessory</code>代表备件表，一个<code>sys_file</code>代表文件表，业务关系是一个install_record对应多个accessory、以及多个sys_file，在一开始使用的是mybatis的嵌套查询的方式，但此方式有N+1的问题，比如一个装机表对应10个accessory、20个sys_file，则就要查询1+10+20 = 31次数据库，效率是很低的，因此想改成嵌套查询的方式。</p></blockquote><h3 id="_1、改造后的语句如下" tabindex="-1"><a class="header-anchor" href="#_1、改造后的语句如下"><span>1、改造后的语句如下</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>SELECT xxx   FROM
	ccsx_weibao.install_record ir
	LEFT JOIN ccsx_weibao.install_record_accessory ira ON ira.host_id <span class="token operator">=</span> ir.id
	LEFT JOIN ccsx.sys_file f ON f.business_type <span class="token operator">=</span> <span class="token number">1</span> 
	AND f.business_id <span class="token operator">=</span> ir.id 	LIMIT <span class="token number">0,1000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>install_record表中有8000数据，accessory表20000数据，sys_file 表240000数据，执行sql直接卡死</p><h3 id="_2、原因分析" tabindex="-1"><a class="header-anchor" href="#_2、原因分析"><span>2、原因分析</span></a></h3><p>数据量其实很小，执行慢的原因是没有索引，使用<code>explain</code>分析sql</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>explain xxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220428164618054.png" alt="image-20220428164618054"></p><p>可以看到key那一列，只有两个PRIMARY被索引，所以所有用于关联字段加上索引即可，此处给<code>business_id</code>、<code>host_id</code>加上索引就ok了</p>`,10),n=[o];function c(r,l){return t(),s("div",null,n)}const m=e(i,[["render",c],["__file","SQLOptimization.html.vue"]]),h=JSON.parse('{"path":"/other/database/SQLOptimization.html","title":"联合查询sql优化","lang":"zh-CN","frontmatter":{"title":"联合查询sql优化","date":"2022-04-28T00:00:00.000Z","author":"chenkun","publish":true,"keys":null,"category":["数据库"],"description":"背景： 最近在改一个老项目，其中使用到框架是mybatis，有一个业务表install_record,代表装机记录，一个accessory代表备件表，一个sys_file代表文件表，业务关系是一个install_record对应多个accessory、以及多个sys_file，在一开始使用的是mybatis的嵌套查询的方式，但此方式有N+1的问题，比如...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/other/database/SQLOptimization.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"联合查询sql优化"}],["meta",{"property":"og:description","content":"背景： 最近在改一个老项目，其中使用到框架是mybatis，有一个业务表install_record,代表装机记录，一个accessory代表备件表，一个sys_file代表文件表，业务关系是一个install_record对应多个accessory、以及多个sys_file，在一开始使用的是mybatis的嵌套查询的方式，但此方式有N+1的问题，比如..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220428164618054.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-01T13:56:59.000Z"}],["meta",{"property":"article:author","content":"chenkun"}],["meta",{"property":"article:published_time","content":"2022-04-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-08-01T13:56:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"联合查询sql优化\\",\\"image\\":[\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220428164618054.png\\"],\\"datePublished\\":\\"2022-04-28T00:00:00.000Z\\",\\"dateModified\\":\\"2022-08-01T13:56:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"chenkun\\"}]}"]]},"headers":[{"level":3,"title":"1、改造后的语句如下","slug":"_1、改造后的语句如下","link":"#_1、改造后的语句如下","children":[]},{"level":3,"title":"2、原因分析","slug":"_2、原因分析","link":"#_2、原因分析","children":[]}],"git":{"createdTime":1659362219000,"updatedTime":1659362219000,"contributors":[{"name":"chenkun","email":"462488588@qq.com","commits":1}]},"readingTime":{"minutes":1.01,"words":304},"filePathRelative":"other/database/SQLOptimization.md","localizedDate":"2022年4月28日","excerpt":"<!--more-->\\n<p><strong>背景：</strong></p>\\n<blockquote>\\n<p>最近在改一个老项目，其中使用到框架是mybatis，有一个业务表<code>install_record</code>,代表装机记录，一个<code>accessory</code>代表备件表，一个<code>sys_file</code>代表文件表，业务关系是一个install_record对应多个accessory、以及多个sys_file，在一开始使用的是mybatis的嵌套查询的方式，但此方式有N+1的问题，比如一个装机表对应10个accessory、20个sys_file，则就要查询1+10+20 = 31次数据库，效率是很低的，因此想改成嵌套查询的方式。</p>\\n</blockquote>","autoDesc":true}');export{m as comp,h as data};
