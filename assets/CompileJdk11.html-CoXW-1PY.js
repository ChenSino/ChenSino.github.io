import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c as p,a as n,b as s,d as e,e as c}from"./app-COSs6b7v.js";const l={},r=n("h2",{id:"_1-下载源码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-下载源码"},[n("span",null,"1 下载源码")])],-1),u={href:"https://github.com/openjdk?",target:"_blank",rel:"noopener noreferrer"},d=c(`<p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230113095229.png" alt="20230113095229"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/openjdk/jdk11u.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-编译" tabindex="-1"><a class="header-anchor" href="#_2-编译"><span>2 编译</span></a></h2><p>按照readme的文档进行编译</p><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230113095821.png" alt="20230113095821"></p><h3 id="_2-1-configure" tabindex="-1"><a class="header-anchor" href="#_2-1-configure"><span>2.1 configure</span></a></h3><p>首先执行进入源码目录，执行<code>bash configure</code>此命令会检查编译需要的环境，如果报错，根据错误提示安装必要的编译工具。</p><p>注意事项：</p><ol><li>安装必要的环境，包括gcc、autoconf、boot JDK等</li><li>编译一个jdk是需要依赖一个现有的jdk,另外对版本有要求，比如你编译的版本是N,则需要你电脑上有一个版本至少为N-1的版本，这里我编译jdk11时，我电脑事先安装了jdk11,理论上至少需要一个jdk10+</li><li>gcc版本不能太老，也不能太新，这里一定要看你当前版本对应的文档，每个jdk版本对gcc版本要求也不一样，新版本jdk肯定能兼容更新的gcc,我在编译jdk11时，因为我的manjro是滚动更新，gcc版本是12,结果太新了导致编译报错。</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">bash</span> configure
<span class="token comment">#……省略前边若干日志</span>
<span class="token comment">#……</span>
config.status: creating /home/chenkun/IdeaProjects/jdk11u/build/linux-x86_64-normal-server-release/buildjdk-spec.gmk
config.status: creating /home/chenkun/IdeaProjects/jdk11u/build/linux-x86_64-normal-server-release/compare.sh
config.status: creating /home/chenkun/IdeaProjects/jdk11u/build/linux-x86_64-normal-server-release/Makefile

<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
The existing configuration has been successfully updated <span class="token keyword">in</span>
/home/chenkun/IdeaProjects/jdk11u/build/linux-x86_64-normal-server-release
using default settings.

Configuration summary:
* Debug level:    release
* HS debug level: product
* JVM variants:   server
* JVM features:   server: <span class="token string">&#39;aot cds cmsgc compiler1 compiler2 epsilongc g1gc graal jfr jni-check jvmci jvmti management nmt parallelgc serialgc services vm-structs zgc&#39;</span> 
* OpenJDK target: OS: linux, CPU architecture: x86, address length: <span class="token number">64</span>
* Version string: <span class="token number">11.0</span>.18-internal+0-adhoc.chenkun.jdk11u <span class="token punctuation">(</span><span class="token number">11.0</span>.18-internal<span class="token punctuation">)</span>

Tools summary:
* Boot JDK:       openjdk version <span class="token string">&quot;11.0.17&quot;</span> <span class="token number">2022</span>-10-18 OpenJDK Runtime Environment <span class="token punctuation">(</span>build <span class="token number">11.0</span>.17+1<span class="token punctuation">)</span> OpenJDK <span class="token number">64</span>-Bit Server VM <span class="token punctuation">(</span>build <span class="token number">11.0</span>.17+1, mixed mode<span class="token punctuation">)</span> <span class="token punctuation">(</span>at /usr/lib/jvm/java-11-openjdk<span class="token punctuation">)</span>
* Toolchain:      gcc <span class="token punctuation">(</span>GNU Compiler Collection<span class="token punctuation">)</span>
* C Compiler:     Version <span class="token number">12.2</span>.0 <span class="token punctuation">(</span>at /usr/bin/gcc<span class="token punctuation">)</span>
* C++ Compiler:   Version <span class="token number">12.2</span>.0 <span class="token punctuation">(</span>at /usr/bin/g++<span class="token punctuation">)</span>

Build performance summary:
* Cores to use:   <span class="token number">16</span>
* Memory limit:   <span class="token number">31876</span> MB

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上，执行<code>bash configure</code>后，检查了环境包括Boot JDK,Toochain,C Compiler,C++ Compiler，这里c和c++编译器版本要一致，可以看到上面我的版本是12.2.0，这个版本太新会导致编译有问题，在building文档中也有说明，最新支持到7.4,更新的版本没有测试，可能兼容可能不兼容。 <img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230113101404.png" alt="20230113101404"></p><h3 id="_2-2-执行编译make-images" tabindex="-1"><a class="header-anchor" href="#_2-2-执行编译make-images"><span>2.2 执行编译make images</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">make</span> images
<span class="token comment">##省略中间若干日志</span>
/home/chenkun/IdeaProjects/jdk11u/src/hotspot/os/linux/cgroupV1Subsystem_linux.hpp:105:31: error: non-static data member initializers only available with <span class="token string">&#39;-std=c++11&#39;</span> or <span class="token string">&#39;-std=gnu++11&#39;</span> <span class="token punctuation">[</span>-Werror<span class="token operator">=</span>c++11-extensions<span class="token punctuation">]</span>
  <span class="token number">105</span> <span class="token operator">|</span>     CgroupV1Controller* _pids <span class="token operator">=</span> NULL<span class="token punctuation">;</span>
   <span class="token punctuation">..</span>. <span class="token punctuation">(</span>rest of output omitted<span class="token punctuation">)</span>
* For target hotspot_variant-server_libjvm_objs_cgroupV2Subsystem_linux.o:
In <span class="token function">file</span> included from /home/chenkun/IdeaProjects/jdk11u/src/hotspot/os/linux/cgroupV2Subsystem_linux.cpp:25:
/home/chenkun/IdeaProjects/jdk11u/src/hotspot/os/linux/cgroupV2Subsystem_linux.hpp:54:32: error: non-static data member initializers only available with <span class="token string">&#39;-std=c++11&#39;</span> or <span class="token string">&#39;-std=gnu++11&#39;</span> <span class="token punctuation">[</span>-Werror<span class="token operator">=</span>c++11-extensions<span class="token punctuation">]</span>
   <span class="token number">54</span> <span class="token operator">|</span>     CgroupController* _unified <span class="token operator">=</span> NULL<span class="token punctuation">;</span>
      <span class="token operator">|</span>                                ^
/home/chenkun/IdeaProjects/jdk11u/src/hotspot/os/linux/cgroupV2Subsystem_linux.hpp:56:38: error: non-static data member initializers only available with <span class="token string">&#39;-std=c++11&#39;</span> or <span class="token string">&#39;-std=gnu++11&#39;</span> <span class="token punctuation">[</span>-Werror<span class="token operator">=</span>c++11-extensions<span class="token punctuation">]</span>
   <span class="token number">56</span> <span class="token operator">|</span>     CachingCgroupController* _memory <span class="token operator">=</span> NULL<span class="token punctuation">;</span>
      <span class="token operator">|</span>                                      ^
/home/chenkun/IdeaProjects/jdk11u/src/hotspot/os/linux/cgroupV2Subsystem_linux.hpp:57:35: error: non-static data member initializers only available with <span class="token string">&#39;-std=c++11&#39;</span> or <span class="token string">&#39;-std=gnu++11&#39;</span> <span class="token punctuation">[</span>-Werror<span class="token operator">=</span>c++11-extensions<span class="token punctuation">]</span>
   <span class="token number">57</span> <span class="token operator">|</span>     CachingCgroupController* _cpu <span class="token operator">=</span> NULL<span class="token punctuation">;</span>
      <span class="token operator">|</span>                                   ^
cc1plus: all warnings being treated as errors

* All <span class="token builtin class-name">command</span> lines available <span class="token keyword">in</span> /home/chenkun/IdeaProjects/jdk11u/build/linux-x86_64-normal-server-release/make-support/failure-logs.
<span class="token operator">==</span><span class="token operator">=</span> End of repeated output <span class="token operator">==</span><span class="token operator">=</span>

No indication of failed target found.
Hint: Try searching the build log <span class="token keyword">for</span> <span class="token string">&#39;] Error&#39;</span><span class="token builtin class-name">.</span>
Hint: See doc/building.html<span class="token comment">#troubleshooting for assistance.</span>

make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: *** <span class="token punctuation">[</span>/home/chenkun/IdeaProjects/jdk11u/make/Init.gmk:305：main<span class="token punctuation">]</span> 错误 <span class="token number">2</span>
make: *** <span class="token punctuation">[</span>/home/chenkun/IdeaProjects/jdk11u/make/Init.gmk:186：images<span class="token punctuation">]</span> 错误 <span class="token number">2</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上编译报错了，根据搞错大概也看出编译器的版本最大只能支持到11,所以我这里需要安装另一个版本的编译器，这里就体现arch系linux的缺点了，滚动版本太激进会导致有的老软件存在各种版本不兼容。</p><h3 id="_2-3-解决编译器gcc版本问题" tabindex="-1"><a class="header-anchor" href="#_2-3-解决编译器gcc版本问题"><span>2.3 解决编译器gcc版本问题</span></a></h3><p>使用yay安装老版本的gcc,这里我和文档保持一致，文档说目前最新的已测试通过的版本是gcc7,这里我就安装gcc7：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ yay gcc7
<span class="token number">8</span> aur/armeb-none-eabi-gcc75-linaro-bin <span class="token number">7</span>.5_2019.12-1 <span class="token punctuation">(</span>+0 <span class="token number">0.00</span><span class="token punctuation">)</span> 
    The GNU Compiler Collection - cross compiler <span class="token keyword">for</span> ARM EABI <span class="token punctuation">(</span>bare-metal<span class="token punctuation">)</span> big-endian target.
<span class="token number">7</span> aur/arm-none-eabi-gcc73-linaro <span class="token number">7</span>.3_2018.05-1 <span class="token punctuation">(</span>+0 <span class="token number">0.00</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>过时的: <span class="token number">2021</span>-11-02<span class="token punctuation">)</span> 
    The GNU Compiler Collection - cross compiler <span class="token keyword">for</span> ARM EABI <span class="token punctuation">(</span>bare-metal<span class="token punctuation">)</span> target.
<span class="token number">6</span> aur/aarch64-linux-gnu-gcc75-linaro-bin <span class="token number">2019.12</span>-1 <span class="token punctuation">(</span>+0 <span class="token number">0.00</span><span class="token punctuation">)</span> 
    The GNU Compiler Collection - cross compiler <span class="token keyword">for</span> ARM64 target
<span class="token number">5</span> aur/arm-linux-gnueabi-gcc75-linaro-bin <span class="token number">7.5</span>.0-1 <span class="token punctuation">(</span>+1 <span class="token number">0.00</span><span class="token punctuation">)</span> 
    The GNU Compiler Collection - cross compiler <span class="token keyword">for</span> ARM target
<span class="token number">4</span> aur/arm-linux-gnueabihf-gcc75-linaro-bin <span class="token number">7.5</span>-0 <span class="token punctuation">(</span>+2 <span class="token number">0.57</span><span class="token punctuation">)</span> 
    The GNU Compiler Collection- cross compiler <span class="token keyword">for</span> ARMv7 EABI hard float target. <span class="token punctuation">(</span>Linaro<span class="token punctuation">)</span>
<span class="token number">3</span> aur/gcc7-libs <span class="token number">7.5</span>.0-4 <span class="token punctuation">(</span>+15 <span class="token number">0.02</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>已安装<span class="token punctuation">)</span>
    Runtime libraries shipped by GCC <span class="token punctuation">(</span><span class="token number">7</span>.x.x<span class="token punctuation">)</span>
<span class="token number">2</span> aur/gcc7-fortran <span class="token number">7.5</span>.0-4 <span class="token punctuation">(</span>+15 <span class="token number">0.02</span><span class="token punctuation">)</span> 
    Fortran front-end <span class="token keyword">for</span> GCC <span class="token punctuation">(</span><span class="token number">7</span>.x.x<span class="token punctuation">)</span>
<span class="token number">1</span> aur/gcc7 <span class="token number">7.5</span>.0-4 <span class="token punctuation">(</span>+15 <span class="token number">0.02</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>已安装<span class="token punctuation">)</span>
    The GNU Compiler Collection - C and C++ frontends <span class="token punctuation">(</span><span class="token number">7</span>.x.x<span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> 要安装的包 <span class="token punctuation">(</span>示例: <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>, <span class="token number">1</span>-3 或 ^4<span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上，选择第一个就行了，因为我已经安装过了，所以显示已安装。</p><p>安装好了以后，需要把默认的gcc改成7版本的。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">##1. 查看当前默认的gcc在哪里</span>
<span class="token function">which</span> gcc
/usr/bin/gcc

<span class="token function">which</span> g++ 
/usr/bin/g++

<span class="token comment">##2. 备份原来的12.2.0版本，编译完jdk后还原，防止系统其他软件出现问题</span>
<span class="token builtin class-name">cd</span> /usr/bin
<span class="token function">sudo</span> <span class="token function">cp</span> gcc gcc.bak
<span class="token function">sudo</span> <span class="token function">cp</span> g++ g++.bak

<span class="token comment">## 3. 把gcc7设为默认</span>
<span class="token function">sudo</span> <span class="token function">cp</span> gcc-7 gcc
<span class="token function">sudo</span> <span class="token function">cp</span> g++-7 g++
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置默认gcc后，重新执行<code>bash configure</code> ，然后<code>make clean</code>，然后再<code>make images</code>就成功了，编译好的jdk默认在./build/linux-x86_64-normal-server-release/images/jdk</p><h2 id="_3、jdk源码目录结构" tabindex="-1"><a class="header-anchor" href="#_3、jdk源码目录结构"><span>3、jdk源码目录结构</span></a></h2>`,22),m={href:"https://openjdk.org/jeps/8283227",target:"_blank",rel:"noopener noreferrer"};function k(b,v){const a=o("ExternalLinkIcon");return i(),p("div",null,[r,n("p",null,[s("网上根据关键词查找jdk源码，查找出来很多可以下载源码的链接，这里我们使用github去官方仓库，openjdk是托管在github的"),n("a",u,[s("OpenJDK组织"),e(a)]),s("下，该组织下有各个版本的openjdk源码，不要直接使用jdk仓库，这个仓库存放的是当前正在开发的最新版本代码，我们要用的是jdk11,因此我们搜索jdk11仓库，我这里选择的是jdk11u这个库。")]),d,n("p",null,[n("a",m,[s("jdk源码目录结构"),e(a)])])])}const j=t(l,[["render",k],["__file","CompileJdk11.html.vue"]]),f=JSON.parse('{"path":"/java/advance/CompileJdk11.html","title":"在Manjaro中编译JDK11","lang":"zh-CN","frontmatter":{"title":"在Manjaro中编译JDK11","date":"2023-01-13T00:00:00.000Z","author":"chenkun","publish":true,"keys":null,"category":["jdk"],"description":"1 下载源码 网上根据关键词查找jdk源码，查找出来很多可以下载源码的链接，这里我们使用github去官方仓库，openjdk是托管在github的OpenJDK组织下，该组织下有各个版本的openjdk源码，不要直接使用jdk仓库，这个仓库存放的是当前正在开发的最新版本代码，我们要用的是jdk11,因此我们搜索jdk11仓库，我这里选择的是jdk11...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/blog/java/advance/CompileJdk11.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"在Manjaro中编译JDK11"}],["meta",{"property":"og:description","content":"1 下载源码 网上根据关键词查找jdk源码，查找出来很多可以下载源码的链接，这里我们使用github去官方仓库，openjdk是托管在github的OpenJDK组织下，该组织下有各个版本的openjdk源码，不要直接使用jdk仓库，这个仓库存放的是当前正在开发的最新版本代码，我们要用的是jdk11,因此我们搜索jdk11仓库，我这里选择的是jdk11..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230113095229.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-13T05:57:56.000Z"}],["meta",{"property":"article:author","content":"chenkun"}],["meta",{"property":"article:published_time","content":"2023-01-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-13T05:57:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在Manjaro中编译JDK11\\",\\"image\\":[\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230113095229.png\\",\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230113095821.png\\",\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230113101404.png\\"],\\"datePublished\\":\\"2023-01-13T00:00:00.000Z\\",\\"dateModified\\":\\"2023-01-13T05:57:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"chenkun\\"}]}"]]},"headers":[{"level":2,"title":"1 下载源码","slug":"_1-下载源码","link":"#_1-下载源码","children":[]},{"level":2,"title":"2 编译","slug":"_2-编译","link":"#_2-编译","children":[{"level":3,"title":"2.1 configure","slug":"_2-1-configure","link":"#_2-1-configure","children":[]},{"level":3,"title":"2.2 执行编译make images","slug":"_2-2-执行编译make-images","link":"#_2-2-执行编译make-images","children":[]},{"level":3,"title":"2.3 解决编译器gcc版本问题","slug":"_2-3-解决编译器gcc版本问题","link":"#_2-3-解决编译器gcc版本问题","children":[]}]},{"level":2,"title":"3、jdk源码目录结构","slug":"_3、jdk源码目录结构","link":"#_3、jdk源码目录结构","children":[]}],"git":{"createdTime":1673577396000,"updatedTime":1673589476000,"contributors":[{"name":"ChenSino","email":"chenxk@sonoscape.net","commits":2}]},"readingTime":{"minutes":4.55,"words":1366},"filePathRelative":"java/advance/CompileJdk11.md","localizedDate":"2023年1月13日","excerpt":"<!--more-->\\n<h2>1 下载源码</h2>\\n<p>网上根据关键词查找jdk源码，查找出来很多可以下载源码的链接，这里我们使用github去官方仓库，openjdk是托管在github的<a href=\\"https://github.com/openjdk?\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">OpenJDK组织</a>下，该组织下有各个版本的openjdk源码，不要直接使用jdk仓库，这个仓库存放的是当前正在开发的最新版本代码，我们要用的是jdk11,因此我们搜索jdk11仓库，我这里选择的是jdk11u这个库。</p>\\n<p><img src=\\"https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/20230113095229.png\\" alt=\\"20230113095229\\"></p>","autoDesc":true}');export{j as comp,f as data};
