import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,b as s,a as e,e as a,d as n,r as i}from"./app.9ec68dc0.js";const l={},u=a(`<p>Spring \u6700\u91CD\u8981\u7684\u6982\u5FF5\u662F IOC \u548C AOP\uFF0C\u672C\u7BC7\u6587\u7AE0\u5176\u5B9E\u5C31\u662F\u8981\u5E26\u9886\u5927\u5BB6\u6765\u5206\u6790\u4E0B Spring \u7684 IOC \u5BB9\u5668\u3002\u65E2\u7136\u5927\u5BB6\u5E73\u65F6\u90FD\u8981\u7528\u5230 Spring\uFF0C\u600E\u4E48\u53EF\u4EE5\u4E0D\u597D\u597D\u4E86\u89E3 Spring \u5462\uFF1F\u9605\u8BFB\u672C\u6587\u5E76\u4E0D\u80FD\u8BA9\u4F60\u6210\u4E3A Spring \u4E13\u5BB6\uFF0C\u4E0D\u8FC7\u4E00\u5B9A\u6709\u52A9\u4E8E\u5927\u5BB6\u7406\u89E3 Spring \u7684\u5F88\u591A\u6982\u5FF5\uFF0C\u5E2E\u52A9\u5927\u5BB6\u6392\u67E5\u5E94\u7528\u4E2D\u548C Spring \u76F8\u5173\u7684\u4E00\u4E9B\u95EE\u9898\u3002</p><p>\u672C\u6587\u91C7\u7528\u7684\u6E90\u7801\u7248\u672C\u662F 4.3.11.RELEASE\uFF0C\u7B97\u662F 5.0.x \u524D\u6BD4\u8F83\u65B0\u7684\u7248\u672C\u4E86\u3002\u4E3A\u4E86\u964D\u4F4E\u96BE\u5EA6\uFF0C\u672C\u6587\u6240\u8BF4\u7684\u6240\u6709\u7684\u5185\u5BB9\u90FD\u662F\u57FA\u4E8E xml \u7684\u914D\u7F6E\u7684\u65B9\u5F0F\uFF0C\u5B9E\u9645\u4F7F\u7528\u5DF2\u7ECF\u5F88\u5C11\u4EBA\u8FD9\u4E48\u505A\u4E86\uFF0C\u81F3\u5C11\u4E0D\u662F\u7EAF xml \u914D\u7F6E\uFF0C\u4E0D\u8FC7\u4ECE\u7406\u89E3\u6E90\u7801\u7684\u89D2\u5EA6\u6765\u770B\u7528\u8FD9\u79CD\u65B9\u5F0F\u6765\u8BF4\u65E0\u7591\u662F\u6700\u5408\u9002\u7684\u3002</p><p>\u9605\u8BFB\u5EFA\u8BAE\uFF1A\u8BFB\u8005\u81F3\u5C11\u9700\u8981\u77E5\u9053\u600E\u4E48\u914D\u7F6E Spring\uFF0C\u4E86\u89E3 Spring \u4E2D\u7684\u5404\u79CD\u6982\u5FF5\uFF0C\u5C11\u90E8\u5206\u5185\u5BB9\u6211\u8FD8\u5047\u8BBE\u8BFB\u8005\u4F7F\u7528\u8FC7 SpringMVC\u3002\u672C\u6587\u8981\u8BF4\u7684 IOC \u603B\u4F53\u6765\u8BF4\u6709\u4E24\u5904\u5730\u65B9\u6700\u91CD\u8981\uFF0C\u4E00\u4E2A\u662F\u521B\u5EFA Bean \u5BB9\u5668\uFF0C\u4E00\u4E2A\u662F\u521D\u59CB\u5316 Bean\uFF0C\u5982\u679C\u8BFB\u8005\u89C9\u5F97\u4E00\u6B21\u6027\u770B\u5B8C\u672C\u6587\u538B\u529B\u6709\u70B9\u5927\uFF0C\u90A3\u4E48\u53EF\u4EE5\u6309\u8FD9\u4E2A\u601D\u8DEF\u5206\u4E24\u6B21\u6D88\u5316\u3002\u8BFB\u8005\u4E0D\u4E00\u5B9A\u5BF9 Spring \u5BB9\u5668\u7684\u6E90\u7801\u611F\u5174\u8DA3\uFF0C\u4E5F\u8BB8\u9644\u5F55\u90E8\u5206\u4ECB\u7ECD\u7684\u77E5\u8BC6\u5BF9\u8BFB\u8005\u6709\u4E9B\u8BB8\u4F5C\u7528\u3002</p><p>\u5E0C\u671B\u901A\u8FC7\u672C\u6587\u53EF\u4EE5\u8BA9\u8BFB\u8005\u4E0D\u60E7\u6015\u9605\u8BFB Spring \u6E90\u7801\uFF0C\u4E5F\u5E0C\u671B\u5927\u5BB6\u80FD\u53CD\u9988\u8868\u8FF0\u9519\u8BEF\u6216\u4E0D\u5408\u7406\u7684\u5730\u65B9\u3002</p><h2 id="\u5F15\u8A00" tabindex="-1"><a class="header-anchor" href="#\u5F15\u8A00" aria-hidden="true">#</a> \u5F15\u8A00</h2><p>\u5148\u770B\u4E0B\u6700\u57FA\u672C\u7684\u542F\u52A8 Spring \u5BB9\u5668\u7684\u4F8B\u5B50\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:applicationfile.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u4EE3\u7801\u5C31\u53EF\u4EE5\u5229\u7528\u914D\u7F6E\u6587\u4EF6\u6765\u542F\u52A8\u4E00\u4E2A Spring \u5BB9\u5668\u4E86\uFF0C\u8BF7\u4F7F\u7528 maven \u7684\u5C0F\u4F19\u4F34\u76F4\u63A5\u5728 dependencies \u4E2D\u52A0\u4E0A\u4EE5\u4E0B\u4F9D\u8D56\u5373\u53EF\uFF0C\u4E2A\u4EBA\u6BD4\u8F83\u53CD\u5BF9\u90A3\u4E9B\u4E0D\u77E5\u9053\u8981\u6DFB\u52A0\u4EC0\u4E48\u4F9D\u8D56\uFF0C\u7136\u540E\u628A Spring \u7684\u6240\u6709\u76F8\u5173\u7684\u4E1C\u897F\u90FD\u52A0\u8FDB\u6765\u7684\u65B9\u5F0F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
  <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
  <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>context<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
  <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">4.3</span><span class="token number">.11</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>spring-context \u4F1A\u81EA\u52A8\u5C06 spring-core\u3001spring-beans\u3001spring-aop\u3001spring-expression \u8FD9\u51E0\u4E2A\u57FA\u7840 jar \u5305\u5E26\u8FDB\u6765\u3002</p></blockquote><p>\u591A\u8BF4\u4E00\u53E5\uFF0C\u5F88\u591A\u5F00\u53D1\u8005\u5165\u95E8\u5C31\u76F4\u63A5\u63A5\u89E6\u7684 SpringMVC\uFF0C\u5BF9 Spring \u5176\u5B9E\u4E0D\u662F\u5F88\u4E86\u89E3\uFF0CSpring \u662F\u6E10\u8FDB\u5F0F\u7684\u5DE5\u5177\uFF0C\u5E76\u4E0D\u5177\u6709\u5F88\u5F3A\u7684\u4FB5\u5165\u6027\uFF0C\u5B83\u7684\u6A21\u5757\u4E5F\u5212\u5206\u5F97\u5F88\u5408\u7406\uFF0C\u5373\u4F7F\u4F60\u7684\u5E94\u7528\u4E0D\u662F web \u5E94\u7528\uFF0C\u6216\u8005\u4E4B\u524D\u5B8C\u5168\u6CA1\u6709\u4F7F\u7528\u5230 Spring\uFF0C\u800C\u4F60\u5C31\u60F3\u7528 Spring \u7684\u4F9D\u8D56\u6CE8\u5165\u8FD9\u4E2A\u529F\u80FD\uFF0C\u5176\u5B9E\u5B8C\u5168\u662F\u53EF\u4EE5\u7684\uFF0C\u5B83\u7684\u5F15\u5165\u4E0D\u4F1A\u5BF9\u5176\u4ED6\u7684\u7EC4\u4EF6\u4EA7\u751F\u51B2\u7A81\u3002</p><p>\u5E9F\u8BDD\u8BF4\u5B8C\uFF0C\u6211\u4EEC\u7EE7\u7EED\u3002<code>ApplicationContext context = new ClassPathXmlApplicationContext(...)</code> \u5176\u5B9E\u5F88\u597D\u7406\u89E3\uFF0C\u4ECE\u540D\u5B57\u4E0A\u5C31\u53EF\u4EE5\u731C\u51FA\u4E00\u4E8C\uFF0C\u5C31\u662F\u5728 ClassPath \u4E2D\u5BFB\u627E xml \u914D\u7F6E\u6587\u4EF6\uFF0C\u6839\u636E xml \u6587\u4EF6\u5185\u5BB9\u6765\u6784\u5EFA ApplicationContext\u3002\u5F53\u7136\uFF0C\u9664\u4E86 ClassPathXmlApplicationContext \u4EE5\u5916\uFF0C\u6211\u4EEC\u4E5F\u8FD8\u6709\u5176\u4ED6\u6784\u5EFA ApplicationContext \u7684\u65B9\u6848\u53EF\u4F9B\u9009\u62E9\uFF0C\u6211\u4EEC\u5148\u6765\u770B\u770B\u5927\u4F53\u7684\u7EE7\u627F\u7ED3\u6784\u662F\u600E\u4E48\u6837\u7684\uFF1A</p><p><img src="https://www.javadoop.com/blogimages/spring-context/1.png" alt="1" loading="lazy"></p><blockquote><p>\u8BFB\u8005\u53EF\u4EE5\u5927\u81F4\u770B\u4E00\u4E0B\u7C7B\u540D\uFF0C\u6E90\u7801\u5206\u6790\u7684\u65F6\u5019\u4E0D\u81F3\u4E8E\u627E\u4E0D\u7740\u770B\u54EA\u4E2A\u7C7B\uFF0C\u56E0\u4E3A Spring \u4E3A\u4E86\u9002\u5E94\u5404\u79CD\u4F7F\u7528\u573A\u666F\uFF0C\u63D0\u4F9B\u7684\u5404\u4E2A\u63A5\u53E3\u90FD\u53EF\u80FD\u6709\u5F88\u591A\u7684\u5B9E\u73B0\u7C7B\u3002\u5BF9\u4E8E\u6211\u4EEC\u6765\u8BF4\uFF0C\u5C31\u662F\u63EA\u7740\u4E00\u4E2A\u5B8C\u6574\u7684\u5206\u652F\u770B\u5B8C\u3002</p><p>\u5F53\u7136\uFF0C\u8BFB\u672C\u6587\u7684\u65F6\u5019\u8BFB\u8005\u4E5F\u4E0D\u5FC5\u592A\u62C5\u5FC3\uFF0C\u6BCF\u4E2A\u4EE3\u7801\u5757\u5206\u6790\u7684\u65F6\u5019\uFF0C\u6211\u90FD\u4F1A\u544A\u8BC9\u8BFB\u8005\u6211\u4EEC\u5728\u8BF4\u54EA\u4E2A\u7C7B\u7B2C\u51E0\u884C\u3002</p></blockquote><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0CClassPathXmlApplicationContext \u515C\u515C\u8F6C\u8F6C\u4E86\u597D\u4E45\u624D\u5230 ApplicationContext \u63A5\u53E3\uFF0C\u540C\u6837\u7684\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528\u7EFF\u989C\u8272\u7684 <strong>FileSystemXmlApplicationContext</strong> \u548C <strong>AnnotationConfigApplicationContext</strong> \u8FD9\u4E24\u4E2A\u7C7B\u3002</p><p><strong>1\u3001FileSystemXmlApplicationContext</strong> \u7684\u6784\u9020\u51FD\u6570\u9700\u8981\u4E00\u4E2A xml \u914D\u7F6E\u6587\u4EF6\u5728\u7CFB\u7EDF\u4E2D\u7684\u8DEF\u5F84\uFF0C\u5176\u4ED6\u548C ClassPathXmlApplicationContext \u57FA\u672C\u4E0A\u4E00\u6837\u3002</p><p><strong>2\u3001AnnotationConfigApplicationContext</strong> \u662F\u57FA\u4E8E\u6CE8\u89E3\u6765\u4F7F\u7528\u7684\uFF0C\u5B83\u4E0D\u9700\u8981\u914D\u7F6E\u6587\u4EF6\uFF0C\u91C7\u7528 java \u914D\u7F6E\u7C7B\u548C\u5404\u79CD\u6CE8\u89E3\u6765\u914D\u7F6E\uFF0C\u662F\u6BD4\u8F83\u7B80\u5355\u7684\u65B9\u5F0F\uFF0C\u4E5F\u662F\u5927\u52BF\u6240\u8D8B\u5427\u3002</p><p>\u4E0D\u8FC7\u672C\u6587\u65E8\u5728\u5E2E\u52A9\u5927\u5BB6\u7406\u89E3\u6574\u4E2A\u6784\u5EFA\u6D41\u7A0B\uFF0C\u6240\u4EE5\u51B3\u5B9A\u4F7F\u7528 ClassPathXmlApplicationContext \u8FDB\u884C\u5206\u6790\u3002</p><p>\u6211\u4EEC\u5148\u6765\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u6765\u770B\u770B\u600E\u4E48\u5B9E\u4F8B\u5316 ApplicationContext\u3002</p><p>\u9996\u5148\uFF0C\u5B9A\u4E49\u4E00\u4E2A\u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MessageService</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49\u63A5\u53E3\u5B9E\u73B0\u7C7B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MessageServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">MessageService</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u5728 <strong>resources</strong> \u76EE\u5F55\u65B0\u5EFA\u4E00\u4E2A\u914D\u7F6E\u6587\u4EF6\uFF0C\u6587\u4EF6\u540D\u968F\u610F\uFF0C\u901A\u5E38\u53EB application.xml \u6216 application-xxx.xml \u5C31\u53EF\u4EE5\u4E86\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span> <span class="token attr-name">default-autowire</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>byName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>messageService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.javadoop.example.MessageServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u8DD1\u8D77\u6765\u4E86\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7528\u6211\u4EEC\u7684\u914D\u7F6E\u6587\u4EF6\u6765\u542F\u52A8\u4E00\u4E2A ApplicationContext</span>
        <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:application.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;context \u542F\u52A8\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
        <span class="token comment">// \u4ECE context \u4E2D\u53D6\u51FA\u6211\u4EEC\u7684 Bean\uFF0C\u800C\u4E0D\u662F\u7528 new MessageServiceImpl() \u8FD9\u79CD\u65B9\u5F0F</span>
        <span class="token class-name">MessageService</span> messageService <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">MessageService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8FD9\u53E5\u5C06\u8F93\u51FA: hello world</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>messageService<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u4F8B\u5B50\u5F88\u7B80\u5355\uFF0C\u4E0D\u8FC7\u4E5F\u591F\u5F15\u51FA\u672C\u6587\u7684\u4E3B\u9898\u4E86\uFF0C\u5C31\u662F\u600E\u4E48\u6837\u901A\u8FC7\u914D\u7F6E\u6587\u4EF6\u6765\u542F\u52A8 Spring \u7684 ApplicationContext \uFF1F\u4E5F\u5C31\u662F\u6211\u4EEC\u4ECA\u5929\u8981\u5206\u6790\u7684 IOC \u7684\u6838\u5FC3\u4E86\u3002ApplicationContext \u542F\u52A8\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u8D1F\u8D23\u521B\u5EFA\u5B9E\u4F8B Bean\uFF0C\u5F80\u5404\u4E2A Bean \u4E2D\u6CE8\u5165\u4F9D\u8D56\u7B49\u3002</p><h2 id="beanfactory-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#beanfactory-\u7B80\u4ECB" aria-hidden="true">#</a> BeanFactory \u7B80\u4ECB</h2><p>BeanFactory\uFF0C\u4ECE\u540D\u5B57\u4E0A\u4E5F\u5F88\u597D\u7406\u89E3\uFF0C\u751F\u4EA7 bean \u7684\u5DE5\u5382\uFF0C\u5B83\u8D1F\u8D23\u751F\u4EA7\u548C\u7BA1\u7406\u5404\u4E2A bean \u5B9E\u4F8B\u3002</p><p>\u521D\u5B66\u8005\u53EF\u522B\u4EE5\u4E3A\u6211\u4E4B\u524D\u8BF4\u90A3\u4E48\u591A\u548C BeanFactory \u65E0\u5173\uFF0C\u524D\u9762\u8BF4\u7684 ApplicationContext \u5176\u5B9E\u5C31\u662F\u4E00\u4E2A BeanFactory\u3002\u6211\u4EEC\u6765\u770B\u4E0B\u548C BeanFactory \u63A5\u53E3\u76F8\u5173\u7684\u4E3B\u8981\u7684\u7EE7\u627F\u7ED3\u6784\uFF1A</p><p><img src="https://www.javadoop.com/blogimages/spring-context/2.png" alt="2" loading="lazy"></p><p>\u6211\u60F3\uFF0C\u5927\u5BB6\u770B\u5B8C\u8FD9\u4E2A\u56FE\u4EE5\u540E\uFF0C\u53EF\u80FD\u5C31\u4E0D\u662F\u5F88\u5F00\u5FC3\u4E86\u3002ApplicationContext \u5F80\u4E0B\u7684\u7EE7\u627F\u7ED3\u6784\u524D\u9762\u4E00\u5F20\u56FE\u8BF4\u8FC7\u4E86\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u91CD\u590D\u4E86\u3002\u8FD9\u5F20\u56FE\u5462\uFF0C\u80CC\u4E0B\u6765\u80AF\u5B9A\u662F\u4E0D\u9700\u8981\u7684\uFF0C\u6709\u51E0\u4E2A\u91CD\u70B9\u548C\u5927\u5BB6\u8BF4\u660E\u4E0B\u5C31\u597D\u3002</p><ol><li>ApplicationContext \u7EE7\u627F\u4E86 ListableBeanFactory\uFF0C\u8FD9\u4E2A Listable \u7684\u610F\u601D\u5C31\u662F\uFF0C\u901A\u8FC7\u8FD9\u4E2A\u63A5\u53E3\uFF0C\u6211\u4EEC\u53EF\u4EE5\u83B7\u53D6\u591A\u4E2A Bean\uFF0C\u5927\u5BB6\u770B\u6E90\u7801\u4F1A\u53D1\u73B0\uFF0C\u6700\u9876\u5C42 BeanFactory \u63A5\u53E3\u7684\u65B9\u6CD5\u90FD\u662F\u83B7\u53D6\u5355\u4E2A Bean \u7684\u3002</li><li>ApplicationContext \u7EE7\u627F\u4E86 HierarchicalBeanFactory\uFF0CHierarchical \u5355\u8BCD\u672C\u8EAB\u5DF2\u7ECF\u80FD\u8BF4\u660E\u95EE\u9898\u4E86\uFF0C\u4E5F\u5C31\u662F\u8BF4\u6211\u4EEC\u53EF\u4EE5\u5728\u5E94\u7528\u4E2D\u8D77\u591A\u4E2A BeanFactory\uFF0C\u7136\u540E\u53EF\u4EE5\u5C06\u5404\u4E2A BeanFactory \u8BBE\u7F6E\u4E3A\u7236\u5B50\u5173\u7CFB\u3002</li><li>AutowireCapableBeanFactory \u8FD9\u4E2A\u540D\u5B57\u4E2D\u7684 Autowire \u5927\u5BB6\u90FD\u975E\u5E38\u719F\u6089\uFF0C\u5B83\u5C31\u662F\u7528\u6765\u81EA\u52A8\u88C5\u914D Bean \u7528\u7684\uFF0C\u4F46\u662F\u4ED4\u7EC6\u770B\u4E0A\u56FE\uFF0CApplicationContext \u5E76\u6CA1\u6709\u7EE7\u627F\u5B83\uFF0C\u4E0D\u8FC7\u4E0D\u7528\u62C5\u5FC3\uFF0C\u4E0D\u4F7F\u7528\u7EE7\u627F\uFF0C\u4E0D\u4EE3\u8868\u4E0D\u53EF\u4EE5\u4F7F\u7528\u7EC4\u5408\uFF0C\u5982\u679C\u4F60\u770B\u5230 ApplicationContext \u63A5\u53E3\u5B9A\u4E49\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u65B9\u6CD5 getAutowireCapableBeanFactory() \u5C31\u77E5\u9053\u4E86\u3002</li><li>ConfigurableListableBeanFactory \u4E5F\u662F\u4E00\u4E2A\u7279\u6B8A\u7684\u63A5\u53E3\uFF0C\u770B\u56FE\uFF0C\u7279\u6B8A\u4E4B\u5904\u5728\u4E8E\u5B83\u7EE7\u627F\u4E86\u7B2C\u4E8C\u5C42\u6240\u6709\u7684\u4E09\u4E2A\u63A5\u53E3\uFF0C\u800C ApplicationContext \u6CA1\u6709\u3002\u8FD9\u70B9\u4E4B\u540E\u4F1A\u7528\u5230\u3002</li><li>\u8BF7\u5148\u4E0D\u7528\u82B1\u65F6\u95F4\u5728\u5176\u4ED6\u7684\u63A5\u53E3\u548C\u7C7B\u4E0A\uFF0C\u5148\u7406\u89E3\u6211\u8BF4\u7684\u8FD9\u51E0\u70B9\u5C31\u53EF\u4EE5\u4E86\u3002</li></ol><p>\u7136\u540E\uFF0C\u8BF7\u8BFB\u8005\u6253\u5F00\u7F16\u8F91\u5668\uFF0C\u7FFB\u4E00\u4E0B BeanFactory\u3001ListableBeanFactory\u3001HierarchicalBeanFactory\u3001AutowireCapableBeanFactory\u3001ApplicationContext \u8FD9\u51E0\u4E2A\u63A5\u53E3\u7684\u4EE3\u7801\uFF0C\u5927\u6982\u770B\u4E00\u4E0B\u5404\u4E2A\u63A5\u53E3\u4E2D\u7684\u65B9\u6CD5\uFF0C\u5927\u5BB6\u5FC3\u91CC\u8981\u6709\u5E95\uFF0C\u9650\u4E8E\u7BC7\u5E45\uFF0C\u6211\u5C31\u4E0D\u8D34\u4EE3\u7801\u4ECB\u7ECD\u4E86\u3002</p><h2 id="\u542F\u52A8\u8FC7\u7A0B\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u542F\u52A8\u8FC7\u7A0B\u5206\u6790" aria-hidden="true">#</a> \u542F\u52A8\u8FC7\u7A0B\u5206\u6790</h2><p>\u4E0B\u9762\u5C06\u4F1A\u662F\u5197\u957F\u7684\u4EE3\u7801\u5206\u6790\uFF0C\u8BB0\u4F4F\uFF0C\u4E00\u5B9A\u8981\u81EA\u5DF1\u6253\u5F00\u6E90\u7801\u6765\u770B\uFF0C\u4E0D\u7136\u7EAF\u770B\u662F\u5F88\u7D2F\u7684\u3002</p><p>\u7B2C\u4E00\u6B65\uFF0C\u6211\u4EEC\u80AF\u5B9A\u8981\u4ECE ClassPathXmlApplicationContext \u7684\u6784\u9020\u65B9\u6CD5\u8BF4\u8D77\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClassPathXmlApplicationContext</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractXmlApplicationContext</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configResources<span class="token punctuation">;</span>
  
  <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u6709 ApplicationContext \u5E76\u9700\u8981\u914D\u7F6E\u6210\u7236\u5B50\u5173\u7CFB\uFF0C\u90A3\u4E48\u8C03\u7528\u8FD9\u4E2A\u6784\u9020\u65B9\u6CD5</span>
  <span class="token keyword">public</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token keyword">public</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configLocations<span class="token punctuation">,</span> <span class="token keyword">boolean</span> refresh<span class="token punctuation">,</span> <span class="token class-name">ApplicationContext</span> parent<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>

    <span class="token keyword">super</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6839\u636E\u63D0\u4F9B\u7684\u8DEF\u5F84\uFF0C\u5904\u7406\u6210\u914D\u7F6E\u6587\u4EF6\u6570\u7EC4(\u4EE5\u5206\u53F7\u3001\u9017\u53F7\u3001\u7A7A\u683C\u3001tab\u3001\u6362\u884C\u7B26\u5206\u5272)</span>
    <span class="token function">setConfigLocations</span><span class="token punctuation">(</span>configLocations<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>refresh<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6838\u5FC3\u65B9\u6CD5</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\uFF0C\u5C31\u662F <code>refresh()</code>\uFF0C\u8FD9\u91CC\u7B80\u5355\u8BF4\u4E0B\u4E3A\u4EC0\u4E48\u662F refresh()\uFF0C\u800C\u4E0D\u662F init() \u8FD9\u79CD\u540D\u5B57\u7684\u65B9\u6CD5\u3002\u56E0\u4E3A ApplicationContext \u5EFA\u7ACB\u8D77\u6765\u4EE5\u540E\uFF0C\u5176\u5B9E\u6211\u4EEC\u662F\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 refresh() \u8FD9\u4E2A\u65B9\u6CD5\u91CD\u5EFA\u7684\uFF0Crefresh() \u4F1A\u5C06\u539F\u6765\u7684 ApplicationContext \u9500\u6BC1\uFF0C\u7136\u540E\u518D\u91CD\u65B0\u6267\u884C\u4E00\u6B21\u521D\u59CB\u5316\u64CD\u4F5C\u3002</p><p>\u5F80\u4E0B\u770B\uFF0Crefresh() \u65B9\u6CD5\u91CC\u9762\u8C03\u7528\u4E86\u90A3\u4E48\u591A\u65B9\u6CD5\uFF0C\u5C31\u77E5\u9053\u80AF\u5B9A\u4E0D\u7B80\u5355\u4E86\uFF0C\u8BF7\u8BFB\u8005\u5148\u770B\u4E2A\u5927\u6982\uFF0C\u7EC6\u8282\u4E4B\u540E\u4F1A\u8BE6\u7EC6\u8BF4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u6765\u4E2A\u9501\uFF0C\u4E0D\u7136 refresh() \u8FD8\u6CA1\u7ED3\u675F\uFF0C\u4F60\u53C8\u6765\u4E2A\u542F\u52A8\u6216\u9500\u6BC1\u5BB9\u5668\u7684\u64CD\u4F5C\uFF0C\u90A3\u4E0D\u5C31\u4E71\u5957\u4E86\u561B</span>
   <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>startupShutdownMonitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token comment">// \u51C6\u5907\u5DE5\u4F5C\uFF0C\u8BB0\u5F55\u4E0B\u5BB9\u5668\u7684\u542F\u52A8\u65F6\u95F4\u3001\u6807\u8BB0\u201C\u5DF2\u542F\u52A8\u201D\u72B6\u6001\u3001\u5904\u7406\u914D\u7F6E\u6587\u4EF6\u4E2D\u7684\u5360\u4F4D\u7B26</span>
      <span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
      <span class="token comment">// \u8FD9\u6B65\u6BD4\u8F83\u5173\u952E\uFF0C\u8FD9\u6B65\u5B8C\u6210\u540E\uFF0C\u914D\u7F6E\u6587\u4EF6\u5C31\u4F1A\u89E3\u6790\u6210\u4E00\u4E2A\u4E2A Bean \u5B9A\u4E49\uFF0C\u6CE8\u518C\u5230 BeanFactory \u4E2D\uFF0C</span>
      <span class="token comment">// \u5F53\u7136\uFF0C\u8FD9\u91CC\u8BF4\u7684 Bean \u8FD8\u6CA1\u6709\u521D\u59CB\u5316\uFF0C\u53EA\u662F\u914D\u7F6E\u4FE1\u606F\u90FD\u63D0\u53D6\u51FA\u6765\u4E86\uFF0C</span>
      <span class="token comment">// \u6CE8\u518C\u4E5F\u53EA\u662F\u5C06\u8FD9\u4E9B\u4FE1\u606F\u90FD\u4FDD\u5B58\u5230\u4E86\u6CE8\u518C\u4E2D\u5FC3(\u8BF4\u5230\u5E95\u6838\u5FC3\u662F\u4E00\u4E2A beanName-&gt; beanDefinition \u7684 map)</span>
      <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u8BBE\u7F6E BeanFactory \u7684\u7C7B\u52A0\u8F7D\u5668\uFF0C\u6DFB\u52A0\u51E0\u4E2A BeanPostProcessor\uFF0C\u624B\u52A8\u6CE8\u518C\u51E0\u4E2A\u7279\u6B8A\u7684 bean</span>
      <span class="token comment">// \u8FD9\u5757\u5F85\u4F1A\u4F1A\u5C55\u5F00\u8BF4</span>
      <span class="token function">prepareBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u3010\u8FD9\u91CC\u9700\u8981\u77E5\u9053 BeanFactoryPostProcessor \u8FD9\u4E2A\u77E5\u8BC6\u70B9\uFF0CBean \u5982\u679C\u5B9E\u73B0\u4E86\u6B64\u63A5\u53E3\uFF0C</span>
         <span class="token comment">// \u90A3\u4E48\u5728\u5BB9\u5668\u521D\u59CB\u5316\u4EE5\u540E\uFF0CSpring \u4F1A\u8D1F\u8D23\u8C03\u7528\u91CC\u9762\u7684 postProcessBeanFactory \u65B9\u6CD5\u3002\u3011</span>
        
         <span class="token comment">// \u8FD9\u91CC\u662F\u63D0\u4F9B\u7ED9\u5B50\u7C7B\u7684\u6269\u5C55\u70B9\uFF0C\u5230\u8FD9\u91CC\u7684\u65F6\u5019\uFF0C\u6240\u6709\u7684 Bean \u90FD\u52A0\u8F7D\u3001\u6CE8\u518C\u5B8C\u6210\u4E86\uFF0C\u4F46\u662F\u90FD\u8FD8\u6CA1\u6709\u521D\u59CB\u5316</span>
         <span class="token comment">// \u5177\u4F53\u7684\u5B50\u7C7B\u53EF\u4EE5\u5728\u8FD9\u6B65\u7684\u65F6\u5019\u6DFB\u52A0\u4E00\u4E9B\u7279\u6B8A\u7684 BeanFactoryPostProcessor \u7684\u5B9E\u73B0\u7C7B\u6216\u505A\u70B9\u4EC0\u4E48\u4E8B</span>
         <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">// \u8C03\u7528 BeanFactoryPostProcessor \u5404\u4E2A\u5B9E\u73B0\u7C7B\u7684 postProcessBeanFactory(factory) \u65B9\u6CD5</span>
         <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u6CE8\u518C BeanPostProcessor \u7684\u5B9E\u73B0\u7C7B\uFF0C\u6CE8\u610F\u770B\u548C BeanFactoryPostProcessor \u7684\u533A\u522B</span>
         <span class="token comment">// \u6B64\u63A5\u53E3\u4E24\u4E2A\u65B9\u6CD5: postProcessBeforeInitialization \u548C postProcessAfterInitialization</span>
         <span class="token comment">// \u4E24\u4E2A\u65B9\u6CD5\u5206\u522B\u5728 Bean \u521D\u59CB\u5316\u4E4B\u524D\u548C\u521D\u59CB\u5316\u4E4B\u540E\u5F97\u5230\u6267\u884C\u3002\u6CE8\u610F\uFF0C\u5230\u8FD9\u91CC Bean \u8FD8\u6CA1\u521D\u59CB\u5316</span>
         <span class="token function">registerBeanPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u521D\u59CB\u5316\u5F53\u524D ApplicationContext \u7684 MessageSource\uFF0C\u56FD\u9645\u5316\u8FD9\u91CC\u5C31\u4E0D\u5C55\u5F00\u8BF4\u4E86\uFF0C\u4E0D\u7136\u6CA1\u5B8C\u6CA1\u4E86\u4E86</span>
         <span class="token function">initMessageSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u521D\u59CB\u5316\u5F53\u524D ApplicationContext \u7684\u4E8B\u4EF6\u5E7F\u64AD\u5668\uFF0C\u8FD9\u91CC\u4E5F\u4E0D\u5C55\u5F00\u4E86</span>
         <span class="token function">initApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u4ECE\u65B9\u6CD5\u540D\u5C31\u53EF\u4EE5\u77E5\u9053\uFF0C\u5178\u578B\u7684\u6A21\u677F\u65B9\u6CD5(\u94A9\u5B50\u65B9\u6CD5)\uFF0C</span>
         <span class="token comment">// \u5177\u4F53\u7684\u5B50\u7C7B\u53EF\u4EE5\u5728\u8FD9\u91CC\u521D\u59CB\u5316\u4E00\u4E9B\u7279\u6B8A\u7684 Bean\uFF08\u5728\u521D\u59CB\u5316 singleton beans \u4E4B\u524D\uFF09</span>
         <span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u6CE8\u518C\u4E8B\u4EF6\u76D1\u542C\u5668\uFF0C\u76D1\u542C\u5668\u9700\u8981\u5B9E\u73B0 ApplicationListener \u63A5\u53E3\u3002\u8FD9\u4E5F\u4E0D\u662F\u6211\u4EEC\u7684\u91CD\u70B9\uFF0C\u8FC7</span>
         <span class="token function">registerListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u91CD\u70B9\uFF0C\u91CD\u70B9\uFF0C\u91CD\u70B9</span>
         <span class="token comment">// \u521D\u59CB\u5316\u6240\u6709\u7684 singleton beans</span>
         <span class="token comment">//\uFF08lazy-init \u7684\u9664\u5916\uFF09</span>
         <span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u6700\u540E\uFF0C\u5E7F\u64AD\u4E8B\u4EF6\uFF0CApplicationContext \u521D\u59CB\u5316\u5B8C\u6210</span>
         <span class="token function">finishRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Exception encountered during context initialization - &quot;</span> <span class="token operator">+</span>
                  <span class="token string">&quot;cancelling refresh attempt: &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>

         <span class="token comment">// Destroy already created singletons to avoid dangling resources.</span>
         <span class="token comment">// \u9500\u6BC1\u5DF2\u7ECF\u521D\u59CB\u5316\u7684 singleton \u7684 Beans\uFF0C\u4EE5\u514D\u6709\u4E9B bean \u4F1A\u4E00\u76F4\u5360\u7528\u8D44\u6E90</span>
         <span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// Reset &#39;active&#39; flag.</span>
         <span class="token function">cancelRefresh</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u628A\u5F02\u5E38\u5F80\u5916\u629B</span>
         <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">finally</span> <span class="token punctuation">{</span>
         <span class="token comment">// Reset common introspection caches in Spring&#39;s core, since we</span>
         <span class="token comment">// might not ever need metadata for singleton beans anymore...</span>
         <span class="token function">resetCommonCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\uFF0C\u6211\u4EEC\u5F00\u59CB\u4E00\u6B65\u6B65\u6765\u80A2\u89E3\u8FD9\u4E2A refresh() \u65B9\u6CD5\u3002</p><h3 id="\u521B\u5EFA-bean-\u5BB9\u5668\u524D\u7684\u51C6\u5907\u5DE5\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-bean-\u5BB9\u5668\u524D\u7684\u51C6\u5907\u5DE5\u4F5C" aria-hidden="true">#</a> \u521B\u5EFA Bean \u5BB9\u5668\u524D\u7684\u51C6\u5907\u5DE5\u4F5C</h3><p>\u8FD9\u4E2A\u6BD4\u8F83\u7B80\u5355\uFF0C\u76F4\u63A5\u770B\u4EE3\u7801\u4E2D\u7684\u51E0\u4E2A\u6CE8\u91CA\u5373\u53EF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u8BB0\u5F55\u542F\u52A8\u65F6\u95F4\uFF0C</span>
   <span class="token comment">// \u5C06 active \u5C5E\u6027\u8BBE\u7F6E\u4E3A true\uFF0Cclosed \u5C5E\u6027\u8BBE\u7F6E\u4E3A false\uFF0C\u5B83\u4EEC\u90FD\u662F AtomicBoolean \u7C7B\u578B</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span>startupDate <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span>closed<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isInfoEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Refreshing &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// Initialize any placeholder property sources in the context environment</span>
   <span class="token function">initPropertySources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u6821\u9A8C xml \u914D\u7F6E\u6587\u4EF6</span>
   <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validateRequiredProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">this</span><span class="token punctuation">.</span>earlyApplicationEvents <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApplicationEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u521B\u5EFA-bean-\u5BB9\u5668-\u52A0\u8F7D\u5E76\u6CE8\u518C-bean" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-bean-\u5BB9\u5668-\u52A0\u8F7D\u5E76\u6CE8\u518C-bean" aria-hidden="true">#</a> \u521B\u5EFA Bean \u5BB9\u5668\uFF0C\u52A0\u8F7D\u5E76\u6CE8\u518C Bean</h3><p>\u6211\u4EEC\u56DE\u5230 refresh() \u65B9\u6CD5\u4E2D\u7684\u4E0B\u4E00\u884C obtainFreshBeanFactory()\u3002</p><p>\u6CE8\u610F\uFF0C<strong>\u8FD9\u4E2A\u65B9\u6CD5\u662F\u5168\u6587\u6700\u91CD\u8981\u7684\u90E8\u5206\u4E4B\u4E00</strong>\uFF0C\u8FD9\u91CC\u5C06\u4F1A\u521D\u59CB\u5316 BeanFactory\u3001\u52A0\u8F7D Bean\u3001\u6CE8\u518C Bean \u7B49\u7B49\u3002</p><p>\u5F53\u7136\uFF0C\u8FD9\u6B65\u7ED3\u675F\u540E\uFF0CBean \u5E76\u6CA1\u6709\u5B8C\u6210\u521D\u59CB\u5316\u3002\u8FD9\u91CC\u6307\u7684\u662F Bean \u5B9E\u4F8B\u5E76\u672A\u5728\u8FD9\u4E00\u6B65\u751F\u6210\u3002</p><p>// AbstractApplicationContext.java</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">ConfigurableListableBeanFactory</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5173\u95ED\u65E7\u7684 BeanFactory (\u5982\u679C\u6709)\uFF0C\u521B\u5EFA\u65B0\u7684 BeanFactory\uFF0C\u52A0\u8F7D Bean \u5B9A\u4E49\u3001\u6CE8\u518C Bean \u7B49\u7B49</span>
   <span class="token function">refreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
   <span class="token comment">// \u8FD4\u56DE\u521A\u521A\u521B\u5EFA\u7684 BeanFactory</span>
   <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Bean factory for &quot;</span> <span class="token operator">+</span> <span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> beanFactory<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>// AbstractRefreshableApplicationContext.java 120</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">refreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5982\u679C ApplicationContext \u4E2D\u5DF2\u7ECF\u52A0\u8F7D\u8FC7 BeanFactory \u4E86\uFF0C\u9500\u6BC1\u6240\u6709 Bean\uFF0C\u5173\u95ED BeanFactory</span>
   <span class="token comment">// \u6CE8\u610F\uFF0C\u5E94\u7528\u4E2D BeanFactory \u672C\u6765\u5C31\u662F\u53EF\u4EE5\u591A\u4E2A\u7684\uFF0C\u8FD9\u91CC\u53EF\u4E0D\u662F\u8BF4\u5E94\u7528\u5168\u5C40\u662F\u5426\u6709 BeanFactory\uFF0C\u800C\u662F\u5F53\u524D</span>
   <span class="token comment">// ApplicationContext \u662F\u5426\u6709 BeanFactory</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">closeBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u521D\u59CB\u5316\u4E00\u4E2A DefaultListableBeanFactory\uFF0C\u4E3A\u4EC0\u4E48\u7528\u8FD9\u4E2A\uFF0C\u6211\u4EEC\u9A6C\u4E0A\u8BF4\u3002</span>
      <span class="token class-name">DefaultListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">createBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u7528\u4E8E BeanFactory \u7684\u5E8F\u5217\u5316\uFF0C\u6211\u60F3\u4E0D\u90E8\u5206\u4EBA\u5E94\u8BE5\u90FD\u7528\u4E0D\u5230</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">setSerializationId</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
      <span class="token comment">// \u4E0B\u9762\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u5F88\u91CD\u8981\uFF0C\u522B\u8DDF\u4E22\u4E86\uFF0C\u5177\u4F53\u7EC6\u8282\u4E4B\u540E\u8BF4</span>
      <span class="token comment">// \u8BBE\u7F6E BeanFactory \u7684\u4E24\u4E2A\u914D\u7F6E\u5C5E\u6027\uFF1A\u662F\u5426\u5141\u8BB8 Bean \u8986\u76D6\u3001\u662F\u5426\u5141\u8BB8\u5FAA\u73AF\u5F15\u7528</span>
      <span class="token function">customizeBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
     
      <span class="token comment">// \u52A0\u8F7D Bean \u5230 BeanFactory \u4E2D</span>
      <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanFactoryMonitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory <span class="token operator">=</span> beanFactory<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApplicationContextException</span><span class="token punctuation">(</span><span class="token string">&quot;I/O error parsing bean definition source for &quot;</span> <span class="token operator">+</span> <span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u770B\u5230\u8FD9\u91CC\u7684\u65F6\u5019\uFF0C\u6211\u89C9\u5F97\u8BFB\u8005\u5C31\u5E94\u8BE5\u7AD9\u5728\u9AD8\u5904\u770B ApplicationContext \u4E86\uFF0CApplicationContext \u7EE7\u627F\u81EA BeanFactory\uFF0C\u4F46\u662F\u5B83\u4E0D\u5E94\u8BE5\u88AB\u7406\u89E3\u4E3A BeanFactory \u7684\u5B9E\u73B0\u7C7B\uFF0C\u800C\u662F\u8BF4\u5176\u5185\u90E8\u6301\u6709\u4E00\u4E2A\u5B9E\u4F8B\u5316\u7684 BeanFactory\uFF08DefaultListableBeanFactory\uFF09\u3002\u4EE5\u540E\u6240\u6709\u7684 BeanFactory \u76F8\u5173\u7684\u64CD\u4F5C\u5176\u5B9E\u662F\u59D4\u6258\u7ED9\u8FD9\u4E2A\u5B9E\u4F8B\u6765\u5904\u7406\u7684\u3002</p></blockquote><p>\u6211\u4EEC\u8BF4\u8BF4\u4E3A\u4EC0\u4E48\u9009\u62E9\u5B9E\u4F8B\u5316 <strong>DefaultListableBeanFactory</strong> \uFF1F\u524D\u9762\u6211\u4EEC\u8BF4\u4E86\u6709\u4E2A\u5F88\u91CD\u8981\u7684\u63A5\u53E3 ConfigurableListableBeanFactory\uFF0C\u5B83\u5B9E\u73B0\u4E86 BeanFactory \u4E0B\u9762\u4E00\u5C42\u7684\u6240\u6709\u4E09\u4E2A\u63A5\u53E3\uFF0C\u6211\u628A\u4E4B\u524D\u7684\u7EE7\u627F\u56FE\u518D\u62FF\u8FC7\u6765\u5927\u5BB6\u518D\u4ED4\u7EC6\u770B\u4E00\u4E0B\uFF1A</p><p><img src="https://www.javadoop.com/blogimages/spring-context/3.png" alt="3" loading="lazy"></p><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u5230 ConfigurableListableBeanFactory \u53EA\u6709\u4E00\u4E2A\u5B9E\u73B0\u7C7B DefaultListableBeanFactory\uFF0C\u800C\u4E14\u5B9E\u73B0\u7C7B DefaultListableBeanFactory \u8FD8\u901A\u8FC7\u5B9E\u73B0\u53F3\u8FB9\u7684 AbstractAutowireCapableBeanFactory \u901A\u5403\u4E86\u53F3\u8DEF\u3002\u6240\u4EE5\u7ED3\u8BBA\u5C31\u662F\uFF0C\u6700\u5E95\u4E0B\u8FD9\u4E2A\u5BB6\u4F19 DefaultListableBeanFactory \u57FA\u672C\u4E0A\u662F\u6700\u725B\u7684 BeanFactory \u4E86\uFF0C\u8FD9\u4E5F\u662F\u4E3A\u4EC0\u4E48\u8FD9\u8FB9\u4F1A\u4F7F\u7528\u8FD9\u4E2A\u7C7B\u6765\u5B9E\u4F8B\u5316\u7684\u539F\u56E0\u3002</p><blockquote><p>\u5982\u679C\u4F60\u60F3\u8981\u5728\u7A0B\u5E8F\u8FD0\u884C\u7684\u65F6\u5019\u52A8\u6001\u5F80 Spring IOC \u5BB9\u5668\u6CE8\u518C\u65B0\u7684 bean\uFF0C\u5C31\u4F1A\u4F7F\u7528\u5230\u8FD9\u4E2A\u7C7B\u3002\u90A3\u6211\u4EEC\u600E\u4E48\u5728\u8FD0\u884C\u65F6\u83B7\u5F97\u8FD9\u4E2A\u5B9E\u4F8B\u5462\uFF1F</p><p>\u4E4B\u524D\u6211\u4EEC\u8BF4\u8FC7 ApplicationContext \u63A5\u53E3\u80FD\u83B7\u53D6\u5230 AutowireCapableBeanFactory\uFF0C\u5C31\u662F\u6700\u53F3\u4E0A\u89D2\u90A3\u4E2A\uFF0C\u7136\u540E\u5B83\u5411\u4E0B\u8F6C\u578B\u5C31\u80FD\u5F97\u5230 DefaultListableBeanFactory \u4E86\u3002</p><p>\u90A3\u600E\u4E48\u62FF\u5230 ApplicationContext \u5B9E\u4F8B\u5462\uFF1F\u5982\u679C\u4F60\u4E0D\u4F1A\uFF0C\u8BF4\u660E\u4F60\u6CA1\u7528\u8FC7 Spring\u3002</p></blockquote><p>\u5728\u7EE7\u7EED\u5F80\u4E0B\u4E4B\u524D\uFF0C\u6211\u4EEC\u9700\u8981\u5148\u4E86\u89E3 BeanDefinition\u3002<strong>\u6211\u4EEC\u8BF4 BeanFactory \u662F Bean \u5BB9\u5668\uFF0C\u90A3\u4E48 Bean \u53C8\u662F\u4EC0\u4E48\u5462\uFF1F</strong></p><p>\u8FD9\u91CC\u7684 BeanDefinition \u5C31\u662F\u6211\u4EEC\u6240\u8BF4\u7684 Spring \u7684 Bean\uFF0C\u6211\u4EEC\u81EA\u5DF1\u5B9A\u4E49\u7684\u5404\u4E2A Bean \u5176\u5B9E\u4F1A\u8F6C\u6362\u6210\u4E00\u4E2A\u4E2A BeanDefinition \u5B58\u5728\u4E8E Spring \u7684 BeanFactory \u4E2D\u3002</p><p>\u6240\u4EE5\uFF0C\u5982\u679C\u6709\u4EBA\u95EE\u4F60 Bean \u662F\u4EC0\u4E48\u7684\u65F6\u5019\uFF0C\u4F60\u8981\u77E5\u9053 Bean \u5728\u4EE3\u7801\u5C42\u9762\u4E0A\u53EF\u4EE5\u7B80\u5355\u8BA4\u4E3A\u662F BeanDefinition \u7684\u5B9E\u4F8B\u3002</p><blockquote><p>BeanDefinition \u4E2D\u4FDD\u5B58\u4E86\u6211\u4EEC\u7684 Bean \u4FE1\u606F\uFF0C\u6BD4\u5982\u8FD9\u4E2A Bean \u6307\u5411\u7684\u662F\u54EA\u4E2A\u7C7B\u3001\u662F\u5426\u662F\u5355\u4F8B\u7684\u3001\u662F\u5426\u61D2\u52A0\u8F7D\u3001\u8FD9\u4E2A Bean \u4F9D\u8D56\u4E86\u54EA\u4E9B Bean \u7B49\u7B49\u3002</p></blockquote><h4 id="beandefinition-\u63A5\u53E3\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#beandefinition-\u63A5\u53E3\u5B9A\u4E49" aria-hidden="true">#</a> BeanDefinition \u63A5\u53E3\u5B9A\u4E49</h4><p>\u6211\u4EEC\u6765\u770B\u4E0B BeanDefinition \u7684\u63A5\u53E3\u5B9A\u4E49\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BeanDefinition</span> <span class="token keyword">extends</span> <span class="token class-name">AttributeAccessor</span><span class="token punctuation">,</span> <span class="token class-name">BeanMetadataElement</span> <span class="token punctuation">{</span>

   <span class="token comment">// \u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u9ED8\u8BA4\u53EA\u63D0\u4F9B sington \u548C prototype \u4E24\u79CD\uFF0C</span>
   <span class="token comment">// \u5F88\u591A\u8BFB\u8005\u53EF\u80FD\u77E5\u9053\u8FD8\u6709 request, session, globalSession, application, websocket \u8FD9\u51E0\u79CD\uFF0C</span>
   <span class="token comment">// \u4E0D\u8FC7\uFF0C\u5B83\u4EEC\u5C5E\u4E8E\u57FA\u4E8E web \u7684\u6269\u5C55\u3002</span>
   <span class="token class-name">String</span> SCOPE_SINGLETON <span class="token operator">=</span> <span class="token class-name">ConfigurableBeanFactory</span><span class="token punctuation">.</span>SCOPE_SINGLETON<span class="token punctuation">;</span>
   <span class="token class-name">String</span> SCOPE_PROTOTYPE <span class="token operator">=</span> <span class="token class-name">ConfigurableBeanFactory</span><span class="token punctuation">.</span>SCOPE_PROTOTYPE<span class="token punctuation">;</span>

   <span class="token comment">// \u6BD4\u8F83\u4E0D\u91CD\u8981\uFF0C\u76F4\u63A5\u8DF3\u8FC7\u5427</span>
   <span class="token keyword">int</span> ROLE_APPLICATION <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> ROLE_SUPPORT <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> ROLE_INFRASTRUCTURE <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

   <span class="token comment">// \u8BBE\u7F6E\u7236 Bean\uFF0C\u8FD9\u91CC\u6D89\u53CA\u5230 bean \u7EE7\u627F\uFF0C\u4E0D\u662F java \u7EE7\u627F\u3002\u8BF7\u53C2\u89C1\u9644\u5F55\u7684\u8BE6\u7EC6\u4ECB\u7ECD</span>
   <span class="token comment">// \u4E00\u53E5\u8BDD\u5C31\u662F\uFF1A\u7EE7\u627F\u7236 Bean \u7684\u914D\u7F6E\u4FE1\u606F\u800C\u5DF2</span>
   <span class="token keyword">void</span> <span class="token function">setParentName</span><span class="token punctuation">(</span><span class="token class-name">String</span> parentName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
   <span class="token comment">// \u83B7\u53D6\u7236 Bean</span>
   <span class="token class-name">String</span> <span class="token function">getParentName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
   <span class="token comment">// \u8BBE\u7F6E Bean \u7684\u7C7B\u540D\u79F0\uFF0C\u5C06\u6765\u662F\u8981\u901A\u8FC7\u53CD\u5C04\u6765\u751F\u6210\u5B9E\u4F8B\u7684</span>
   <span class="token keyword">void</span> <span class="token function">setBeanClassName</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanClassName<span class="token punctuation">)</span><span class="token punctuation">;</span>
   
   <span class="token comment">// \u83B7\u53D6 Bean \u7684\u7C7B\u540D\u79F0</span>
   <span class="token class-name">String</span> <span class="token function">getBeanClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 
   <span class="token comment">// \u8BBE\u7F6E bean \u7684 scope</span>
   <span class="token keyword">void</span> <span class="token function">setScope</span><span class="token punctuation">(</span><span class="token class-name">String</span> scope<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token class-name">String</span> <span class="token function">getScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u8BBE\u7F6E\u662F\u5426\u61D2\u52A0\u8F7D</span>
   <span class="token keyword">void</span> <span class="token function">setLazyInit</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> lazyInit<span class="token punctuation">)</span><span class="token punctuation">;</span>
   
   <span class="token keyword">boolean</span> <span class="token function">isLazyInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u8BBE\u7F6E\u8BE5 Bean \u4F9D\u8D56\u7684\u6240\u6709\u7684 Bean\uFF0C\u6CE8\u610F\uFF0C\u8FD9\u91CC\u7684\u4F9D\u8D56\u4E0D\u662F\u6307\u5C5E\u6027\u4F9D\u8D56(\u5982 @Autowire \u6807\u8BB0\u7684)\uFF0C</span>
   <span class="token comment">// \u662F depends-on=&quot;&quot; \u5C5E\u6027\u8BBE\u7F6E\u7684\u503C\u3002</span>
   <span class="token keyword">void</span> <span class="token function">setDependsOn</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> dependsOn<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u8FD4\u56DE\u8BE5 Bean \u7684\u6240\u6709\u4F9D\u8D56</span>
   <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getDependsOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u8BBE\u7F6E\u8BE5 Bean \u662F\u5426\u53EF\u4EE5\u6CE8\u5165\u5230\u5176\u4ED6 Bean \u4E2D\uFF0C\u53EA\u5BF9\u6839\u636E\u7C7B\u578B\u6CE8\u5165\u6709\u6548\uFF0C</span>
   <span class="token comment">// \u5982\u679C\u6839\u636E\u540D\u79F0\u6CE8\u5165\uFF0C\u5373\u4F7F\u8FD9\u8FB9\u8BBE\u7F6E\u4E86 false\uFF0C\u4E5F\u662F\u53EF\u4EE5\u7684</span>
   <span class="token keyword">void</span> <span class="token function">setAutowireCandidate</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> autowireCandidate<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u8BE5 Bean \u662F\u5426\u53EF\u4EE5\u6CE8\u5165\u5230\u5176\u4ED6 Bean \u4E2D</span>
   <span class="token keyword">boolean</span> <span class="token function">isAutowireCandidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u4E3B\u8981\u7684\u3002\u540C\u4E00\u63A5\u53E3\u7684\u591A\u4E2A\u5B9E\u73B0\uFF0C\u5982\u679C\u4E0D\u6307\u5B9A\u540D\u5B57\u7684\u8BDD\uFF0CSpring \u4F1A\u4F18\u5148\u9009\u62E9\u8BBE\u7F6E primary \u4E3A true \u7684 bean</span>
   <span class="token keyword">void</span> <span class="token function">setPrimary</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> primary<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u662F\u5426\u662F primary \u7684</span>
   <span class="token keyword">boolean</span> <span class="token function">isPrimary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u5982\u679C\u8BE5 Bean \u91C7\u7528\u5DE5\u5382\u65B9\u6CD5\u751F\u6210\uFF0C\u6307\u5B9A\u5DE5\u5382\u540D\u79F0\u3002\u5BF9\u5DE5\u5382\u4E0D\u719F\u6089\u7684\u8BFB\u8005\uFF0C\u8BF7\u53C2\u52A0\u9644\u5F55</span>
   <span class="token comment">// \u4E00\u53E5\u8BDD\u5C31\u662F\uFF1A\u6709\u4E9B\u5B9E\u4F8B\u4E0D\u662F\u7528\u53CD\u5C04\u751F\u6210\u7684\uFF0C\u800C\u662F\u7528\u5DE5\u5382\u6A21\u5F0F\u751F\u6210\u7684</span>
   <span class="token keyword">void</span> <span class="token function">setFactoryBeanName</span><span class="token punctuation">(</span><span class="token class-name">String</span> factoryBeanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u83B7\u53D6\u5DE5\u5382\u540D\u79F0</span>
   <span class="token class-name">String</span> <span class="token function">getFactoryBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u6307\u5B9A\u5DE5\u5382\u7C7B\u4E2D\u7684 \u5DE5\u5382\u65B9\u6CD5\u540D\u79F0</span>
   <span class="token keyword">void</span> <span class="token function">setFactoryMethodName</span><span class="token punctuation">(</span><span class="token class-name">String</span> factoryMethodName<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u83B7\u53D6\u5DE5\u5382\u7C7B\u4E2D\u7684 \u5DE5\u5382\u65B9\u6CD5\u540D\u79F0</span>
   <span class="token class-name">String</span> <span class="token function">getFactoryMethodName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u6784\u9020\u5668\u53C2\u6570</span>
   <span class="token class-name">ConstructorArgumentValues</span> <span class="token function">getConstructorArgumentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// Bean \u4E2D\u7684\u5C5E\u6027\u503C\uFF0C\u540E\u9762\u7ED9 bean \u6CE8\u5165\u5C5E\u6027\u503C\u7684\u65F6\u5019\u4F1A\u8BF4\u5230</span>
   <span class="token class-name">MutablePropertyValues</span> <span class="token function">getPropertyValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u662F\u5426 singleton</span>
   <span class="token keyword">boolean</span> <span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u662F\u5426 prototype</span>
   <span class="token keyword">boolean</span> <span class="token function">isPrototype</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u5982\u679C\u8FD9\u4E2A Bean \u662F\u88AB\u8BBE\u7F6E\u4E3A abstract\uFF0C\u90A3\u4E48\u4E0D\u80FD\u5B9E\u4F8B\u5316\uFF0C</span>
   <span class="token comment">// \u5E38\u7528\u4E8E\u4F5C\u4E3A \u7236bean \u7528\u4E8E\u7EE7\u627F\uFF0C\u5176\u5B9E\u4E5F\u5F88\u5C11\u7528......</span>
   <span class="token keyword">boolean</span> <span class="token function">isAbstract</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">int</span> <span class="token function">getRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> <span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> <span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">BeanDefinition</span> <span class="token function">getOriginatingBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u8FD9\u4E2A BeanDefinition \u5176\u5B9E\u5DF2\u7ECF\u5305\u542B\u5F88\u591A\u7684\u4FE1\u606F\u4E86\uFF0C\u6682\u65F6\u4E0D\u6E05\u695A\u6240\u6709\u7684\u65B9\u6CD5\u5BF9\u5E94\u4EC0\u4E48\u4E1C\u897F\u6CA1\u5173\u7CFB\uFF0C\u5E0C\u671B\u770B\u5B8C\u672C\u6587\u540E\u8BFB\u8005\u53EF\u4EE5\u5F7B\u5E95\u641E\u6E05\u695A\u91CC\u9762\u7684\u6240\u6709\u4E1C\u897F\u3002</p><p>\u8FD9\u91CC\u63A5\u53E3\u867D\u7136\u90A3\u4E48\u591A\uFF0C\u4F46\u662F\u6CA1\u6709\u7C7B\u4F3C getInstance() \u8FD9\u79CD\u65B9\u6CD5\u6765\u83B7\u53D6\u6211\u4EEC\u5B9A\u4E49\u7684\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u771F\u6B63\u7684\u6211\u4EEC\u5B9A\u4E49\u7684\u7C7B\u751F\u6210\u7684\u5B9E\u4F8B\u5230\u54EA\u91CC\u53BB\u4E86\u5462\uFF1F\u522B\u7740\u6025\uFF0C\u8FD9\u4E2A\u8981\u5F88\u540E\u9762\u624D\u80FD\u8BB2\u5230\u3002</p></blockquote><p>\u6709\u4E86 BeanDefinition \u7684\u6982\u5FF5\u4EE5\u540E\uFF0C\u6211\u4EEC\u518D\u5F80\u4E0B\u770B refreshBeanFactory() \u65B9\u6CD5\u4E2D\u7684\u5269\u4F59\u90E8\u5206\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">customizeBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u867D\u7136\u53EA\u6709\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u4F46\u8DEF\u8FD8\u5F88\u957F\u554A\u3002\u3002\u3002</p><h4 id="customizebeanfactory" tabindex="-1"><a class="header-anchor" href="#customizebeanfactory" aria-hidden="true">#</a> customizeBeanFactory</h4><p>customizeBeanFactory(beanFactory) \u6BD4\u8F83\u7B80\u5355\uFF0C\u5C31\u662F\u914D\u7F6E\u662F\u5426\u5141\u8BB8 BeanDefinition \u8986\u76D6\u3001\u662F\u5426\u5141\u8BB8\u5FAA\u73AF\u5F15\u7528\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">customizeBeanFactory</span><span class="token punctuation">(</span><span class="token class-name">DefaultListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>allowBeanDefinitionOverriding <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u662F\u5426\u5141\u8BB8 Bean \u5B9A\u4E49\u8986\u76D6</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">setAllowBeanDefinitionOverriding</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>allowBeanDefinitionOverriding<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>allowCircularReferences <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u662F\u5426\u5141\u8BB8 Bean \u95F4\u7684\u5FAA\u73AF\u4F9D\u8D56</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">setAllowCircularReferences</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>allowCircularReferences<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>BeanDefinition \u7684\u8986\u76D6\u95EE\u9898\u53EF\u80FD\u4F1A\u6709\u5F00\u53D1\u8005\u78B0\u5230\u8FD9\u4E2A\u5751\uFF0C\u5C31\u662F\u5728\u914D\u7F6E\u6587\u4EF6\u4E2D\u5B9A\u4E49 bean \u65F6\u4F7F\u7528\u4E86\u76F8\u540C\u7684 id \u6216 name\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CallowBeanDefinitionOverriding \u5C5E\u6027\u4E3A null\uFF0C\u5982\u679C\u5728\u540C\u4E00\u914D\u7F6E\u6587\u4EF6\u4E2D\u91CD\u590D\u4E86\uFF0C\u4F1A\u629B\u9519\uFF0C\u4F46\u662F\u5982\u679C\u4E0D\u662F\u540C\u4E00\u914D\u7F6E\u6587\u4EF6\u4E2D\uFF0C\u4F1A\u53D1\u751F\u8986\u76D6\u3002</p><p>\u5FAA\u73AF\u5F15\u7528\u4E5F\u5F88\u597D\u7406\u89E3\uFF1AA \u4F9D\u8D56 B\uFF0C\u800C B \u4F9D\u8D56 A\u3002\u6216 A \u4F9D\u8D56 B\uFF0CB \u4F9D\u8D56 C\uFF0C\u800C C \u4F9D\u8D56 A\u3002</p><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CSpring \u5141\u8BB8\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5F53\u7136\u5982\u679C\u4F60\u5728 A \u7684\u6784\u9020\u65B9\u6CD5\u4E2D\u4F9D\u8D56 B\uFF0C\u5728 B \u7684\u6784\u9020\u65B9\u6CD5\u4E2D\u4F9D\u8D56 A \u662F\u4E0D\u884C\u7684\u3002</p><p>\u81F3\u4E8E\u8FD9\u4E24\u4E2A\u5C5E\u6027\u600E\u4E48\u914D\u7F6E\uFF1F\u6211\u5728\u9644\u5F55\u4E2D\u8FDB\u884C\u4E86\u4ECB\u7ECD\uFF0C\u5C24\u5176\u5BF9\u4E8E\u8986\u76D6\u95EE\u9898\uFF0C\u5F88\u591A\u4EBA\u90FD\u5E0C\u671B\u7981\u6B62\u51FA\u73B0 Bean \u8986\u76D6\uFF0C\u53EF\u662F Spring \u9ED8\u8BA4\u662F\u4E0D\u540C\u6587\u4EF6\u7684\u65F6\u5019\u53EF\u4EE5\u8986\u76D6\u7684\u3002</p><p>\u4E4B\u540E\u7684\u6E90\u7801\u4E2D\u8FD8\u4F1A\u51FA\u73B0\u8FD9\u4E24\u4E2A\u5C5E\u6027\uFF0C\u8BFB\u8005\u6709\u4E2A\u5370\u8C61\u5C31\u53EF\u4EE5\u4E86\uFF0C\u5B83\u4EEC\u4E0D\u662F\u975E\u5E38\u91CD\u8981\u3002</p><h4 id="\u52A0\u8F7D-bean-loadbeandefinitions" tabindex="-1"><a class="header-anchor" href="#\u52A0\u8F7D-bean-loadbeandefinitions" aria-hidden="true">#</a> \u52A0\u8F7D Bean: loadBeanDefinitions</h4><p>\u63A5\u4E0B\u6765\u662F\u6700\u91CD\u8981\u7684 loadBeanDefinitions(beanFactory) \u65B9\u6CD5\u4E86\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u5C06\u6839\u636E\u914D\u7F6E\uFF0C\u52A0\u8F7D\u5404\u4E2A Bean\uFF0C\u7136\u540E\u653E\u5230 BeanFactory \u4E2D\u3002</p><p>\u8BFB\u53D6\u914D\u7F6E\u7684\u64CD\u4F5C\u5728 XmlBeanDefinitionReader \u4E2D\uFF0C\u5176\u8D1F\u8D23\u52A0\u8F7D\u914D\u7F6E\u3001\u89E3\u6790\u3002</p><p>// AbstractXmlApplicationContext.java 80</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/** \u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u6B64\u65B9\u6CD5\u5C06\u901A\u8FC7\u4E00\u4E2A XmlBeanDefinitionReader \u5B9E\u4F8B\u6765\u52A0\u8F7D\u5404\u4E2A Bean\u3002*/</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">DefaultListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u7ED9\u8FD9\u4E2A BeanFactory \u5B9E\u4F8B\u5316\u4E00\u4E2A XmlBeanDefinitionReader</span>
   <span class="token class-name">XmlBeanDefinitionReader</span> beanDefinitionReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanDefinitionReader</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// Configure the bean definition reader with this context&#39;s</span>
   <span class="token comment">// resource loading environment.</span>
   beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setEnvironment</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setResourceLoader</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setEntityResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResourceEntityResolver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u521D\u59CB\u5316 BeanDefinitionReader\uFF0C\u5176\u5B9E\u8FD9\u4E2A\u662F\u63D0\u4F9B\u7ED9\u5B50\u7C7B\u8986\u5199\u7684\uFF0C</span>
   <span class="token comment">// \u6211\u770B\u4E86\u4E00\u4E0B\uFF0C\u6CA1\u6709\u7C7B\u8986\u5199\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u6211\u4EEC\u59D1\u4E14\u5F53\u505A\u4E0D\u91CD\u8981\u5427</span>
   <span class="token function">initBeanDefinitionReader</span><span class="token punctuation">(</span>beanDefinitionReader<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u91CD\u70B9\u6765\u4E86\uFF0C\u7EE7\u7EED\u5F80\u4E0B</span>
   <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>beanDefinitionReader<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u8FD8\u5728\u8FD9\u4E2A\u7C7B\u4E2D\uFF0C\u63A5\u4E0B\u6765\u7528\u521A\u521A\u521D\u59CB\u5316\u7684 Reader \u5F00\u59CB\u6765\u52A0\u8F7D xml \u914D\u7F6E\uFF0C\u8FD9\u5757\u4EE3\u7801\u8BFB\u8005\u53EF\u4EE5\u9009\u62E9\u6027\u8DF3\u8FC7\uFF0C\u4E0D\u662F\u5F88\u91CD\u8981\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0B\u9762\u8FD9\u4E2A\u4EE3\u7801\u5757\uFF0C\u8BFB\u8005\u53EF\u4EE5\u5F88\u8F7B\u677E\u5730\u7565\u8FC7\u3002</p><p>// AbstractXmlApplicationContext.java 120</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">XmlBeanDefinitionReader</span> reader<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
   <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configResources <span class="token operator">=</span> <span class="token function">getConfigResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>configResources <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F80\u4E0B\u770B</span>
      reader<span class="token punctuation">.</span><span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>configResources<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configLocations <span class="token operator">=</span> <span class="token function">getConfigLocations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>configLocations <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 2</span>
      reader<span class="token punctuation">.</span><span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>configLocations<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E0A\u9762\u867D\u7136\u6709\u4E24\u4E2A\u5206\u652F\uFF0C\u4E0D\u8FC7\u7B2C\u4E8C\u4E2A\u5206\u652F\u5F88\u5FEB\u901A\u8FC7\u89E3\u6790\u8DEF\u5F84\u8F6C\u6362\u4E3A Resource \u4EE5\u540E\u4E5F\u4F1A\u8FDB\u5230\u8FD9\u91CC</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Resource</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> resources<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
   <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> <span class="token string">&quot;Resource array must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u662F\u4E2A for \u5FAA\u73AF\uFF0C\u4E5F\u5C31\u662F\u6BCF\u4E2A\u6587\u4EF6\u662F\u4E00\u4E2A resource</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Resource</span> resource <span class="token operator">:</span> resources<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u7EE7\u7EED\u5F80\u4E0B\u770B</span>
      counter <span class="token operator">+=</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u6700\u540E\u8FD4\u56DE counter\uFF0C\u8868\u793A\u603B\u5171\u52A0\u8F7D\u4E86\u591A\u5C11\u7684 BeanDefinition</span>
   <span class="token keyword">return</span> counter<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// XmlBeanDefinitionReader 303</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Resource</span> resource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EncodedResource</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// XmlBeanDefinitionReader 314</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">EncodedResource</span> encodedResource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
   <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">,</span> <span class="token string">&quot;EncodedResource must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isInfoEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Loading XML bean definitions from &quot;</span> <span class="token operator">+</span> encodedResource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u7528\u4E00\u4E2A ThreadLocal \u6765\u5B58\u653E\u914D\u7F6E\u6587\u4EF6\u8D44\u6E90</span>
   <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EncodedResource</span><span class="token punctuation">&gt;</span></span> currentResources <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resourcesCurrentlyBeingLoaded<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>currentResources <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      currentResources <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EncodedResource</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>resourcesCurrentlyBeingLoaded<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>currentResources<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>currentResources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>
            <span class="token string">&quot;Detected cyclic loading of &quot;</span> <span class="token operator">+</span> encodedResource <span class="token operator">+</span> <span class="token string">&quot; - check your import definitions!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> encodedResource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token class-name">InputSource</span> inputSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputSource</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>encodedResource<span class="token punctuation">.</span><span class="token function">getEncoding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            inputSource<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">.</span><span class="token function">getEncoding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token comment">// \u6838\u5FC3\u90E8\u5206\u662F\u8FD9\u91CC\uFF0C\u5F80\u4E0B\u9762\u770B</span>
         <span class="token keyword">return</span> <span class="token function">doLoadBeanDefinitions</span><span class="token punctuation">(</span>inputSource<span class="token punctuation">,</span> encodedResource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">finally</span> <span class="token punctuation">{</span>
         inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>
            <span class="token string">&quot;IOException parsing XML document from &quot;</span> <span class="token operator">+</span> encodedResource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      currentResources<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentResources<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>resourcesCurrentlyBeingLoaded<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD8\u5728\u8FD9\u4E2A\u6587\u4EF6\u4E2D\uFF0C\u7B2C 388 \u884C</span>
<span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">doLoadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">InputSource</span> inputSource<span class="token punctuation">,</span> <span class="token class-name">Resource</span> resource<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
   <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u91CC\u5C31\u4E0D\u770B\u4E86\uFF0C\u5C06 xml \u6587\u4EF6\u8F6C\u6362\u4E3A Document \u5BF9\u8C61</span>
      <span class="token class-name">Document</span> doc <span class="token operator">=</span> <span class="token function">doLoadDocument</span><span class="token punctuation">(</span>inputSource<span class="token punctuation">,</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u7EE7\u7EED</span>
      <span class="token keyword">return</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span>doc<span class="token punctuation">,</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8FD8\u5728\u8FD9\u4E2A\u6587\u4EF6\u4E2D\uFF0C\u7B2C 505 \u884C</span>
<span class="token comment">// \u8FD4\u56DE\u503C\uFF1A\u8FD4\u56DE\u4ECE\u5F53\u524D\u914D\u7F6E\u6587\u4EF6\u52A0\u8F7D\u4E86\u591A\u5C11\u6570\u91CF\u7684 Bean</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Document</span> doc<span class="token punctuation">,</span> <span class="token class-name">Resource</span> resource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
   <span class="token class-name">BeanDefinitionDocumentReader</span> documentReader <span class="token operator">=</span> <span class="token function">createBeanDefinitionDocumentReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> countBefore <span class="token operator">=</span> <span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanDefinitionCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u8FD9\u91CC</span>
   documentReader<span class="token punctuation">.</span><span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span>doc<span class="token punctuation">,</span> <span class="token function">createReaderContext</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanDefinitionCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> countBefore<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// DefaultBeanDefinitionDocumentReader 90</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Document</span> doc<span class="token punctuation">,</span> <span class="token class-name">XmlReaderContext</span> readerContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span>readerContext <span class="token operator">=</span> readerContext<span class="token punctuation">;</span>
   logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Loading bean definitions&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">Element</span> root <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">getDocumentElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u4ECE xml \u6839\u8282\u70B9\u5F00\u59CB\u89E3\u6790\u6587\u4EF6</span>
   <span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>         
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ECF\u8FC7\u6F2B\u957F\u7684\u94FE\u8DEF\uFF0C\u4E00\u4E2A\u914D\u7F6E\u6587\u4EF6\u7EC8\u4E8E\u8F6C\u6362\u4E3A\u4E00\u9897 DOM \u6811\u4E86\uFF0C\u6CE8\u610F\uFF0C\u8FD9\u91CC\u6307\u7684\u662F\u5176\u4E2D\u4E00\u4E2A\u914D\u7F6E\u6587\u4EF6\uFF0C\u4E0D\u662F\u6240\u6709\u7684\uFF0C\u8BFB\u8005\u53EF\u4EE5\u770B\u5230\u4E0A\u9762\u6709\u4E2A for \u5FAA\u73AF\u7684\u3002\u4E0B\u9762\u5F00\u59CB\u4ECE\u6839\u8282\u70B9\u5F00\u59CB\u89E3\u6790\uFF1A</p><h5 id="doregisterbeandefinitions" tabindex="-1"><a class="header-anchor" href="#doregisterbeandefinitions" aria-hidden="true">#</a> doRegisterBeanDefinitions\uFF1A</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// DefaultBeanDefinitionDocumentReader 116</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Element</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u6211\u4EEC\u770B\u540D\u5B57\u5C31\u77E5\u9053\uFF0CBeanDefinitionParserDelegate \u5FC5\u5B9A\u662F\u4E00\u4E2A\u91CD\u8981\u7684\u7C7B\uFF0C\u5B83\u8D1F\u8D23\u89E3\u6790 Bean \u5B9A\u4E49\uFF0C</span>
   <span class="token comment">// \u8FD9\u91CC\u4E3A\u4EC0\u4E48\u8981\u5B9A\u4E49\u4E00\u4E2A parent? \u770B\u5230\u540E\u9762\u5C31\u77E5\u9053\u4E86\uFF0C\u662F\u9012\u5F52\u95EE\u9898\uFF0C</span>
   <span class="token comment">// \u56E0\u4E3A &lt;beans /&gt; \u5185\u90E8\u662F\u53EF\u4EE5\u5B9A\u4E49 &lt;beans /&gt; \u7684\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u65B9\u6CD5\u7684 root \u5176\u5B9E\u4E0D\u4E00\u5B9A\u5C31\u662F xml \u7684\u6839\u8282\u70B9\uFF0C\u4E5F\u53EF\u4EE5\u662F\u5D4C\u5957\u5728\u91CC\u9762\u7684 &lt;beans /&gt; \u8282\u70B9\uFF0C\u4ECE\u6E90\u7801\u5206\u6790\u7684\u89D2\u5EA6\uFF0C\u6211\u4EEC\u5F53\u505A\u6839\u8282\u70B9\u5C31\u597D\u4E86</span>
   <span class="token class-name">BeanDefinitionParserDelegate</span> parent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">;</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token function">createDelegate</span><span class="token punctuation">(</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> root<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u5757\u8BF4\u7684\u662F\u6839\u8282\u70B9 &lt;beans ... profile=&quot;dev&quot; /&gt; \u4E2D\u7684 profile \u662F\u5426\u662F\u5F53\u524D\u73AF\u5883\u9700\u8981\u7684\uFF0C</span>
      <span class="token comment">// \u5982\u679C\u5F53\u524D\u73AF\u5883\u914D\u7F6E\u7684 profile \u4E0D\u5305\u542B\u6B64 profile\uFF0C\u90A3\u5C31\u76F4\u63A5 return \u4E86\uFF0C\u4E0D\u5BF9\u6B64 &lt;beans /&gt; \u89E3\u6790</span>
      <span class="token comment">// \u4E0D\u719F\u6089 profile \u4E3A\u4F55\u7269\uFF0C\u4E0D\u719F\u6089\u600E\u4E48\u914D\u7F6E profile \u8BFB\u8005\u7684\u8BF7\u79FB\u6B65\u9644\u5F55\u533A</span>
      <span class="token class-name">String</span> profileSpec <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>PROFILE_ATTRIBUTE<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>profileSpec<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> specifiedProfiles <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">tokenizeToStringArray</span><span class="token punctuation">(</span>
               profileSpec<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span><span class="token punctuation">.</span>MULTI_VALUE_ATTRIBUTE_DELIMITERS<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">acceptsProfiles</span><span class="token punctuation">(</span>specifiedProfiles<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isInfoEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Skipped XML bean definition file due to specified profiles [&quot;</span> <span class="token operator">+</span> profileSpec <span class="token operator">+</span>
                     <span class="token string">&quot;] not matching: &quot;</span> <span class="token operator">+</span> <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token function">preProcessXml</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u94A9\u5B50</span>
   <span class="token comment">// \u5F80\u4E0B\u770B</span>
   <span class="token function">parseBeanDefinitions</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">postProcessXml</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u94A9\u5B50</span>

   <span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> parent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>preProcessXml(root) \u548C postProcessXml(root) \u662F\u7ED9\u5B50\u7C7B\u7528\u7684\u94A9\u5B50\u65B9\u6CD5\uFF0C\u9274\u4E8E\u6CA1\u6709\u88AB\u4F7F\u7528\u5230\uFF0C\u4E5F\u4E0D\u662F\u6211\u4EEC\u7684\u91CD\u70B9\uFF0C\u6211\u4EEC\u76F4\u63A5\u8DF3\u8FC7\u3002</p><p>\u8FD9\u91CC\u6D89\u53CA\u5230\u4E86 profile \u7684\u95EE\u9898\uFF0C\u5BF9\u4E8E\u4E0D\u4E86\u89E3\u7684\u8BFB\u8005\uFF0C\u6211\u5728\u9644\u5F55\u4E2D\u5BF9 profile \u505A\u4E86\u7B80\u5355\u7684\u89E3\u91CA\uFF0C\u8BFB\u8005\u53EF\u4EE5\u53C2\u8003\u4E00\u4E0B\u3002</p><p>\u63A5\u4E0B\u6765\uFF0C\u770B\u6838\u5FC3\u89E3\u6790\u65B9\u6CD5 parseBeanDefinitions(root, this.delegate) :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// default namespace \u6D89\u53CA\u5230\u7684\u5C31\u56DB\u4E2A\u6807\u7B7E &lt;import /&gt;\u3001&lt;alias /&gt;\u3001&lt;bean /&gt; \u548C &lt;beans /&gt;\uFF0C</span>
<span class="token comment">// \u5176\u4ED6\u7684\u5C5E\u4E8E custom \u7684</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">parseBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Element</span> root<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">NodeList</span> nl <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nl<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token class-name">Node</span> node <span class="token operator">=</span> nl<span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token keyword">instanceof</span> <span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Element</span> ele <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">)</span> node<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token comment">// \u89E3\u6790 default namespace \u4E0B\u9762\u7684\u51E0\u4E2A\u5143\u7D20</span>
               <span class="token function">parseDefaultElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
               <span class="token comment">// \u89E3\u6790\u5176\u4ED6 namespace \u7684\u5143\u7D20</span>
               delegate<span class="token punctuation">.</span><span class="token function">parseCustomElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token punctuation">{</span>
      delegate<span class="token punctuation">.</span><span class="token function">parseCustomElement</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u5BF9\u4E8E\u6BCF\u4E2A\u914D\u7F6E\u6765\u8BF4\uFF0C\u5206\u522B\u8FDB\u5165\u5230 parseDefaultElement(ele, delegate); \u548C delegate.parseCustomElement(ele); \u8FD9\u4E24\u4E2A\u5206\u652F\u4E86\u3002</p><p>parseDefaultElement(ele, delegate) \u4EE3\u8868\u89E3\u6790\u7684\u8282\u70B9\u662F <code>&lt;import /&gt;</code>\u3001<code>&lt;alias /&gt;</code>\u3001<code>&lt;bean /&gt;</code>\u3001<code>&lt;beans /&gt;</code> \u8FD9\u51E0\u4E2A\u3002</p><blockquote><p>\u8FD9\u91CC\u7684\u56DB\u4E2A\u6807\u7B7E\u4E4B\u6240\u4EE5\u662F <strong>default</strong> \u7684\uFF0C\u662F\u56E0\u4E3A\u5B83\u4EEC\u662F\u5904\u4E8E\u8FD9\u4E2A namespace \u4E0B\u5B9A\u4E49\u7684\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>http://www.springframework.org/schema/beans
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u53C8\u5230\u521D\u5B66\u8005\u79D1\u666E\u65F6\u95F4\uFF0C\u4E0D\u719F\u6089 namespace \u7684\u8BFB\u8005\u8BF7\u770B\u4E0B\u9762\u8D34\u51FA\u6765\u7684 xml\uFF0C\u8FD9\u91CC\u7684\u7B2C\u4E8C\u884C <strong>xmlns</strong> \u5C31\u662F\u54AF\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>
            http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">default-autowire</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>byName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u5BF9\u4E8E\u5176\u4ED6\u7684\u6807\u7B7E\uFF0C\u5C06\u8FDB\u5165\u5230 delegate.parseCustomElement(element) \u8FD9\u4E2A\u5206\u652F\u3002\u5982\u6211\u4EEC\u7ECF\u5E38\u4F1A\u4F7F\u7528\u5230\u7684 <code>&lt;mvc /&gt;</code>\u3001<code>&lt;task /&gt;</code>\u3001<code>&lt;context /&gt;</code>\u3001<code>&lt;aop /&gt;</code>\u7B49\u3002</p><p>\u8FD9\u4E9B\u5C5E\u4E8E\u6269\u5C55\uFF0C\u5982\u679C\u9700\u8981\u4F7F\u7528\u4E0A\u9762\u8FD9\u4E9B \u201D\u975E default\u201C \u6807\u7B7E\uFF0C\u90A3\u4E48\u4E0A\u9762\u7684 xml \u5934\u90E8\u7684\u5730\u65B9\u4E5F\u8981\u5F15\u5165\u76F8\u5E94\u7684 namespace \u548C .xsd \u6587\u4EF6\u7684\u8DEF\u5F84\uFF0C\u5982\u4E0B\u6240\u793A\u3002\u540C\u65F6\u4EE3\u7801\u4E2D\u9700\u8981\u63D0\u4F9B\u76F8\u5E94\u7684 parser \u6765\u89E3\u6790\uFF0C\u5982 MvcNamespaceHandler\u3001TaskNamespaceHandler\u3001ContextNamespaceHandler\u3001AopNamespaceHandler \u7B49\u3002</p><p>\u5047\u5982\u8BFB\u8005\u60F3\u5206\u6790 <code>&lt;context:property-placeholder location=&quot;classpath:xx.properties&quot; /&gt;</code> \u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u5C31\u5E94\u8BE5\u5230 ContextNamespaceHandler \u4E2D\u627E\u7B54\u6848\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/context<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/mvc<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc.xsd  
       <span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">default-autowire</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>byName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u7406\uFF0C\u4EE5\u540E\u4F60\u8981\u662F\u78B0\u5230 <code>&lt;dubbo /&gt;</code> \u8FD9\u79CD\u6807\u7B7E\uFF0C\u90A3\u4E48\u5C31\u5E94\u8BE5\u641C\u4E00\u641C\u662F\u4E0D\u662F\u6709 DubboNamespaceHandler \u8FD9\u4E2A\u5904\u7406\u7C7B\u3002</p></blockquote><p>\u56DE\u8FC7\u795E\u6765\uFF0C\u770B\u770B\u5904\u7406 default \u6807\u7B7E\u7684\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">parseDefaultElement</span><span class="token punctuation">(</span><span class="token class-name">Element</span> ele<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> IMPORT_ELEMENT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406 &lt;import /&gt; \u6807\u7B7E</span>
      <span class="token function">importBeanDefinitionResource</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> ALIAS_ELEMENT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406 &lt;alias /&gt; \u6807\u7B7E\u5B9A\u4E49</span>
      <span class="token comment">// &lt;alias name=&quot;fromName&quot; alias=&quot;toName&quot;/&gt;</span>
      <span class="token function">processAliasRegistration</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> BEAN_ELEMENT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406 &lt;bean /&gt; \u6807\u7B7E\u5B9A\u4E49\uFF0C\u8FD9\u4E5F\u7B97\u662F\u6211\u4EEC\u7684\u91CD\u70B9\u5427</span>
      <span class="token function">processBeanDefinition</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> NESTED_BEANS_ELEMENT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u78B0\u5230\u7684\u662F\u5D4C\u5957\u7684 &lt;beans /&gt; \u6807\u7B7E\uFF0C\u9700\u8981\u9012\u5F52</span>
      <span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6BCF\u4E2A\u6807\u7B7E\u90FD\u8BF4\uFF0C\u90A3\u6211\u4E0D\u5410\u8840\uFF0C\u4F60\u4EEC\u90FD\u8981\u5410\u8840\u4E86\u3002\u6211\u4EEC\u6311\u6211\u4EEC\u7684\u91CD\u70B9 <code>&lt;bean /&gt;</code> \u6807\u7B7E\u51FA\u6765\u8BF4\u3002</p><h5 id="processbeandefinition-\u89E3\u6790-bean-\u6807\u7B7E" tabindex="-1"><a class="header-anchor" href="#processbeandefinition-\u89E3\u6790-bean-\u6807\u7B7E" aria-hidden="true">#</a> processBeanDefinition \u89E3\u6790 bean \u6807\u7B7E</h5><p>\u4E0B\u9762\u662F processBeanDefinition \u89E3\u6790 <code>&lt;bean /&gt;</code> \u6807\u7B7E\uFF1A</p><p>// DefaultBeanDefinitionDocumentReader 298</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">processBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">Element</span> ele<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5C06 &lt;bean /&gt; \u8282\u70B9\u4E2D\u7684\u4FE1\u606F\u63D0\u53D6\u51FA\u6765\uFF0C\u7136\u540E\u5C01\u88C5\u5230\u4E00\u4E2A BeanDefinitionHolder \u4E2D\uFF0C\u7EC6\u8282\u5F80\u4E0B\u770B</span>
   <span class="token class-name">BeanDefinitionHolder</span> bdHolder <span class="token operator">=</span> delegate<span class="token punctuation">.</span><span class="token function">parseBeanDefinitionElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
   <span class="token comment">// \u4E0B\u9762\u7684\u51E0\u884C\u5148\u4E0D\u8981\u770B\uFF0C\u8DF3\u8FC7\u5148\uFF0C\u8DF3\u8FC7\u5148\uFF0C\u8DF3\u8FC7\u5148\uFF0C\u540E\u9762\u4F1A\u7EE7\u7EED\u8BF4\u7684</span>
  
   <span class="token keyword">if</span> <span class="token punctuation">(</span>bdHolder <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      bdHolder <span class="token operator">=</span> delegate<span class="token punctuation">.</span><span class="token function">decorateBeanDefinitionIfRequired</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> bdHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token comment">// Register the final decorated instance.</span>
         <span class="token class-name">BeanDefinitionReaderUtils</span><span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>bdHolder<span class="token punctuation">,</span> <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionStoreException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to register bean definition with name &#39;&quot;</span> <span class="token operator">+</span>
               bdHolder<span class="token punctuation">.</span><span class="token function">getBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> ele<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// Send registration event.</span>
      <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fireComponentRegistered</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanComponentDefinition</span><span class="token punctuation">(</span>bdHolder<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EE7\u7EED\u5F80\u4E0B\u770B\u600E\u4E48\u89E3\u6790\u4E4B\u524D\uFF0C\u6211\u4EEC\u5148\u770B\u4E0B <strong><code>&lt;bean /&gt;</code></strong> \u6807\u7B7E\u4E2D\u53EF\u4EE5\u5B9A\u4E49\u54EA\u4E9B\u5C5E\u6027\uFF1A</p><table><thead><tr><th>Property</th><th></th></tr></thead><tbody><tr><td>class</td><td>\u7C7B\u7684\u5168\u9650\u5B9A\u540D</td></tr><tr><td>name</td><td>\u53EF\u6307\u5B9A id\u3001name(\u7528\u9017\u53F7\u3001\u5206\u53F7\u3001\u7A7A\u683C\u5206\u9694)</td></tr><tr><td>scope</td><td>\u4F5C\u7528\u57DF</td></tr><tr><td>constructor arguments</td><td>\u6307\u5B9A\u6784\u9020\u53C2\u6570</td></tr><tr><td>properties</td><td>\u8BBE\u7F6E\u5C5E\u6027\u7684\u503C</td></tr><tr><td>autowiring mode</td><td>no(\u9ED8\u8BA4\u503C)\u3001byName\u3001byType\u3001 constructor</td></tr><tr><td>lazy-initialization mode</td><td>\u662F\u5426\u61D2\u52A0\u8F7D(\u5982\u679C\u88AB\u975E\u61D2\u52A0\u8F7D\u7684bean\u4F9D\u8D56\u4E86\u90A3\u4E48\u5176\u5B9E\u4E5F\u5C31\u4E0D\u80FD\u61D2\u52A0\u8F7D\u4E86)</td></tr><tr><td>initialization method</td><td>bean \u5C5E\u6027\u8BBE\u7F6E\u5B8C\u6210\u540E\uFF0C\u4F1A\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5</td></tr><tr><td>destruction method</td><td>bean \u9500\u6BC1\u540E\u7684\u56DE\u8C03\u65B9\u6CD5</td></tr></tbody></table><p>\u4E0A\u9762\u8868\u683C\u4E2D\u7684\u5185\u5BB9\u6211\u60F3\u5927\u5BB6\u90FD\u975E\u5E38\u719F\u6089\u5427\uFF0C\u5982\u679C\u4E0D\u719F\u6089\uFF0C\u90A3\u5C31\u662F\u4F60\u4E0D\u591F\u4E86\u89E3 Spring \u7684\u914D\u7F6E\u4E86\u3002</p><p>\u7B80\u5355\u5730\u8BF4\u5C31\u662F\u50CF\u4E0B\u9762\u8FD9\u6837\u5B50\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>exampleBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name1, name2, name3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.javadoop.ExampleBean<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>singleton<span class="token punctuation">&quot;</span></span> <span class="token attr-name">lazy-init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">init-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>init<span class="token punctuation">&quot;</span></span> <span class="token attr-name">destroy-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cleanup<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  
    <span class="token comment">&lt;!-- \u53EF\u4EE5\u7528\u4E0B\u9762\u4E09\u79CD\u5F62\u5F0F\u6307\u5B9A\u6784\u9020\u53C2\u6570 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>int<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>7500000<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>years<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>7500000<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>7500000<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  
    <span class="token comment">&lt;!-- property \u7684\u51E0\u79CD\u60C5\u51B5 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>beanOne<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>anotherExampleBean<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>beanTwo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>yetAnotherBean<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>integerProperty<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u7136\uFF0C\u9664\u4E86\u4E0A\u9762\u4E3E\u4F8B\u51FA\u6765\u7684\u8FD9\u4E9B\uFF0C\u8FD8\u6709 factory-bean\u3001factory-method\u3001<code>&lt;lockup-method /&gt;</code>\u3001<code>&lt;replaced-method /&gt;</code>\u3001<code>&lt;meta /&gt;</code>\u3001<code>&lt;qualifier /&gt;</code> \u8FD9\u51E0\u4E2A\uFF0C\u5927\u5BB6\u662F\u4E0D\u662F\u719F\u6089\u5462\uFF1F\u81EA\u5DF1\u68C0\u9A8C\u4E00\u4E0B\u81EA\u5DF1\u5BF9 Spring \u4E2D bean \u7684\u4E86\u89E3\u7A0B\u5EA6\u3002</p><p>\u6709\u4E86\u4EE5\u4E0A\u8FD9\u4E9B\u77E5\u8BC6\u4EE5\u540E\uFF0C\u6211\u4EEC\u518D\u7EE7\u7EED\u5F80\u91CC\u770B\u600E\u4E48\u89E3\u6790 bean \u5143\u7D20\uFF0C\u662F\u600E\u4E48\u8F6C\u6362\u5230 BeanDefinitionHolder \u7684\u3002</p><p>// BeanDefinitionParserDelegate 428</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">BeanDefinitionHolder</span> <span class="token function">parseBeanDefinitionElement</span><span class="token punctuation">(</span><span class="token class-name">Element</span> ele<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">parseBeanDefinitionElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">BeanDefinitionHolder</span> <span class="token function">parseBeanDefinitionElement</span><span class="token punctuation">(</span><span class="token class-name">Element</span> ele<span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span> containingBean<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token class-name">String</span> id <span class="token operator">=</span> ele<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>ID_ATTRIBUTE<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> nameAttr <span class="token operator">=</span> ele<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>NAME_ATTRIBUTE<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> aliases <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
   <span class="token comment">// \u5C06 name \u5C5E\u6027\u7684\u5B9A\u4E49\u6309\u7167 \u201C\u9017\u53F7\u3001\u5206\u53F7\u3001\u7A7A\u683C\u201D \u5207\u5206\uFF0C\u5F62\u6210\u4E00\u4E2A \u522B\u540D\u5217\u8868\u6570\u7EC4\uFF0C</span>
   <span class="token comment">// \u5F53\u7136\uFF0C\u5982\u679C\u4F60\u4E0D\u5B9A\u4E49 name \u5C5E\u6027\u7684\u8BDD\uFF0C\u5C31\u662F\u7A7A\u7684\u4E86</span>
   <span class="token comment">// \u6211\u5728\u9644\u5F55\u4E2D\u7B80\u5355\u4ECB\u7ECD\u4E86\u4E00\u4E0B id \u548C name \u7684\u914D\u7F6E\uFF0C\u5927\u5BB6\u53EF\u4EE5\u770B\u4E00\u773C\uFF0C\u6709\u4E2A20\u79D2\u5C31\u53EF\u4EE5\u4E86</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>nameAttr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nameArr <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">tokenizeToStringArray</span><span class="token punctuation">(</span>nameAttr<span class="token punctuation">,</span> MULTI_VALUE_ATTRIBUTE_DELIMITERS<span class="token punctuation">)</span><span class="token punctuation">;</span>
      aliases<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>nameArr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token class-name">String</span> beanName <span class="token operator">=</span> id<span class="token punctuation">;</span>
   <span class="token comment">// \u5982\u679C\u6CA1\u6709\u6307\u5B9Aid, \u90A3\u4E48\u7528\u522B\u540D\u5217\u8868\u7684\u7B2C\u4E00\u4E2A\u540D\u5B57\u4F5C\u4E3AbeanName</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>aliases<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      beanName <span class="token operator">=</span> aliases<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;No XML &#39;id&#39; specified - using &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
               <span class="token string">&quot;&#39; as bean name and &quot;</span> <span class="token operator">+</span> aliases <span class="token operator">+</span> <span class="token string">&quot; as aliases&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>containingBean <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">checkNameUniqueness</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> aliases<span class="token punctuation">,</span> ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
  
   <span class="token comment">// \u6839\u636E &lt;bean ...&gt;...&lt;/bean&gt; \u4E2D\u7684\u914D\u7F6E\u521B\u5EFA BeanDefinition\uFF0C\u7136\u540E\u628A\u914D\u7F6E\u4E2D\u7684\u4FE1\u606F\u90FD\u8BBE\u7F6E\u5230\u5B9E\u4F8B\u4E2D,</span>
   <span class="token comment">// \u7EC6\u8282\u540E\u9762\u7EC6\u8BF4\uFF0C\u5148\u77E5\u9053\u4E0B\u9762\u8FD9\u884C\u7ED3\u675F\u540E\uFF0C\u4E00\u4E2A BeanDefinition \u5B9E\u4F8B\u5C31\u51FA\u6765\u4E86\u3002</span>
   <span class="token class-name">AbstractBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token function">parseBeanDefinitionElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> containingBean<span class="token punctuation">)</span><span class="token punctuation">;</span>
   
   <span class="token comment">// \u5230\u8FD9\u91CC\uFF0C\u6574\u4E2A &lt;bean /&gt; \u6807\u7B7E\u5C31\u7B97\u89E3\u6790\u7ED3\u675F\u4E86\uFF0C\u4E00\u4E2A BeanDefinition \u5C31\u5F62\u6210\u4E86\u3002</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>beanDefinition <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u90FD\u6CA1\u6709\u8BBE\u7F6E id \u548C name\uFF0C\u90A3\u4E48\u6B64\u65F6\u7684 beanName \u5C31\u4F1A\u4E3A null\uFF0C\u8FDB\u5165\u4E0B\u9762\u8FD9\u5757\u4EE3\u7801\u4EA7\u751F</span>
      <span class="token comment">// \u5982\u679C\u8BFB\u8005\u4E0D\u611F\u5174\u8DA3\u7684\u8BDD\uFF0C\u6211\u89C9\u5F97\u4E0D\u9700\u8981\u5173\u5FC3\u8FD9\u5757\u4EE3\u7801\uFF0C\u5BF9\u672C\u6587\u6E90\u7801\u5206\u6790\u6765\u8BF4\uFF0C\u8FD9\u4E9B\u4E1C\u897F\u4E0D\u91CD\u8981</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>containingBean <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u6309\u7167\u6211\u4EEC\u7684\u601D\u8DEF\uFF0C\u8FD9\u91CC containingBean \u662F null \u7684</span>
               beanName <span class="token operator">=</span> <span class="token class-name">BeanDefinitionReaderUtils</span><span class="token punctuation">.</span><span class="token function">generateBeanName</span><span class="token punctuation">(</span>
                     beanDefinition<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>readerContext<span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
               <span class="token comment">// \u5982\u679C\u6211\u4EEC\u4E0D\u5B9A\u4E49 id \u548C name\uFF0C\u90A3\u4E48\u6211\u4EEC\u5F15\u8A00\u91CC\u7684\u90A3\u4E2A\u4F8B\u5B50\uFF1A</span>
               <span class="token comment">//   1. beanName \u4E3A\uFF1Acom.javadoop.example.MessageServiceImpl#0</span>
               <span class="token comment">//   2. beanClassName \u4E3A\uFF1Acom.javadoop.example.MessageServiceImpl</span>
              
               beanName <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>readerContext<span class="token punctuation">.</span><span class="token function">generateBeanName</span><span class="token punctuation">(</span>beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
               
               <span class="token class-name">String</span> beanClassName <span class="token operator">=</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getBeanClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token keyword">if</span> <span class="token punctuation">(</span>beanClassName <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                     beanName<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>beanClassName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> beanName<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> beanClassName<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                     <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>readerContext<span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isBeanNameInUse</span><span class="token punctuation">(</span>beanClassName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token comment">// \u628A beanClassName \u8BBE\u7F6E\u4E3A Bean \u7684\u522B\u540D</span>
                  aliases<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanClassName<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Neither XML &#39;id&#39; nor &#39;name&#39; specified - &quot;</span> <span class="token operator">+</span>
                     <span class="token string">&quot;using generated bean name [&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> aliasesArray <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">toStringArray</span><span class="token punctuation">(</span>aliases<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u8FD4\u56DE BeanDefinitionHolder</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">(</span>beanDefinition<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> aliasesArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\uFF0C\u6211\u4EEC\u518D\u770B\u770B\u600E\u4E48\u6839\u636E\u914D\u7F6E\u521B\u5EFA BeanDefinition \u5B9E\u4F8B\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">AbstractBeanDefinition</span> <span class="token function">parseBeanDefinitionElement</span><span class="token punctuation">(</span>
      <span class="token class-name">Element</span> ele<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span> containingBean<span class="token punctuation">)</span> <span class="token punctuation">{</span>

   <span class="token keyword">this</span><span class="token punctuation">.</span>parseState<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanEntry</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token class-name">String</span> className <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>ele<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span>CLASS_ATTRIBUTE<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      className <span class="token operator">=</span> ele<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>CLASS_ATTRIBUTE<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token class-name">String</span> parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>ele<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span>PARENT_ATTRIBUTE<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         parent <span class="token operator">=</span> ele<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>PARENT_ATTRIBUTE<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u521B\u5EFA BeanDefinition\uFF0C\u7136\u540E\u8BBE\u7F6E\u7C7B\u4FE1\u606F\u800C\u5DF2\uFF0C\u5F88\u7B80\u5355\uFF0C\u5C31\u4E0D\u8D34\u4EE3\u7801\u4E86</span>
      <span class="token class-name">AbstractBeanDefinition</span> bd <span class="token operator">=</span> <span class="token function">createBeanDefinition</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u8BBE\u7F6E BeanDefinition \u7684\u4E00\u5806\u5C5E\u6027\uFF0C\u8FD9\u4E9B\u5C5E\u6027\u5B9A\u4E49\u5728 AbstractBeanDefinition \u4E2D</span>
      <span class="token function">parseBeanDefinitionAttributes</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> containingBean<span class="token punctuation">,</span> bd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      bd<span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span><span class="token class-name">DomUtils</span><span class="token punctuation">.</span><span class="token function">getChildElementValueByTagName</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> DESCRIPTION_ELEMENT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
      <span class="token doc-comment comment">/**
       * \u4E0B\u9762\u7684\u4E00\u5806\u662F\u89E3\u6790 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span><span class="token punctuation">&gt;</span></span>......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span> \u5185\u90E8\u7684\u5B50\u5143\u7D20\uFF0C
       * \u89E3\u6790\u51FA\u6765\u4EE5\u540E\u7684\u4FE1\u606F\u90FD\u653E\u5230 bd \u7684\u5C5E\u6027\u4E2D
       */</span>
     
      <span class="token comment">// \u89E3\u6790 &lt;meta /&gt;</span>
      <span class="token function">parseMetaElements</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> bd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u89E3\u6790 &lt;lookup-method /&gt;</span>
      <span class="token function">parseLookupOverrideSubElements</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> bd<span class="token punctuation">.</span><span class="token function">getMethodOverrides</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u89E3\u6790 &lt;replaced-method /&gt;</span>
      <span class="token function">parseReplacedMethodSubElements</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> bd<span class="token punctuation">.</span><span class="token function">getMethodOverrides</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u89E3\u6790 &lt;constructor-arg /&gt;</span>
      <span class="token function">parseConstructorArgElements</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> bd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u89E3\u6790 &lt;property /&gt;</span>
      <span class="token function">parsePropertyElements</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> bd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u89E3\u6790 &lt;qualifier /&gt;</span>
      <span class="token function">parseQualifierElements</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> bd<span class="token punctuation">)</span><span class="token punctuation">;</span>

      bd<span class="token punctuation">.</span><span class="token function">setResource</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>readerContext<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      bd<span class="token punctuation">.</span><span class="token function">setSource</span><span class="token punctuation">(</span><span class="token function">extractSource</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> bd<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Bean class [&quot;</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">&quot;] not found&quot;</span><span class="token punctuation">,</span> ele<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoClassDefFoundError</span> err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Class that bean class [&quot;</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">&quot;] depends on not found&quot;</span><span class="token punctuation">,</span> ele<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Unexpected failure during bean definition parsing&quot;</span><span class="token punctuation">,</span> ele<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>parseState<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u8FD9\u91CC\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u5B8C\u6210\u4E86\u6839\u636E <code>&lt;bean /&gt;</code> \u914D\u7F6E\u521B\u5EFA\u4E86\u4E00\u4E2A BeanDefinitionHolder \u5B9E\u4F8B\u3002\u6CE8\u610F\uFF0C\u662F\u4E00\u4E2A\u3002</p><p>\u6211\u4EEC\u56DE\u5230\u89E3\u6790 <code>&lt;bean /&gt;</code> \u7684\u5165\u53E3\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">processBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">Element</span> ele<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5C06 &lt;bean /&gt; \u8282\u70B9\u8F6C\u6362\u4E3A BeanDefinitionHolder\uFF0C\u5C31\u662F\u4E0A\u9762\u8BF4\u7684\u4E00\u5806</span>
   <span class="token class-name">BeanDefinitionHolder</span> bdHolder <span class="token operator">=</span> delegate<span class="token punctuation">.</span><span class="token function">parseBeanDefinitionElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>bdHolder <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u6709\u81EA\u5B9A\u4E49\u5C5E\u6027\u7684\u8BDD\uFF0C\u8FDB\u884C\u76F8\u5E94\u7684\u89E3\u6790\uFF0C\u5148\u5FFD\u7565</span>
      bdHolder <span class="token operator">=</span> delegate<span class="token punctuation">.</span><span class="token function">decorateBeanDefinitionIfRequired</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> bdHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u6211\u4EEC\u628A\u8FD9\u6B65\u53EB\u505A \u6CE8\u518CBean \u5427</span>
         <span class="token class-name">BeanDefinitionReaderUtils</span><span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>bdHolder<span class="token punctuation">,</span> <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionStoreException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to register bean definition with name &#39;&quot;</span> <span class="token operator">+</span>
               bdHolder<span class="token punctuation">.</span><span class="token function">getBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> ele<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u6CE8\u518C\u5B8C\u6210\u540E\uFF0C\u53D1\u9001\u4E8B\u4EF6\uFF0C\u672C\u6587\u4E0D\u5C55\u5F00\u8BF4\u8FD9\u4E2A</span>
      <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fireComponentRegistered</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanComponentDefinition</span><span class="token punctuation">(</span>bdHolder<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u5BB6\u518D\u4ED4\u7EC6\u770B\u4E00\u4E0B\u8FD9\u5757\u5427\uFF0C\u6211\u4EEC\u540E\u9762\u5C31\u4E0D\u56DE\u6765\u8BF4\u8FD9\u4E2A\u4E86\u3002\u8FD9\u91CC\u5DF2\u7ECF\u6839\u636E\u4E00\u4E2A <code>&lt;bean /&gt;</code> \u6807\u7B7E\u4EA7\u751F\u4E86\u4E00\u4E2A BeanDefinitionHolder \u7684\u5B9E\u4F8B\uFF0C\u8FD9\u4E2A\u5B9E\u4F8B\u91CC\u9762\u4E5F\u5C31\u662F\u4E00\u4E2A BeanDefinition \u7684\u5B9E\u4F8B\u548C\u5B83\u7684 beanName\u3001aliases \u8FD9\u4E09\u4E2A\u4FE1\u606F\uFF0C\u6CE8\u610F\uFF0C\u6211\u4EEC\u7684\u5173\u6CE8\u70B9\u59CB\u7EC8\u5728 BeanDefinition \u4E0A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BeanDefinitionHolder</span> <span class="token keyword">implements</span> <span class="token class-name">BeanMetadataElement</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">BeanDefinition</span> beanDefinition<span class="token punctuation">;</span>

  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> beanName<span class="token punctuation">;</span>

  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> aliases<span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u6211\u4EEC\u51C6\u5907\u6CE8\u518C\u8FD9\u4E2A BeanDefinition\uFF0C\u6700\u540E\uFF0C\u628A\u8FD9\u4E2A\u6CE8\u518C\u4E8B\u4EF6\u53D1\u9001\u51FA\u53BB\u3002</p><p>\u4E0B\u9762\uFF0C\u6211\u4EEC\u5F00\u59CB\u8BF4\u8BF4\u6CE8\u518C Bean \u5427\u3002</p><h5 id="\u6CE8\u518C-bean" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u518C-bean" aria-hidden="true">#</a> \u6CE8\u518C Bean</h5><p>// BeanDefinitionReaderUtils 143</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>
      <span class="token class-name">BeanDefinitionHolder</span> definitionHolder<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>

   <span class="token class-name">String</span> beanName <span class="token operator">=</span> definitionHolder<span class="token punctuation">.</span><span class="token function">getBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u6CE8\u518C\u8FD9\u4E2A Bean</span>
   registry<span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> definitionHolder<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u5982\u679C\u8FD8\u6709\u522B\u540D\u7684\u8BDD\uFF0C\u4E5F\u8981\u6839\u636E\u522B\u540D\u5168\u90E8\u6CE8\u518C\u4E00\u904D\uFF0C\u4E0D\u7136\u6839\u636E\u522B\u540D\u5C31\u4F1A\u627E\u4E0D\u5230 Bean \u4E86</span>
   <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> aliases <span class="token operator">=</span> definitionHolder<span class="token punctuation">.</span><span class="token function">getAliases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>aliases <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> alias <span class="token operator">:</span> aliases<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// alias -&gt; beanName \u4FDD\u5B58\u5B83\u4EEC\u7684\u522B\u540D\u4FE1\u606F\uFF0C\u8FD9\u4E2A\u5F88\u7B80\u5355\uFF0C\u7528\u4E00\u4E2A map \u4FDD\u5B58\u4E00\u4E0B\u5C31\u53EF\u4EE5\u4E86\uFF0C</span>
         <span class="token comment">// \u83B7\u53D6\u7684\u65F6\u5019\uFF0C\u4F1A\u5148\u5C06 alias \u8F6C\u6362\u4E3A beanName\uFF0C\u7136\u540E\u518D\u67E5\u627E</span>
         registry<span class="token punctuation">.</span><span class="token function">registerAlias</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> alias<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u522B\u540D\u6CE8\u518C\u7684\u653E\u4E00\u8FB9\uFF0C\u6BD5\u7ADF\u5B83\u5F88\u7B80\u5355\uFF0C\u6211\u4EEC\u770B\u770B\u600E\u4E48\u6CE8\u518C Bean\u3002</p><p>// DefaultListableBeanFactory 793</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span> beanDefinition<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>

   <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token string">&quot;Bean name must not be empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>beanDefinition<span class="token punctuation">,</span> <span class="token string">&quot;BeanDefinition must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>beanDefinition <span class="token keyword">instanceof</span> <span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">)</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionValidationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// old? \u8FD8\u8BB0\u5F97 \u201C\u5141\u8BB8 bean \u8986\u76D6\u201D \u8FD9\u4E2A\u914D\u7F6E\u5417\uFF1FallowBeanDefinitionOverriding</span>
   <span class="token class-name">BeanDefinition</span> oldBeanDefinition<span class="token punctuation">;</span>
  
   <span class="token comment">// \u4E4B\u540E\u4F1A\u770B\u5230\uFF0C\u6240\u6709\u7684 Bean \u6CE8\u518C\u540E\u4F1A\u653E\u5165\u8FD9\u4E2A beanDefinitionMap \u4E2D</span>
   oldBeanDefinition <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
   <span class="token comment">// \u5904\u7406\u91CD\u590D\u540D\u79F0\u7684 Bean \u5B9A\u4E49\u7684\u60C5\u51B5</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>oldBeanDefinition <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAllowBeanDefinitionOverriding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u5982\u679C\u4E0D\u5141\u8BB8\u8986\u76D6\u7684\u8BDD\uFF0C\u629B\u5F02\u5E38</span>
         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>beanDefinition<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldBeanDefinition<span class="token punctuation">.</span><span class="token function">getRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// log...\u7528\u6846\u67B6\u5B9A\u4E49\u7684 Bean \u8986\u76D6\u7528\u6237\u81EA\u5B9A\u4E49\u7684 Bean </span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanDefinition<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>oldBeanDefinition<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// log...\u7528\u65B0\u7684 Bean \u8986\u76D6\u65E7\u7684 Bean</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
         <span class="token comment">// log...\u7528\u540C\u7B49\u7684 Bean \u8986\u76D6\u65E7\u7684 Bean\uFF0C\u8FD9\u91CC\u6307\u7684\u662F equals \u65B9\u6CD5\u8FD4\u56DE true \u7684 Bean</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u8986\u76D6</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5224\u65AD\u662F\u5426\u5DF2\u7ECF\u6709\u5176\u4ED6\u7684 Bean \u5F00\u59CB\u521D\u59CB\u5316\u4E86.</span>
      <span class="token comment">// \u6CE8\u610F\uFF0C&quot;\u6CE8\u518CBean&quot; \u8FD9\u4E2A\u52A8\u4F5C\u7ED3\u675F\uFF0CBean \u4F9D\u7136\u8FD8\u6CA1\u6709\u521D\u59CB\u5316\uFF0C\u6211\u4EEC\u540E\u9762\u4F1A\u6709\u5927\u7BC7\u5E45\u8BF4\u521D\u59CB\u5316\u8FC7\u7A0B\uFF0C</span>
      <span class="token comment">// \u5728 Spring \u5BB9\u5668\u542F\u52A8\u7684\u6700\u540E\uFF0C\u4F1A \u9884\u521D\u59CB\u5316 \u6240\u6709\u7684 singleton beans</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasBeanCreationStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// Cannot modify startup-time collection elements anymore (for stable iteration)</span>
         <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> updatedDefinitions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            updatedDefinitions<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
            updatedDefinitions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames <span class="token operator">=</span> updatedDefinitions<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>manualSingletonNames<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> updatedSingletons <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>manualSingletonNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
               updatedSingletons<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token keyword">this</span><span class="token punctuation">.</span>manualSingletonNames <span class="token operator">=</span> updatedSingletons<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u6700\u6B63\u5E38\u7684\u5E94\u8BE5\u662F\u8FDB\u5230\u8FD9\u4E2A\u5206\u652F\u3002</span>
        
         <span class="token comment">// \u5C06 BeanDefinition \u653E\u5230\u8FD9\u4E2A map \u4E2D\uFF0C\u8FD9\u4E2A map \u4FDD\u5B58\u4E86\u6240\u6709\u7684 BeanDefinition</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">// \u8FD9\u662F\u4E2A ArrayList\uFF0C\u6240\u4EE5\u4F1A\u6309\u7167 bean \u914D\u7F6E\u7684\u987A\u5E8F\u4FDD\u5B58\u6BCF\u4E00\u4E2A\u6CE8\u518C\u7684 Bean \u7684\u540D\u5B57</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">// \u8FD9\u662F\u4E2A LinkedHashSet\uFF0C\u4EE3\u8868\u7684\u662F\u624B\u52A8\u6CE8\u518C\u7684 singleton bean\uFF0C</span>
         <span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u662F remove \u65B9\u6CD5\uFF0C\u5230\u8FD9\u91CC\u7684 Bean \u5F53\u7136\u4E0D\u662F\u624B\u52A8\u6CE8\u518C\u7684</span>
         <span class="token comment">// \u624B\u52A8\u6307\u7684\u662F\u901A\u8FC7\u8C03\u7528\u4EE5\u4E0B\u65B9\u6CD5\u6CE8\u518C\u7684 bean \uFF1A</span>
         <span class="token comment">//     registerSingleton(String beanName, Object singletonObject)</span>
         <span class="token comment">// \u8FD9\u4E0D\u662F\u91CD\u70B9\uFF0C\u89E3\u91CA\u53EA\u662F\u4E3A\u4E86\u4E0D\u8BA9\u5927\u5BB6\u7591\u60D1\u3002Spring \u4F1A\u5728\u540E\u9762&quot;\u624B\u52A8&quot;\u6CE8\u518C\u4E00\u4E9B Bean\uFF0C</span>
         <span class="token comment">// \u5982 &quot;environment&quot;\u3001&quot;systemProperties&quot; \u7B49 bean\uFF0C\u6211\u4EEC\u81EA\u5DF1\u4E5F\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u6CE8\u518C Bean \u5230\u5BB9\u5668\u4E2D\u7684</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>manualSingletonNames<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u8FD9\u4E2A\u4E0D\u91CD\u8981\uFF0C\u5728\u9884\u521D\u59CB\u5316\u7684\u65F6\u5019\u4F1A\u7528\u5230\uFF0C\u4E0D\u5FC5\u7BA1\u5B83\u3002</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>frozenBeanDefinitionNames <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>oldBeanDefinition <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">containsSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resetBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u7ED3\u4E00\u4E0B\uFF0C\u5230\u8FD9\u91CC\u5DF2\u7ECF\u521D\u59CB\u5316\u4E86 Bean \u5BB9\u5668\uFF0C<code>&lt;bean /&gt;</code> \u914D\u7F6E\u4E5F\u76F8\u5E94\u7684\u8F6C\u6362\u4E3A\u4E86\u4E00\u4E2A\u4E2A BeanDefinition\uFF0C\u7136\u540E\u6CE8\u518C\u4E86\u5404\u4E2A BeanDefinition \u5230\u6CE8\u518C\u4E2D\u5FC3\uFF0C\u5E76\u4E14\u53D1\u9001\u4E86\u6CE8\u518C\u4E8B\u4EF6\u3002</p><p>--------- \u5206\u5272\u7EBF ---------</p><p>\u5230\u8FD9\u91CC\u662F\u4E00\u4E2A\u5206\u6C34\u5CAD\uFF0C\u524D\u9762\u7684\u5185\u5BB9\u90FD\u8FD8\u7B97\u6BD4\u8F83\u7B80\u5355\uFF0C\u4E0D\u8FC7\u5E94\u8BE5\u4E5F\u6BD4\u8F83\u7E41\u7410\uFF0C\u5927\u5BB6\u8981\u6E05\u695A\u5730\u77E5\u9053\u524D\u9762\u90FD\u505A\u4E86\u54EA\u4E9B\u4E8B\u60C5\u3002</p><h3 id="bean-\u5BB9\u5668\u5B9E\u4F8B\u5316\u5B8C\u6210\u540E" tabindex="-1"><a class="header-anchor" href="#bean-\u5BB9\u5668\u5B9E\u4F8B\u5316\u5B8C\u6210\u540E" aria-hidden="true">#</a> Bean \u5BB9\u5668\u5B9E\u4F8B\u5316\u5B8C\u6210\u540E</h3><p>\u8BF4\u5230\u8FD9\u91CC\uFF0C\u6211\u4EEC\u56DE\u5230 refresh() \u65B9\u6CD5\uFF0C\u6211\u91CD\u65B0\u8D34\u4E86\u4E00\u904D\u4EE3\u7801\uFF0C\u770B\u770B\u6211\u4EEC\u8BF4\u5230\u54EA\u4E86\u3002\u662F\u7684\uFF0C\u6211\u4EEC\u624D\u8BF4\u5B8C obtainFreshBeanFactory() \u65B9\u6CD5\u3002</p><p>\u8003\u8651\u5230\u7BC7\u5E45\uFF0C\u8FD9\u91CC\u5F00\u59CB\u5927\u5E45\u7F29\u51CF\u6389\u6CA1\u5FC5\u8981\u8BE6\u7EC6\u4ECB\u7ECD\u7684\u90E8\u5206\uFF0C\u5927\u5BB6\u76F4\u63A5\u770B\u4E0B\u9762\u7684\u4EE3\u7801\u4E2D\u7684\u6CE8\u91CA\u5C31\u597D\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u6765\u4E2A\u9501\uFF0C\u4E0D\u7136 refresh() \u8FD8\u6CA1\u7ED3\u675F\uFF0C\u4F60\u53C8\u6765\u4E2A\u542F\u52A8\u6216\u9500\u6BC1\u5BB9\u5668\u7684\u64CD\u4F5C\uFF0C\u90A3\u4E0D\u5C31\u4E71\u5957\u4E86\u561B</span>
   <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>startupShutdownMonitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token comment">// \u51C6\u5907\u5DE5\u4F5C\uFF0C\u8BB0\u5F55\u4E0B\u5BB9\u5668\u7684\u542F\u52A8\u65F6\u95F4\u3001\u6807\u8BB0\u201C\u5DF2\u542F\u52A8\u201D\u72B6\u6001\u3001\u5904\u7406\u914D\u7F6E\u6587\u4EF6\u4E2D\u7684\u5360\u4F4D\u7B26</span>
      <span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
      <span class="token comment">// \u8FD9\u6B65\u6BD4\u8F83\u5173\u952E\uFF0C\u8FD9\u6B65\u5B8C\u6210\u540E\uFF0C\u914D\u7F6E\u6587\u4EF6\u5C31\u4F1A\u89E3\u6790\u6210\u4E00\u4E2A\u4E2A Bean \u5B9A\u4E49\uFF0C\u6CE8\u518C\u5230 BeanFactory \u4E2D\uFF0C</span>
      <span class="token comment">// \u5F53\u7136\uFF0C\u8FD9\u91CC\u8BF4\u7684 Bean \u8FD8\u6CA1\u6709\u521D\u59CB\u5316\uFF0C\u53EA\u662F\u914D\u7F6E\u4FE1\u606F\u90FD\u63D0\u53D6\u51FA\u6765\u4E86\uFF0C</span>
      <span class="token comment">// \u6CE8\u518C\u4E5F\u53EA\u662F\u5C06\u8FD9\u4E9B\u4FE1\u606F\u90FD\u4FDD\u5B58\u5230\u4E86\u6CE8\u518C\u4E2D\u5FC3(\u8BF4\u5230\u5E95\u6838\u5FC3\u662F\u4E00\u4E2A beanName-&gt; beanDefinition \u7684 map)</span>
      <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u8BBE\u7F6E BeanFactory \u7684\u7C7B\u52A0\u8F7D\u5668\uFF0C\u6DFB\u52A0\u51E0\u4E2A BeanPostProcessor\uFF0C\u624B\u52A8\u6CE8\u518C\u51E0\u4E2A\u7279\u6B8A\u7684 bean</span>
      <span class="token comment">// \u8FD9\u5757\u5F85\u4F1A\u4F1A\u5C55\u5F00\u8BF4</span>
      <span class="token function">prepareBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u3010\u8FD9\u91CC\u9700\u8981\u77E5\u9053 BeanFactoryPostProcessor \u8FD9\u4E2A\u77E5\u8BC6\u70B9\uFF0CBean \u5982\u679C\u5B9E\u73B0\u4E86\u6B64\u63A5\u53E3\uFF0C</span>
         <span class="token comment">// \u90A3\u4E48\u5728\u5BB9\u5668\u521D\u59CB\u5316\u4EE5\u540E\uFF0CSpring \u4F1A\u8D1F\u8D23\u8C03\u7528\u91CC\u9762\u7684 postProcessBeanFactory \u65B9\u6CD5\u3002\u3011</span>
        
         <span class="token comment">// \u8FD9\u91CC\u662F\u63D0\u4F9B\u7ED9\u5B50\u7C7B\u7684\u6269\u5C55\u70B9\uFF0C\u5230\u8FD9\u91CC\u7684\u65F6\u5019\uFF0C\u6240\u6709\u7684 Bean \u90FD\u52A0\u8F7D\u3001\u6CE8\u518C\u5B8C\u6210\u4E86\uFF0C\u4F46\u662F\u90FD\u8FD8\u6CA1\u6709\u521D\u59CB\u5316</span>
         <span class="token comment">// \u5177\u4F53\u7684\u5B50\u7C7B\u53EF\u4EE5\u5728\u8FD9\u6B65\u7684\u65F6\u5019\u6DFB\u52A0\u4E00\u4E9B\u7279\u6B8A\u7684 BeanFactoryPostProcessor \u7684\u5B9E\u73B0\u7C7B\u6216\u505A\u70B9\u4EC0\u4E48\u4E8B</span>
         <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">// \u8C03\u7528 BeanFactoryPostProcessor \u5404\u4E2A\u5B9E\u73B0\u7C7B\u7684 postProcessBeanFactory(factory) \u56DE\u8C03\u65B9\u6CD5</span>
         <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>          
         
          

         <span class="token comment">// \u6CE8\u518C BeanPostProcessor \u7684\u5B9E\u73B0\u7C7B\uFF0C\u6CE8\u610F\u770B\u548C BeanFactoryPostProcessor \u7684\u533A\u522B</span>
         <span class="token comment">// \u6B64\u63A5\u53E3\u4E24\u4E2A\u65B9\u6CD5: postProcessBeforeInitialization \u548C postProcessAfterInitialization</span>
         <span class="token comment">// \u4E24\u4E2A\u65B9\u6CD5\u5206\u522B\u5728 Bean \u521D\u59CB\u5316\u4E4B\u524D\u548C\u521D\u59CB\u5316\u4E4B\u540E\u5F97\u5230\u6267\u884C\u3002\u8FD9\u91CC\u4EC5\u4EC5\u662F\u6CE8\u518C\uFF0C\u4E4B\u540E\u4F1A\u770B\u5230\u56DE\u8C03\u8FD9\u4E24\u65B9\u6CD5\u7684\u65F6\u673A</span>
         <span class="token function">registerBeanPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u521D\u59CB\u5316\u5F53\u524D ApplicationContext \u7684 MessageSource\uFF0C\u56FD\u9645\u5316\u8FD9\u91CC\u5C31\u4E0D\u5C55\u5F00\u8BF4\u4E86\uFF0C\u4E0D\u7136\u6CA1\u5B8C\u6CA1\u4E86\u4E86</span>
         <span class="token function">initMessageSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u521D\u59CB\u5316\u5F53\u524D ApplicationContext \u7684\u4E8B\u4EF6\u5E7F\u64AD\u5668\uFF0C\u8FD9\u91CC\u4E5F\u4E0D\u5C55\u5F00\u4E86</span>
         <span class="token function">initApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u4ECE\u65B9\u6CD5\u540D\u5C31\u53EF\u4EE5\u77E5\u9053\uFF0C\u5178\u578B\u7684\u6A21\u677F\u65B9\u6CD5(\u94A9\u5B50\u65B9\u6CD5)\uFF0C\u4E0D\u5C55\u5F00\u8BF4</span>
         <span class="token comment">// \u5177\u4F53\u7684\u5B50\u7C7B\u53EF\u4EE5\u5728\u8FD9\u91CC\u521D\u59CB\u5316\u4E00\u4E9B\u7279\u6B8A\u7684 Bean\uFF08\u5728\u521D\u59CB\u5316 singleton beans \u4E4B\u524D\uFF09</span>
         <span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u6CE8\u518C\u4E8B\u4EF6\u76D1\u542C\u5668\uFF0C\u76D1\u542C\u5668\u9700\u8981\u5B9E\u73B0 ApplicationListener \u63A5\u53E3\u3002\u8FD9\u4E5F\u4E0D\u662F\u6211\u4EEC\u7684\u91CD\u70B9\uFF0C\u8FC7</span>
         <span class="token function">registerListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u91CD\u70B9\uFF0C\u91CD\u70B9\uFF0C\u91CD\u70B9</span>
         <span class="token comment">// \u521D\u59CB\u5316\u6240\u6709\u7684 singleton beans</span>
         <span class="token comment">//\uFF08lazy-init \u7684\u9664\u5916\uFF09</span>
         <span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u6700\u540E\uFF0C\u5E7F\u64AD\u4E8B\u4EF6\uFF0CApplicationContext \u521D\u59CB\u5316\u5B8C\u6210\uFF0C\u4E0D\u5C55\u5F00</span>
         <span class="token function">finishRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Exception encountered during context initialization - &quot;</span> <span class="token operator">+</span>
                  <span class="token string">&quot;cancelling refresh attempt: &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>

         <span class="token comment">// Destroy already created singletons to avoid dangling resources.</span>
         <span class="token comment">// \u9500\u6BC1\u5DF2\u7ECF\u521D\u59CB\u5316\u7684 singleton \u7684 Beans\uFF0C\u4EE5\u514D\u6709\u4E9B bean \u4F1A\u4E00\u76F4\u5360\u7528\u8D44\u6E90</span>
         <span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// Reset &#39;active&#39; flag.</span>
         <span class="token function">cancelRefresh</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u628A\u5F02\u5E38\u5F80\u5916\u629B</span>
         <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">finally</span> <span class="token punctuation">{</span>
         <span class="token comment">// Reset common introspection caches in Spring&#39;s core, since we</span>
         <span class="token comment">// might not ever need metadata for singleton beans anymore...</span>
         <span class="token function">resetCommonCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51C6\u5907-bean-\u5BB9\u5668-preparebeanfactory" tabindex="-1"><a class="header-anchor" href="#\u51C6\u5907-bean-\u5BB9\u5668-preparebeanfactory" aria-hidden="true">#</a> \u51C6\u5907 Bean \u5BB9\u5668: prepareBeanFactory</h3><p>\u4E4B\u524D\u6211\u4EEC\u8BF4\u8FC7\uFF0CSpring \u628A\u6211\u4EEC\u5728 xml \u914D\u7F6E\u7684 bean \u90FD\u6CE8\u518C\u4EE5\u540E\uFF0C\u4F1A&quot;\u624B\u52A8&quot;\u6CE8\u518C\u4E00\u4E9B\u7279\u6B8A\u7684 bean\u3002</p><p>\u8FD9\u91CC\u7B80\u5355\u4ECB\u7ECD\u4E0B prepareBeanFactory(factory) \u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Configure the factory&#39;s standard context characteristics,
 * such as the context&#39;s ClassLoader and post-processors.
 * <span class="token keyword">@param</span> <span class="token parameter">beanFactory</span> the BeanFactory to configure
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">prepareBeanFactory</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u8BBE\u7F6E BeanFactory \u7684\u7C7B\u52A0\u8F7D\u5668\uFF0C\u6211\u4EEC\u77E5\u9053 BeanFactory \u9700\u8981\u52A0\u8F7D\u7C7B\uFF0C\u4E5F\u5C31\u9700\u8981\u7C7B\u52A0\u8F7D\u5668\uFF0C</span>
   <span class="token comment">// \u8FD9\u91CC\u8BBE\u7F6E\u4E3A\u52A0\u8F7D\u5F53\u524D ApplicationContext \u7C7B\u7684\u7C7B\u52A0\u8F7D\u5668</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">setBeanClassLoader</span><span class="token punctuation">(</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
   <span class="token comment">// \u8BBE\u7F6E BeanExpressionResolver</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">setBeanExpressionResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StandardBeanExpressionResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBeanClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// </span>
   beanFactory<span class="token punctuation">.</span><span class="token function">addPropertyEditorRegistrar</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResourceEditorRegistrar</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u6DFB\u52A0\u4E00\u4E2A BeanPostProcessor\uFF0C\u8FD9\u4E2A processor \u6BD4\u8F83\u7B80\u5355\uFF1A</span>
   <span class="token comment">// \u5B9E\u73B0\u4E86 Aware \u63A5\u53E3\u7684 beans \u5728\u521D\u59CB\u5316\u7684\u65F6\u5019\uFF0C\u8FD9\u4E2A processor \u8D1F\u8D23\u56DE\u8C03\uFF0C</span>
   <span class="token comment">// \u8FD9\u4E2A\u6211\u4EEC\u5F88\u5E38\u7528\uFF0C\u5982\u6211\u4EEC\u4F1A\u4E3A\u4E86\u83B7\u53D6 ApplicationContext \u800C implement ApplicationContextAware</span>
   <span class="token comment">// \u6CE8\u610F\uFF1A\u5B83\u4E0D\u4EC5\u4EC5\u56DE\u8C03 ApplicationContextAware\uFF0C</span>
   <span class="token comment">//   \u8FD8\u4F1A\u8D1F\u8D23\u56DE\u8C03 EnvironmentAware\u3001ResourceLoaderAware \u7B49\uFF0C\u770B\u4E0B\u6E90\u7801\u5C31\u6E05\u695A\u4E86</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">addBeanPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ApplicationContextAwareProcessor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
   <span class="token comment">// \u4E0B\u9762\u51E0\u884C\u7684\u610F\u601D\u5C31\u662F\uFF0C\u5982\u679C\u67D0\u4E2A bean \u4F9D\u8D56\u4E8E\u4EE5\u4E0B\u51E0\u4E2A\u63A5\u53E3\u7684\u5B9E\u73B0\u7C7B\uFF0C\u5728\u81EA\u52A8\u88C5\u914D\u7684\u65F6\u5019\u5FFD\u7565\u5B83\u4EEC\uFF0C</span>
   <span class="token comment">// Spring \u4F1A\u901A\u8FC7\u5176\u4ED6\u65B9\u5F0F\u6765\u5904\u7406\u8FD9\u4E9B\u4F9D\u8D56\u3002</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">EnvironmentAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">EmbeddedValueResolverAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">ResourceLoaderAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEventPublisherAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">MessageSourceAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">ignoreDependencyInterface</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContextAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token doc-comment comment">/**
    * \u4E0B\u9762\u51E0\u884C\u5C31\u662F\u4E3A\u7279\u6B8A\u7684\u51E0\u4E2A bean \u8D4B\u503C\uFF0C\u5982\u679C\u6709 bean \u4F9D\u8D56\u4E86\u4EE5\u4E0B\u51E0\u4E2A\uFF0C\u4F1A\u6CE8\u5165\u8FD9\u8FB9\u76F8\u5E94\u7684\u503C\uFF0C
    * \u4E4B\u524D\u6211\u4EEC\u8BF4\u8FC7\uFF0C&quot;\u5F53\u524D ApplicationContext \u6301\u6709\u4E00\u4E2A BeanFactory&quot;\uFF0C\u8FD9\u91CC\u89E3\u91CA\u4E86\u7B2C\u4E00\u884C\u3002
    * ApplicationContext \u8FD8\u7EE7\u627F\u4E86 ResourceLoader\u3001ApplicationEventPublisher\u3001MessageSource
    * \u6240\u4EE5\u5BF9\u4E8E\u8FD9\u51E0\u4E2A\u4F9D\u8D56\uFF0C\u53EF\u4EE5\u8D4B\u503C\u4E3A this\uFF0C\u6CE8\u610F this \u662F\u4E00\u4E2A ApplicationContext
    * \u90A3\u8FD9\u91CC\u600E\u4E48\u6CA1\u770B\u5230\u4E3A MessageSource \u8D4B\u503C\u5462\uFF1F\u90A3\u662F\u56E0\u4E3A MessageSource \u88AB\u6CE8\u518C\u6210\u4E3A\u4E86\u4E00\u4E2A\u666E\u901A\u7684 bean
    */</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">registerResolvableDependency</span><span class="token punctuation">(</span><span class="token class-name">BeanFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">registerResolvableDependency</span><span class="token punctuation">(</span><span class="token class-name">ResourceLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">registerResolvableDependency</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEventPublisher</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">registerResolvableDependency</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u8FD9\u4E2A BeanPostProcessor \u4E5F\u5F88\u7B80\u5355\uFF0C\u5728 bean \u5B9E\u4F8B\u5316\u540E\uFF0C\u5982\u679C\u662F ApplicationListener \u7684\u5B50\u7C7B\uFF0C</span>
   <span class="token comment">// \u90A3\u4E48\u5C06\u5176\u6DFB\u52A0\u5230 listener \u5217\u8868\u4E2D\uFF0C\u53EF\u4EE5\u7406\u89E3\u6210\uFF1A\u6CE8\u518C \u4E8B\u4EF6\u76D1\u542C\u5668</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">addBeanPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ApplicationListenerDetector</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u8FD9\u91CC\u6D89\u53CA\u5230\u7279\u6B8A\u7684 bean\uFF0C\u540D\u4E3A\uFF1AloadTimeWeaver\uFF0C\u8FD9\u4E0D\u662F\u6211\u4EEC\u7684\u91CD\u70B9\uFF0C\u5FFD\u7565\u5B83</span>
   <span class="token comment">// tips: ltw \u662F AspectJ \u7684\u6982\u5FF5\uFF0C\u6307\u7684\u662F\u5728\u8FD0\u884C\u671F\u8FDB\u884C\u7EC7\u5165\uFF0C\u8FD9\u4E2A\u548C Spring AOP \u4E0D\u4E00\u6837\uFF0C</span>
   <span class="token comment">//    \u611F\u5174\u8DA3\u7684\u8BFB\u8005\u8BF7\u53C2\u8003\u6211\u5199\u7684\u5173\u4E8E AspectJ \u7684\u53E6\u4E00\u7BC7\u6587\u7AE0 https://www.javadoop.com/post/aspectj</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span>LOAD_TIME_WEAVER_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">addBeanPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LoadTimeWeaverAwareProcessor</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// Set a temporary ClassLoader for type matching.</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">setTempClassLoader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ContextTypeMatchClassLoader</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBeanClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token doc-comment comment">/**
    * \u4ECE\u4E0B\u9762\u51E0\u884C\u4EE3\u7801\u6211\u4EEC\u53EF\u4EE5\u77E5\u9053\uFF0CSpring \u5F80\u5F80\u5F88 &quot;\u667A\u80FD&quot; \u5C31\u662F\u56E0\u4E3A\u5B83\u4F1A\u5E2E\u6211\u4EEC\u9ED8\u8BA4\u6CE8\u518C\u4E00\u4E9B\u6709\u7528\u7684 bean\uFF0C
    * \u6211\u4EEC\u4E5F\u53EF\u4EE5\u9009\u62E9\u8986\u76D6
    */</span>
  
   <span class="token comment">// \u5982\u679C\u6CA1\u6709\u5B9A\u4E49 &quot;environment&quot; \u8FD9\u4E2A bean\uFF0C\u90A3\u4E48 Spring \u4F1A &quot;\u624B\u52A8&quot; \u6CE8\u518C\u4E00\u4E2A</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsLocalBean</span><span class="token punctuation">(</span>ENVIRONMENT_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span>ENVIRONMENT_BEAN_NAME<span class="token punctuation">,</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u5982\u679C\u6CA1\u6709\u5B9A\u4E49 &quot;systemProperties&quot; \u8FD9\u4E2A bean\uFF0C\u90A3\u4E48 Spring \u4F1A &quot;\u624B\u52A8&quot; \u6CE8\u518C\u4E00\u4E2A</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsLocalBean</span><span class="token punctuation">(</span>SYSTEM_PROPERTIES_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span>SYSTEM_PROPERTIES_BEAN_NAME<span class="token punctuation">,</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u5982\u679C\u6CA1\u6709\u5B9A\u4E49 &quot;systemEnvironment&quot; \u8FD9\u4E2A bean\uFF0C\u90A3\u4E48 Spring \u4F1A &quot;\u624B\u52A8&quot; \u6CE8\u518C\u4E00\u4E2A</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsLocalBean</span><span class="token punctuation">(</span>SYSTEM_ENVIRONMENT_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span>SYSTEM_ENVIRONMENT_BEAN_NAME<span class="token punctuation">,</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u8FD9\u5757\u4EE3\u7801\u4E2D\uFF0CSpring \u5BF9\u4E00\u4E9B\u7279\u6B8A\u7684 bean \u8FDB\u884C\u4E86\u5904\u7406\uFF0C\u8BFB\u8005\u5982\u679C\u6682\u65F6\u8FD8\u4E0D\u80FD\u6D88\u5316\u5B83\u4EEC\u4E5F\u6CA1\u6709\u5173\u7CFB\uFF0C\u6162\u6162\u5F80\u4E0B\u770B\u3002</p><h3 id="\u521D\u59CB\u5316\u6240\u6709\u7684-singleton-beans" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316\u6240\u6709\u7684-singleton-beans" aria-hidden="true">#</a> \u521D\u59CB\u5316\u6240\u6709\u7684 singleton beans</h3><p>\u6211\u4EEC\u7684\u91CD\u70B9\u5F53\u7136\u662F <code>finishBeanFactoryInitialization(beanFactory);</code> \u8FD9\u4E2A\u5DE8\u5934\u4E86\uFF0C\u8FD9\u91CC\u4F1A\u8D1F\u8D23\u521D\u59CB\u5316\u6240\u6709\u7684 singleton beans\u3002</p><p>\u6CE8\u610F\uFF0C\u540E\u9762\u7684\u63CF\u8FF0\u4E2D\uFF0C\u6211\u90FD\u4F1A\u4F7F\u7528<strong>\u521D\u59CB\u5316</strong>\u6216<strong>\u9884\u521D\u59CB\u5316</strong>\u6765\u4EE3\u8868\u8FD9\u4E2A\u9636\u6BB5\uFF0CSpring \u4F1A\u5728\u8FD9\u4E2A\u9636\u6BB5\u5B8C\u6210\u6240\u6709\u7684 singleton beans \u7684\u5B9E\u4F8B\u5316\u3002</p><p>\u6211\u4EEC\u6765\u603B\u7ED3\u4E00\u4E0B\uFF0C\u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u5E94\u8BE5\u8BF4 BeanFactory \u5DF2\u7ECF\u521B\u5EFA\u5B8C\u6210\uFF0C\u5E76\u4E14\u6240\u6709\u7684\u5B9E\u73B0\u4E86 BeanFactoryPostProcessor \u63A5\u53E3\u7684 Bean \u90FD\u5DF2\u7ECF\u521D\u59CB\u5316\u5E76\u4E14\u5176\u4E2D\u7684 postProcessBeanFactory(factory) \u65B9\u6CD5\u5DF2\u7ECF\u5F97\u5230\u56DE\u8C03\u6267\u884C\u4E86\u3002\u800C\u4E14 Spring \u5DF2\u7ECF\u201C\u624B\u52A8\u201D\u6CE8\u518C\u4E86\u4E00\u4E9B\u7279\u6B8A\u7684 Bean\uFF0C\u5982 <code>environment</code>\u3001<code>systemProperties</code> \u7B49\u3002</p><p>\u5269\u4E0B\u7684\u5C31\u662F\u521D\u59CB\u5316 singleton beans \u4E86\uFF0C\u6211\u4EEC\u77E5\u9053\u5B83\u4EEC\u662F\u5355\u4F8B\u7684\uFF0C\u5982\u679C\u6CA1\u6709\u8BBE\u7F6E\u61D2\u52A0\u8F7D\uFF0C\u90A3\u4E48 Spring \u4F1A\u5728\u63A5\u4E0B\u6765\u521D\u59CB\u5316\u6240\u6709\u7684 singleton beans\u3002</p><p>// AbstractApplicationContext.java 834</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u521D\u59CB\u5316\u5269\u4F59\u7684 singleton beans</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>

   <span class="token comment">// \u9996\u5148\uFF0C\u521D\u59CB\u5316\u540D\u5B57\u4E3A conversionService \u7684 Bean\u3002\u672C\u7740\u9001\u4F5B\u9001\u5230\u897F\u7684\u7CBE\u795E\uFF0C\u6211\u5728\u9644\u5F55\u4E2D\u7B80\u5355\u4ECB\u7ECD\u4E86\u4E00\u4E0B ConversionService\uFF0C\u56E0\u4E3A\u8FD9\u5B9E\u5728\u592A\u5B9E\u7528\u4E86</span>
   <span class="token comment">// \u4EC0\u4E48\uFF0C\u770B\u4EE3\u7801\u8FD9\u91CC\u6CA1\u6709\u521D\u59CB\u5316 Bean \u554A\uFF01</span>
   <span class="token comment">// \u6CE8\u610F\u4E86\uFF0C\u521D\u59CB\u5316\u7684\u52A8\u4F5C\u5305\u88C5\u5728 beanFactory.getBean(...) \u4E2D\uFF0C\u8FD9\u91CC\u5148\u4E0D\u8BF4\u7EC6\u8282\uFF0C\u5148\u5F80\u4E0B\u770B\u5427</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span>CONVERSION_SERVICE_BEAN_NAME<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
         beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>CONVERSION_SERVICE_BEAN_NAME<span class="token punctuation">,</span> <span class="token class-name">ConversionService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">setConversionService</span><span class="token punctuation">(</span>
            beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>CONVERSION_SERVICE_BEAN_NAME<span class="token punctuation">,</span> <span class="token class-name">ConversionService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// Register a default embedded value resolver if no bean post-processor</span>
   <span class="token comment">// (such as a PropertyPlaceholderConfigurer bean) registered any before:</span>
   <span class="token comment">// at this point, primarily for resolution in annotation attribute values.</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">hasEmbeddedValueResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      beanFactory<span class="token punctuation">.</span><span class="token function">addEmbeddedValueResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringValueResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token annotation punctuation">@Override</span>
         <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">resolveStringValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> strVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolvePlaceholders</span><span class="token punctuation">(</span>strVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// \u5148\u521D\u59CB\u5316 LoadTimeWeaverAware \u7C7B\u578B\u7684 Bean</span>
   <span class="token comment">// \u4E4B\u524D\u4E5F\u8BF4\u8FC7\uFF0C\u8FD9\u662F AspectJ \u76F8\u5173\u7684\u5185\u5BB9\uFF0C\u653E\u5FC3\u8DF3\u8FC7\u5427</span>
   <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> weaverAwareNames <span class="token operator">=</span> beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">LoadTimeWeaverAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> weaverAwareName <span class="token operator">:</span> weaverAwareNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">getBean</span><span class="token punctuation">(</span>weaverAwareName<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// Stop using the temporary ClassLoader for type matching.</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">setTempClassLoader</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u6CA1\u4EC0\u4E48\u522B\u7684\u76EE\u7684\uFF0C\u56E0\u4E3A\u5230\u8FD9\u4E00\u6B65\u7684\u65F6\u5019\uFF0CSpring \u5DF2\u7ECF\u5F00\u59CB\u9884\u521D\u59CB\u5316 singleton beans \u4E86\uFF0C</span>
   <span class="token comment">// \u80AF\u5B9A\u4E0D\u5E0C\u671B\u8FD9\u4E2A\u65F6\u5019\u8FD8\u51FA\u73B0 bean \u5B9A\u4E49\u89E3\u6790\u3001\u52A0\u8F7D\u3001\u6CE8\u518C\u3002</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">freezeConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u5F00\u59CB\u521D\u59CB\u5316</span>
   beanFactory<span class="token punctuation">.</span><span class="token function">preInstantiateSingletons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u6700\u540E\u4E00\u884C\u5F80\u91CC\u770B\uFF0C\u6211\u4EEC\u5C31\u53C8\u56DE\u5230 DefaultListableBeanFactory \u8FD9\u4E2A\u7C7B\u4E86\uFF0C\u8FD9\u4E2A\u7C7B\u5927\u5BB6\u5E94\u8BE5\u90FD\u4E0D\u964C\u751F\u4E86\u5427\u3002</p><h4 id="preinstantiatesingletons" tabindex="-1"><a class="header-anchor" href="#preinstantiatesingletons" aria-hidden="true">#</a> preInstantiateSingletons</h4><p>// DefaultListableBeanFactory 728</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">preInstantiateSingletons</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Pre-instantiating singletons in &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// this.beanDefinitionNames \u4FDD\u5B58\u4E86\u6240\u6709\u7684 beanNames</span>
   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> beanNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u4E0B\u9762\u8FD9\u4E2A\u5FAA\u73AF\uFF0C\u89E6\u53D1\u6240\u6709\u7684\u975E\u61D2\u52A0\u8F7D\u7684 singleton beans \u7684\u521D\u59CB\u5316\u64CD\u4F5C</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     
      <span class="token comment">// \u5408\u5E76\u7236 Bean \u4E2D\u7684\u914D\u7F6E\uFF0C\u6CE8\u610F &lt;bean id=&quot;&quot; class=&quot;&quot; parent=&quot;&quot; /&gt; \u4E2D\u7684 parent\uFF0C\u7528\u7684\u4E0D\u591A\u5427\uFF0C</span>
      <span class="token comment">// \u8003\u8651\u5230\u8FD9\u53EF\u80FD\u4F1A\u5F71\u54CD\u5927\u5BB6\u7684\u7406\u89E3\uFF0C\u6211\u5728\u9644\u5F55\u4E2D\u89E3\u91CA\u4E86\u4E00\u4E0B &quot;Bean \u7EE7\u627F&quot;\uFF0C\u4E0D\u4E86\u89E3\u7684\u8BF7\u5230\u9644\u5F55\u4E2D\u770B\u4E00\u4E0B</span>
      <span class="token class-name">RootBeanDefinition</span> bd <span class="token operator">=</span> <span class="token function">getMergedLocalBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
     
      <span class="token comment">// \u975E\u62BD\u8C61\u3001\u975E\u61D2\u52A0\u8F7D\u7684 singletons\u3002\u5982\u679C\u914D\u7F6E\u4E86 &#39;abstract = true&#39;\uFF0C\u90A3\u662F\u4E0D\u9700\u8981\u521D\u59CB\u5316\u7684</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bd<span class="token punctuation">.</span><span class="token function">isAbstract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> bd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>bd<span class="token punctuation">.</span><span class="token function">isLazyInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u5904\u7406 FactoryBean(\u8BFB\u8005\u5982\u679C\u4E0D\u719F\u6089 FactoryBean\uFF0C\u8BF7\u79FB\u6B65\u9644\u5F55\u533A\u4E86\u89E3)</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFactoryBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// FactoryBean \u7684\u8BDD\uFF0C\u5728 beanName \u524D\u9762\u52A0\u4E0A \u2018&amp;\u2019 \u7B26\u53F7\u3002\u518D\u8C03\u7528 getBean\uFF0CgetBean \u65B9\u6CD5\u522B\u6025</span>
            <span class="token keyword">final</span> <span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> factory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token function">getBean</span><span class="token punctuation">(</span>FACTORY_BEAN_PREFIX <span class="token operator">+</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5224\u65AD\u5F53\u524D FactoryBean \u662F\u5426\u662F SmartFactoryBean \u7684\u5B9E\u73B0\uFF0C\u6B64\u5904\u5FFD\u7565\uFF0C\u76F4\u63A5\u8DF3\u8FC7</span>
            <span class="token keyword">boolean</span> isEagerInit<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> factory <span class="token keyword">instanceof</span> <span class="token class-name">SmartFactoryBean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               isEagerInit <span class="token operator">=</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token annotation punctuation">@Override</span>
                  <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                     <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartFactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> factory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEagerInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
               <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
               isEagerInit <span class="token operator">=</span> <span class="token punctuation">(</span>factory <span class="token keyword">instanceof</span> <span class="token class-name">SmartFactoryBean</span> <span class="token operator">&amp;&amp;</span>
                     <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartFactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> factory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEagerInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isEagerInit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               
               <span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5BF9\u4E8E\u666E\u901A\u7684 Bean\uFF0C\u53EA\u8981\u8C03\u7528 getBean(beanName) \u8FD9\u4E2A\u65B9\u6CD5\u5C31\u53EF\u4EE5\u8FDB\u884C\u521D\u59CB\u5316\u4E86</span>
            <span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// \u5230\u8FD9\u91CC\u8BF4\u660E\u6240\u6709\u7684\u975E\u61D2\u52A0\u8F7D\u7684 singleton beans \u5DF2\u7ECF\u5B8C\u6210\u4E86\u521D\u59CB\u5316</span>
   <span class="token comment">// \u5982\u679C\u6211\u4EEC\u5B9A\u4E49\u7684 bean \u662F\u5B9E\u73B0\u4E86 SmartInitializingSingleton \u63A5\u53E3\u7684\uFF0C\u90A3\u4E48\u5728\u8FD9\u91CC\u5F97\u5230\u56DE\u8C03\uFF0C\u5FFD\u7565</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Object</span> singletonInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>singletonInstance <span class="token keyword">instanceof</span> <span class="token class-name">SmartInitializingSingleton</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">final</span> <span class="token class-name">SmartInitializingSingleton</span> smartSingleton <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SmartInitializingSingleton</span><span class="token punctuation">)</span> singletonInstance<span class="token punctuation">;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token annotation punctuation">@Override</span>
               <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  smartSingleton<span class="token punctuation">.</span><span class="token function">afterSingletonsInstantiated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">else</span> <span class="token punctuation">{</span>
            smartSingleton<span class="token punctuation">.</span><span class="token function">afterSingletonsInstantiated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u5C31\u8FDB\u5165\u5230 getBean(beanName) \u65B9\u6CD5\u4E86\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u6211\u4EEC\u7ECF\u5E38\u7528\u6765\u4ECE BeanFactory \u4E2D\u83B7\u53D6\u4E00\u4E2A Bean\uFF0C\u800C\u521D\u59CB\u5316\u7684\u8FC7\u7A0B\u4E5F\u5C01\u88C5\u5230\u4E86\u8FD9\u4E2A\u65B9\u6CD5\u91CC\u3002</p><h4 id="getbean" tabindex="-1"><a class="header-anchor" href="#getbean" aria-hidden="true">#</a> getBean</h4><p>\u5728\u7EE7\u7EED\u524D\u8FDB\u4E4B\u524D\uFF0C\u8BFB\u8005\u5E94\u8BE5\u5177\u5907 FactoryBean \u7684\u77E5\u8BC6\uFF0C\u5982\u679C\u8BFB\u8005\u8FD8\u4E0D\u719F\u6089\uFF0C\u8BF7\u79FB\u6B65\u9644\u5F55\u90E8\u5206\u4E86\u89E3 FactoryBean\u3002</p><p>// AbstractBeanFactory 196</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6211\u4EEC\u5728\u5256\u6790\u521D\u59CB\u5316 Bean \u7684\u8FC7\u7A0B\uFF0C\u4F46\u662F getBean \u65B9\u6CD5\u6211\u4EEC\u7ECF\u5E38\u662F\u7528\u6765\u4ECE\u5BB9\u5668\u4E2D\u83B7\u53D6 Bean \u7528\u7684\uFF0C\u6CE8\u610F\u5207\u6362\u601D\u8DEF\uFF0C</span>
<span class="token comment">// \u5DF2\u7ECF\u521D\u59CB\u5316\u8FC7\u4E86\u5C31\u4ECE\u5BB9\u5668\u4E2D\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5426\u5219\u5C31\u5148\u521D\u59CB\u5316\u518D\u8FD4\u56DE</span>
<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">protected</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>
      <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> requiredType<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">,</span> <span class="token keyword">boolean</span> typeCheckOnly<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u83B7\u53D6\u4E00\u4E2A \u201C\u6B63\u7EDF\u7684\u201D beanName\uFF0C\u5904\u7406\u4E24\u79CD\u60C5\u51B5\uFF0C\u4E00\u4E2A\u662F\u524D\u9762\u8BF4\u7684 FactoryBean(\u524D\u9762\u5E26 \u2018&amp;\u2019)\uFF0C</span>
   <span class="token comment">// \u4E00\u4E2A\u662F\u522B\u540D\u95EE\u9898\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u65B9\u6CD5\u662F getBean\uFF0C\u83B7\u53D6 Bean \u7528\u7684\uFF0C\u4F60\u8981\u662F\u4F20\u4E00\u4E2A\u522B\u540D\u8FDB\u6765\uFF0C\u662F\u5B8C\u5168\u53EF\u4EE5\u7684</span>
   <span class="token keyword">final</span> <span class="token class-name">String</span> beanName <span class="token operator">=</span> <span class="token function">transformedBeanName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
   <span class="token comment">// \u6CE8\u610F\u8DDF\u7740\u8FD9\u4E2A\uFF0C\u8FD9\u4E2A\u662F\u8FD4\u56DE\u503C</span>
   <span class="token class-name">Object</span> bean<span class="token punctuation">;</span> 

   <span class="token comment">// \u68C0\u67E5\u4E0B\u662F\u4E0D\u662F\u5DF2\u7ECF\u521B\u5EFA\u8FC7\u4E86</span>
   <span class="token class-name">Object</span> sharedInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
   <span class="token comment">// \u8FD9\u91CC\u8BF4\u4E0B args \u5457\uFF0C\u867D\u7136\u770B\u4E0A\u53BB\u4E00\u70B9\u4E0D\u91CD\u8981\u3002\u524D\u9762\u6211\u4EEC\u4E00\u8DEF\u8FDB\u6765\u7684\u65F6\u5019\u90FD\u662F getBean(beanName)\uFF0C</span>
   <span class="token comment">// \u6240\u4EE5 args \u4F20\u53C2\u5176\u5B9E\u662F null \u7684\uFF0C\u4F46\u662F\u5982\u679C args \u4E0D\u4E3A\u7A7A\u7684\u65F6\u5019\uFF0C\u90A3\u4E48\u610F\u5473\u7740\u8C03\u7528\u65B9\u4E0D\u662F\u5E0C\u671B\u83B7\u53D6 Bean\uFF0C\u800C\u662F\u521B\u5EFA Bean</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>sharedInstance <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> args <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSingletonCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">else</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Returning cached instance of singleton bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u4E0B\u9762\u8FD9\u4E2A\u65B9\u6CD5\uFF1A\u5982\u679C\u662F\u666E\u901A Bean \u7684\u8BDD\uFF0C\u76F4\u63A5\u8FD4\u56DE sharedInstance\uFF0C</span>
      <span class="token comment">// \u5982\u679C\u662F FactoryBean \u7684\u8BDD\uFF0C\u8FD4\u56DE\u5B83\u521B\u5EFA\u7684\u90A3\u4E2A\u5B9E\u4F8B\u5BF9\u8C61</span>
      <span class="token comment">// (FactoryBean \u77E5\u8BC6\uFF0C\u8BFB\u8005\u82E5\u4E0D\u6E05\u695A\u8BF7\u79FB\u6B65\u9644\u5F55)</span>
      bean <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>sharedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPrototypeCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u521B\u5EFA\u8FC7\u4E86\u6B64 beanName \u7684 prototype \u7C7B\u578B\u7684 bean\uFF0C\u90A3\u4E48\u629B\u5F02\u5E38\uFF0C</span>
         <span class="token comment">// \u5F80\u5F80\u662F\u56E0\u4E3A\u9677\u5165\u4E86\u5FAA\u73AF\u5F15\u7528</span>
         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCurrentlyInCreationException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u68C0\u67E5\u4E00\u4E0B\u8FD9\u4E2A BeanDefinition \u5728\u5BB9\u5668\u4E2D\u662F\u5426\u5B58\u5728</span>
      <span class="token class-name">BeanFactory</span> parentBeanFactory <span class="token operator">=</span> <span class="token function">getParentBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>parentBeanFactory <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">containsBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u5982\u679C\u5F53\u524D\u5BB9\u5668\u4E0D\u5B58\u5728\u8FD9\u4E2A BeanDefinition\uFF0C\u8BD5\u8BD5\u7236\u5BB9\u5668\u4E2D\u6709\u6CA1\u6709</span>
         <span class="token class-name">String</span> nameToLookup <span class="token operator">=</span> <span class="token function">originalBeanName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>args <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8FD4\u56DE\u7236\u5BB9\u5668\u7684\u67E5\u8BE2\u7ED3\u679C</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> parentBeanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>nameToLookup<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// No args -&gt; delegate to standard getBean method.</span>
            <span class="token keyword">return</span> parentBeanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>nameToLookup<span class="token punctuation">,</span> requiredType<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>typeCheckOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// typeCheckOnly \u4E3A false\uFF0C\u5C06\u5F53\u524D beanName \u653E\u5165\u4E00\u4E2A alreadyCreated \u7684 Set \u96C6\u5408\u4E2D\u3002</span>
         <span class="token function">markBeanAsCreated</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">/*
       * \u7A0D\u7A0D\u603B\u7ED3\u4E00\u4E0B\uFF1A
       * \u5230\u8FD9\u91CC\u7684\u8BDD\uFF0C\u8981\u51C6\u5907\u521B\u5EFA Bean \u4E86\uFF0C\u5BF9\u4E8E singleton \u7684 Bean \u6765\u8BF4\uFF0C\u5BB9\u5668\u4E2D\u8FD8\u6CA1\u521B\u5EFA\u8FC7\u6B64 Bean\uFF1B
       * \u5BF9\u4E8E prototype \u7684 Bean \u6765\u8BF4\uFF0C\u672C\u6765\u5C31\u662F\u8981\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684 Bean\u3002
       */</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> mbd <span class="token operator">=</span> <span class="token function">getMergedLocalBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token function">checkMergedBeanDefinition</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">// \u5148\u521D\u59CB\u5316\u4F9D\u8D56\u7684\u6240\u6709 Bean\uFF0C\u8FD9\u4E2A\u5F88\u597D\u7406\u89E3\u3002</span>
         <span class="token comment">// \u6CE8\u610F\uFF0C\u8FD9\u91CC\u7684\u4F9D\u8D56\u6307\u7684\u662F depends-on \u4E2D\u5B9A\u4E49\u7684\u4F9D\u8D56</span>
         <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dependsOn <span class="token operator">=</span> mbd<span class="token punctuation">.</span><span class="token function">getDependsOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>dependsOn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> dep <span class="token operator">:</span> dependsOn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token comment">// \u68C0\u67E5\u662F\u4E0D\u662F\u6709\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u8FD9\u91CC\u7684\u5FAA\u73AF\u4F9D\u8D56\u548C\u6211\u4EEC\u524D\u9762\u8BF4\u7684\u5FAA\u73AF\u4F9D\u8D56\u53C8\u4E0D\u4E00\u6837\uFF0C\u8FD9\u91CC\u80AF\u5B9A\u662F\u4E0D\u5141\u8BB8\u51FA\u73B0\u7684\uFF0C\u4E0D\u7136\u8981\u4E71\u5957\u4E86\uFF0C\u8BFB\u8005\u60F3\u4E00\u4E0B\u5C31\u77E5\u9053\u4E86</span>
               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDependent</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> dep<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span>
                        <span class="token string">&quot;Circular depends-on relationship between &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39; and &#39;&quot;</span> <span class="token operator">+</span> dep <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
               <span class="token comment">// \u6CE8\u518C\u4E00\u4E0B\u4F9D\u8D56\u5173\u7CFB</span>
               <span class="token function">registerDependentBean</span><span class="token punctuation">(</span>dep<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token comment">// \u5148\u521D\u59CB\u5316\u88AB\u4F9D\u8D56\u9879</span>
               <span class="token function">getBean</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>

         <span class="token comment">// \u5982\u679C\u662F singleton scope \u7684\uFF0C\u521B\u5EFA singleton \u7684\u5B9E\u4F8B</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sharedInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ObjectFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token annotation punctuation">@Override</span>
               <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
                  <span class="token keyword">try</span> <span class="token punctuation">{</span>
                     <span class="token comment">// \u6267\u884C\u521B\u5EFA Bean\uFF0C\u8BE6\u60C5\u540E\u9762\u518D\u8BF4</span>
                     <span class="token keyword">return</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
                  <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                     <span class="token function">destroySingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                     <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
               <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bean <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>sharedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>

         <span class="token comment">// \u5982\u679C\u662F prototype scope \u7684\uFF0C\u521B\u5EFA prototype \u7684\u5B9E\u4F8B</span>
         <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isPrototype</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// It&#39;s a prototype -&gt; create a new instance.</span>
            <span class="token class-name">Object</span> prototypeInstance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
               <span class="token function">beforePrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token comment">// \u6267\u884C\u521B\u5EFA Bean</span>
               prototypeInstance <span class="token operator">=</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">finally</span> <span class="token punctuation">{</span>
               <span class="token function">afterPrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            bean <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>prototypeInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>

         <span class="token comment">// \u5982\u679C\u4E0D\u662F singleton \u548C prototype \u7684\u8BDD\uFF0C\u9700\u8981\u59D4\u6258\u7ED9\u76F8\u5E94\u7684\u5B9E\u73B0\u7C7B\u6765\u5904\u7406</span>
         <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> scopeName <span class="token operator">=</span> mbd<span class="token punctuation">.</span><span class="token function">getScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">Scope</span> scope <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scopes<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>scopeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>scope <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;No Scope registered for scope name &#39;&quot;</span> <span class="token operator">+</span> scopeName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
               <span class="token class-name">Object</span> scopedInstance <span class="token operator">=</span> scope<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ObjectFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token annotation punctuation">@Override</span>
                  <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
                     <span class="token function">beforePrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                     <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u6267\u884C\u521B\u5EFA Bean</span>
                        <span class="token keyword">return</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                     <span class="token punctuation">}</span>
                     <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        <span class="token function">afterPrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                     <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span>
               <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               bean <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>scopedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span>
                     <span class="token string">&quot;Scope &#39;&quot;</span> <span class="token operator">+</span> scopeName <span class="token operator">+</span> <span class="token string">&quot;&#39; is not active for the current thread; consider &quot;</span> <span class="token operator">+</span>
                     <span class="token string">&quot;defining a scoped proxy for this bean if you intend to refer to it from a singleton&quot;</span><span class="token punctuation">,</span>
                     ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">cleanupAfterBeanCreationFailure</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// \u6700\u540E\uFF0C\u68C0\u67E5\u4E00\u4E0B\u7C7B\u578B\u5BF9\u4E0D\u5BF9\uFF0C\u4E0D\u5BF9\u7684\u8BDD\u5C31\u629B\u5F02\u5E38\uFF0C\u5BF9\u7684\u8BDD\u5C31\u8FD4\u56DE\u4E86</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>requiredType <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> bean <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>requiredType<span class="token punctuation">.</span><span class="token function">isInstance</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> <span class="token function">getTypeConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">convertIfNecessary</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> requiredType<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TypeMismatchException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to convert bean &#39;&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;&#39; to required type &#39;&quot;</span> <span class="token operator">+</span>
                  <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">getQualifiedName</span><span class="token punctuation">(</span>requiredType<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanNotOfRequiredTypeException</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> requiredType<span class="token punctuation">,</span> bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> bean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u5BB6\u5E94\u8BE5\u4E5F\u731C\u5230\u4E86\uFF0C\u63A5\u4E0B\u6765\u5F53\u7136\u662F\u5206\u6790 createBean \u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token class-name">Object</span> <span class="token function">createBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7B2C\u4E09\u4E2A\u53C2\u6570 args \u6570\u7EC4\u4EE3\u8868\u521B\u5EFA\u5B9E\u4F8B\u9700\u8981\u7684\u53C2\u6570\uFF0C\u4E0D\u5C31\u662F\u7ED9\u6784\u9020\u65B9\u6CD5\u7528\u7684\u53C2\u6570\uFF0C\u6216\u8005\u662F\u5DE5\u5382 Bean \u7684\u53C2\u6570\u561B\uFF0C\u4E0D\u8FC7\u8981\u6CE8\u610F\uFF0C\u5728\u6211\u4EEC\u7684\u521D\u59CB\u5316\u9636\u6BB5\uFF0Cargs \u662F null\u3002</p><p>\u8FD9\u56DE\u6211\u4EEC\u8981\u5230\u4E00\u4E2A\u65B0\u7684\u7C7B\u4E86 AbstractAutowireCapableBeanFactory\uFF0C\u770B\u7C7B\u540D\uFF0CAutowireCapable\uFF1F\u7C7B\u540D\u662F\u4E0D\u662F\u4E5F\u8BF4\u660E\u4E86\u70B9\u95EE\u9898\u4E86\u3002</p><p>\u4E3B\u8981\u662F\u4E3A\u4E86\u4EE5\u4E0B\u573A\u666F\uFF0C\u91C7\u7528 @Autowired \u6CE8\u89E3\u6CE8\u5165\u5C5E\u6027\u503C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MessageServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">MessageService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>
  
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>messageService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.javadoop.example.MessageServiceImpl<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u8FD9\u79CD\u5C5E\u4E8E\u6DF7\u7528\u4E86 xml \u548C \u6CE8\u89E3 \u4E24\u79CD\u65B9\u5F0F\u7684\u914D\u7F6E\u65B9\u5F0F\uFF0CSpring \u4F1A\u5904\u7406\u8FD9\u79CD\u60C5\u51B5\u3002</p><p>\u597D\u4E86\uFF0C\u8BFB\u8005\u8981\u77E5\u9053\u8FD9\u4E48\u56DE\u4E8B\u5C31\u53EF\u4EE5\u4E86\uFF0C\u7EE7\u7EED\u5411\u524D\u3002</p><p>// AbstractAutowireCapableBeanFactory 447</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Central method of this class: creates a bean instance,
 * populates the bean instance, applies post-processors, etc.
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">doCreateBean</span></span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">createBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanCreationException</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Creating instance of bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token class-name">RootBeanDefinition</span> mbdToUse <span class="token operator">=</span> mbd<span class="token punctuation">;</span>

   <span class="token comment">// \u786E\u4FDD BeanDefinition \u4E2D\u7684 Class \u88AB\u52A0\u8F7D</span>
   <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> resolvedClass <span class="token operator">=</span> <span class="token function">resolveBeanClass</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>resolvedClass <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">hasBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mbd<span class="token punctuation">.</span><span class="token function">getBeanClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      mbdToUse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span>mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      mbdToUse<span class="token punctuation">.</span><span class="token function">setBeanClass</span><span class="token punctuation">(</span>resolvedClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// \u51C6\u5907\u65B9\u6CD5\u8986\u5199\uFF0C\u8FD9\u91CC\u53C8\u6D89\u53CA\u5230\u4E00\u4E2A\u6982\u5FF5\uFF1AMethodOverrides\uFF0C\u5B83\u6765\u81EA\u4E8E bean \u5B9A\u4E49\u4E2D\u7684 &lt;lookup-method /&gt; </span>
   <span class="token comment">// \u548C &lt;replaced-method /&gt;\uFF0C\u5982\u679C\u8BFB\u8005\u611F\u5174\u8DA3\uFF0C\u56DE\u5230 bean \u89E3\u6790\u7684\u5730\u65B9\u770B\u770B\u5BF9\u8FD9\u4E24\u4E2A\u6807\u7B7E\u7684\u89E3\u6790\u3002</span>
   <span class="token comment">// \u6211\u5728\u9644\u5F55\u4E2D\u4E5F\u5BF9\u8FD9\u4E24\u4E2A\u6807\u7B7E\u7684\u76F8\u5173\u77E5\u8BC6\u70B9\u8FDB\u884C\u4E86\u4ECB\u7ECD\uFF0C\u8BFB\u8005\u53EF\u4EE5\u79FB\u6B65\u53BB\u770B\u770B</span>
   <span class="token keyword">try</span> <span class="token punctuation">{</span>
      mbdToUse<span class="token punctuation">.</span><span class="token function">prepareMethodOverrides</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionValidationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>mbdToUse<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            beanName<span class="token punctuation">,</span> <span class="token string">&quot;Validation of method overrides failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8BA9 InstantiationAwareBeanPostProcessor \u5728\u8FD9\u4E00\u6B65\u6709\u673A\u4F1A\u8FD4\u56DE\u4EE3\u7406\uFF0C</span>
      <span class="token comment">// \u5728 \u300ASpring AOP \u6E90\u7801\u5206\u6790\u300B\u90A3\u7BC7\u6587\u7AE0\u4E2D\u6709\u89E3\u91CA\uFF0C\u8FD9\u91CC\u5148\u8DF3\u8FC7</span>
      <span class="token class-name">Object</span> bean <span class="token operator">=</span> <span class="token function">resolveBeforeInstantiation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbdToUse<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> bean<span class="token punctuation">;</span> 
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>mbdToUse<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span>
            <span class="token string">&quot;BeanPostProcessor before instantiation of bean failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u91CD\u5934\u620F\uFF0C\u521B\u5EFA bean</span>
   <span class="token class-name">Object</span> beanInstance <span class="token operator">=</span> <span class="token function">doCreateBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbdToUse<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Finished creating instance of bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> beanInstance<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u521B\u5EFA-bean" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-bean" aria-hidden="true">#</a> \u521B\u5EFA Bean</h4><p>\u6211\u4EEC\u7EE7\u7EED\u5F80\u91CC\u770B doCreateBean \u8FD9\u4E2A\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Actually create the specified bean. Pre-creation processing has already happened
 * at this point, e.g. checking <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">postProcessBeforeInstantiation</span></span><span class="token punctuation">}</span> callbacks.
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Differentiates between default bean instantiation, use of a
 * factory method, and autowiring a constructor.
 * <span class="token keyword">@param</span> <span class="token parameter">beanName</span> the name of the bean
 * <span class="token keyword">@param</span> <span class="token parameter">mbd</span> the merged bean definition for the bean
 * <span class="token keyword">@param</span> <span class="token parameter">args</span> explicit arguments to use for constructor or factory method invocation
 * <span class="token keyword">@return</span> a new instance of the bean
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">BeanCreationException</span></span> if the bean could not be created
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">instantiateBean</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">instantiateUsingFactoryMethod</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">autowireConstructor</span></span>
 */</span>
<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">doCreateBean</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">BeanCreationException</span> <span class="token punctuation">{</span>

   <span class="token comment">// Instantiate the bean.</span>
   <span class="token class-name">BeanWrapper</span> instanceWrapper <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      instanceWrapper <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>factoryBeanInstanceCache<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>instanceWrapper <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8BF4\u660E\u4E0D\u662F FactoryBean\uFF0C\u8FD9\u91CC\u5B9E\u4F8B\u5316 Bean\uFF0C\u8FD9\u91CC\u975E\u5E38\u5173\u952E\uFF0C\u7EC6\u8282\u4E4B\u540E\u518D\u8BF4</span>
      instanceWrapper <span class="token operator">=</span> <span class="token function">createBeanInstance</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u8FD9\u4E2A\u5C31\u662F Bean \u91CC\u9762\u7684 \u6211\u4EEC\u5B9A\u4E49\u7684\u7C7B \u7684\u5B9E\u4F8B\uFF0C\u5F88\u591A\u5730\u65B9\u6211\u76F4\u63A5\u63CF\u8FF0\u6210 &quot;bean \u5B9E\u4F8B&quot;</span>
   <span class="token keyword">final</span> <span class="token class-name">Object</span> bean <span class="token operator">=</span> <span class="token punctuation">(</span>instanceWrapper <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> instanceWrapper<span class="token punctuation">.</span><span class="token function">getWrappedInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u7C7B\u578B</span>
   <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanType <span class="token operator">=</span> <span class="token punctuation">(</span>instanceWrapper <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> instanceWrapper<span class="token punctuation">.</span><span class="token function">getWrappedClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   mbd<span class="token punctuation">.</span>resolvedTargetType <span class="token operator">=</span> beanType<span class="token punctuation">;</span>

   <span class="token comment">// \u5EFA\u8BAE\u8DF3\u8FC7\u5427\uFF0C\u6D89\u53CA\u63A5\u53E3\uFF1AMergedBeanDefinitionPostProcessor</span>
   <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span>postProcessingLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mbd<span class="token punctuation">.</span>postProcessed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// MergedBeanDefinitionPostProcessor\uFF0C\u8FD9\u4E2A\u6211\u771F\u4E0D\u5C55\u5F00\u8BF4\u4E86\uFF0C\u76F4\u63A5\u8DF3\u8FC7\u5427\uFF0C\u5F88\u5C11\u7528\u7684</span>
            <span class="token function">applyMergedBeanDefinitionPostProcessors</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanType<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span>
                  <span class="token string">&quot;Post-processing of merged bean definition failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         mbd<span class="token punctuation">.</span>postProcessed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// Eagerly cache singletons to be able to resolve circular references</span>
   <span class="token comment">// even when triggered by lifecycle interfaces like BeanFactoryAware.</span>
   <span class="token comment">// \u4E0B\u9762\u8FD9\u5757\u4EE3\u7801\u662F\u4E3A\u4E86\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u7684\u95EE\u9898\uFF0C\u4EE5\u540E\u6709\u65F6\u95F4\uFF0C\u6211\u518D\u5BF9\u5FAA\u73AF\u4F9D\u8D56\u8FD9\u4E2A\u95EE\u9898\u8FDB\u884C\u89E3\u6790\u5427</span>
   <span class="token keyword">boolean</span> earlySingletonExposure <span class="token operator">=</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>allowCircularReferences <span class="token operator">&amp;&amp;</span>
         <span class="token function">isSingletonCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonExposure<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Eagerly caching bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
               <span class="token string">&quot;&#39; to allow for resolving potential circular references&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">addSingletonFactory</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ObjectFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token annotation punctuation">@Override</span>
         <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// Initialize the bean instance.</span>
   <span class="token class-name">Object</span> exposedObject <span class="token operator">=</span> bean<span class="token punctuation">;</span>
   <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u4E00\u6B65\u4E5F\u662F\u975E\u5E38\u5173\u952E\u7684\uFF0C\u8FD9\u4E00\u6B65\u8D1F\u8D23\u5C5E\u6027\u88C5\u914D\uFF0C\u56E0\u4E3A\u524D\u9762\u7684\u5B9E\u4F8B\u53EA\u662F\u5B9E\u4F8B\u5316\u4E86\uFF0C\u5E76\u6CA1\u6709\u8BBE\u503C\uFF0C\u8FD9\u91CC\u5C31\u662F\u8BBE\u503C</span>
      <span class="token function">populateBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> instanceWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>exposedObject <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u8FD8\u8BB0\u5F97 init-method \u5417\uFF1F\u8FD8\u6709 InitializingBean \u63A5\u53E3\uFF1F\u8FD8\u6709 BeanPostProcessor \u63A5\u53E3\uFF1F</span>
         <span class="token comment">// \u8FD9\u91CC\u5C31\u662F\u5904\u7406 bean \u521D\u59CB\u5316\u5B8C\u6210\u540E\u7684\u5404\u79CD\u56DE\u8C03</span>
         exposedObject <span class="token operator">=</span> <span class="token function">initializeBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> exposedObject<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">BeanCreationException</span> <span class="token operator">&amp;&amp;</span> beanName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">BeanCreationException</span><span class="token punctuation">)</span> ex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">throw</span> <span class="token punctuation">(</span><span class="token class-name">BeanCreationException</span><span class="token punctuation">)</span> ex<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>
               mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token string">&quot;Initialization of bean failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonExposure<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// </span>
      <span class="token class-name">Object</span> earlySingletonReference <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonReference <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>exposedObject <span class="token operator">==</span> bean<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            exposedObject <span class="token operator">=</span> earlySingletonReference<span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>allowRawInjectionDespiteWrapping <span class="token operator">&amp;&amp;</span> <span class="token function">hasDependentBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dependentBeans <span class="token operator">=</span> <span class="token function">getDependentBeans</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> actualDependentBeans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dependentBeans<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> dependentBean <span class="token operator">:</span> dependentBeans<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">removeSingletonIfCreatedForTypeCheckOnly</span><span class="token punctuation">(</span>dependentBean<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  actualDependentBeans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>dependentBean<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>actualDependentBeans<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCurrentlyInCreationException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span>
                     <span class="token string">&quot;Bean with name &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39; has been injected into other beans [&quot;</span> <span class="token operator">+</span>
                     <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">collectionToCommaDelimitedString</span><span class="token punctuation">(</span>actualDependentBeans<span class="token punctuation">)</span> <span class="token operator">+</span>
                     <span class="token string">&quot;] in its raw version as part of a circular reference, but has eventually been &quot;</span> <span class="token operator">+</span>
                     <span class="token string">&quot;wrapped. This means that said other beans do not use the final version of the &quot;</span> <span class="token operator">+</span>
                     <span class="token string">&quot;bean. This is often the result of over-eager type matching - consider using &quot;</span> <span class="token operator">+</span>
                     <span class="token string">&quot;&#39;getBeanNamesOfType&#39; with the &#39;allowEagerInit&#39; flag turned off, for example.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// Register bean as disposable.</span>
   <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">registerDisposableBeanIfNecessary</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> bean<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionValidationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>
            mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token string">&quot;Invalid destruction signature&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">return</span> exposedObject<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u8FD9\u91CC\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u5206\u6790\u5B8C\u4E86 doCreateBean \u65B9\u6CD5\uFF0C\u603B\u7684\u6765\u8BF4\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u8BF4\u5B8C\u4E86\u6574\u4E2A\u521D\u59CB\u5316\u6D41\u7A0B\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u6311 doCreateBean \u4E2D\u7684\u4E09\u4E2A\u7EC6\u8282\u51FA\u6765\u8BF4\u8BF4\u3002\u4E00\u4E2A\u662F\u521B\u5EFA Bean \u5B9E\u4F8B\u7684 createBeanInstance \u65B9\u6CD5\uFF0C\u4E00\u4E2A\u662F\u4F9D\u8D56\u6CE8\u5165\u7684 populateBean \u65B9\u6CD5\uFF0C\u8FD8\u6709\u5C31\u662F\u56DE\u8C03\u65B9\u6CD5 initializeBean\u3002</p><p>\u6CE8\u610F\u4E86\uFF0C\u63A5\u4E0B\u6765\u7684\u8FD9\u4E09\u4E2A\u65B9\u6CD5\u8981\u8BA4\u771F\u8BF4\u90A3\u4E5F\u662F\u6781\u5176\u590D\u6742\u7684\uFF0C\u5F88\u591A\u5730\u65B9\u6211\u5C31\u70B9\u5230\u4E3A\u6B62\u4E86\uFF0C\u611F\u5174\u8DA3\u7684\u8BFB\u8005\u53EF\u4EE5\u81EA\u5DF1\u5F80\u91CC\u770B\uFF0C\u6700\u597D\u5C31\u662F\u78B0\u5230\u4E0D\u61C2\u7684\uFF0C\u81EA\u5DF1\u5199\u4EE3\u7801\u53BB\u8C03\u8BD5\u5B83\u3002</p><h5 id="\u521B\u5EFA-bean-\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-bean-\u5B9E\u4F8B" aria-hidden="true">#</a> \u521B\u5EFA Bean \u5B9E\u4F8B</h5><p>\u6211\u4EEC\u5148\u770B\u770B createBeanInstance \u65B9\u6CD5\u3002\u9700\u8981\u8BF4\u660E\u7684\u662F\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u5982\u679C\u6BCF\u4E2A\u5206\u652F\u90FD\u5206\u6790\u4E0B\u53BB\uFF0C\u5FC5\u7136\u4E5F\u662F\u6781\u5176\u590D\u6742\u5197\u957F\u7684\uFF0C\u6211\u4EEC\u6311\u91CD\u70B9\u8BF4\u3002\u6B64\u65B9\u6CD5\u7684\u76EE\u7684\u5C31\u662F\u5B9E\u4F8B\u5316\u6211\u4EEC\u6307\u5B9A\u7684\u7C7B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">BeanWrapper</span> <span class="token function">createBeanInstance</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u786E\u4FDD\u5DF2\u7ECF\u52A0\u8F7D\u4E86\u6B64 class</span>
   <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass <span class="token operator">=</span> <span class="token function">resolveBeanClass</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u6821\u9A8C\u4E00\u4E0B\u8FD9\u4E2A\u7C7B\u7684\u8BBF\u95EE\u6743\u9650</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>beanClass <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token function">isPublic</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">isNonPublicAccessAllowed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span>
            <span class="token string">&quot;Bean class isn&#39;t public, and non-public access not allowed: &quot;</span> <span class="token operator">+</span> beanClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getFactoryMethodName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
      <span class="token comment">// \u91C7\u7528\u5DE5\u5382\u65B9\u6CD5\u5B9E\u4F8B\u5316\uFF0C\u4E0D\u719F\u6089\u8FD9\u4E2A\u6982\u5FF5\u7684\u8BFB\u8005\u8BF7\u770B\u9644\u5F55\uFF0C\u6CE8\u610F\uFF0C\u4E0D\u662F FactoryBean</span>
      <span class="token keyword">return</span> <span class="token function">instantiateUsingFactoryMethod</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// \u5982\u679C\u4E0D\u662F\u7B2C\u4E00\u6B21\u521B\u5EFA\uFF0C\u6BD4\u5982\u7B2C\u4E8C\u6B21\u521B\u5EFA prototype bean\u3002</span>
   <span class="token comment">// \u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4ECE\u7B2C\u4E00\u6B21\u521B\u5EFA\u77E5\u9053\uFF0C\u91C7\u7528\u65E0\u53C2\u6784\u9020\u51FD\u6570\uFF0C\u8FD8\u662F\u6784\u9020\u51FD\u6570\u4F9D\u8D56\u6CE8\u5165 \u6765\u5B8C\u6210\u5B9E\u4F8B\u5316</span>
   <span class="token keyword">boolean</span> resolved <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
   <span class="token keyword">boolean</span> autowireNecessary <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>args <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span>constructorArgumentLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span>resolvedConstructorOrFactoryMethod <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            resolved <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            autowireNecessary <span class="token operator">=</span> mbd<span class="token punctuation">.</span>constructorArgumentsResolved<span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>resolved<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>autowireNecessary<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u6784\u9020\u51FD\u6570\u4F9D\u8D56\u6CE8\u5165</span>
         <span class="token keyword">return</span> <span class="token function">autowireConstructor</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u65E0\u53C2\u6784\u9020\u51FD\u6570</span>
         <span class="token keyword">return</span> <span class="token function">instantiateBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// \u5224\u65AD\u662F\u5426\u91C7\u7528\u6709\u53C2\u6784\u9020\u51FD\u6570</span>
   <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> ctors <span class="token operator">=</span> <span class="token function">determineConstructorsFromBeanPostProcessors</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>ctors <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span>
         mbd<span class="token punctuation">.</span><span class="token function">getResolvedAutowireMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">.</span>AUTOWIRE_CONSTRUCTOR <span class="token operator">||</span>
         mbd<span class="token punctuation">.</span><span class="token function">hasConstructorArgumentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token class-name">ObjectUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
      <span class="token comment">// \u6784\u9020\u51FD\u6570\u4F9D\u8D56\u6CE8\u5165</span>
      <span class="token keyword">return</span> <span class="token function">autowireConstructor</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> ctors<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// \u8C03\u7528\u65E0\u53C2\u6784\u9020\u51FD\u6570</span>
   <span class="token keyword">return</span> <span class="token function">instantiateBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6311\u4E2A\u7B80\u5355\u7684<strong>\u65E0\u53C2\u6784\u9020\u51FD\u6570</strong>\u6784\u9020\u5B9E\u4F8B\u6765\u770B\u770B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">BeanWrapper</span> <span class="token function">instantiateBean</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token class-name">Object</span> beanInstance<span class="token punctuation">;</span>
      <span class="token keyword">final</span> <span class="token class-name">BeanFactory</span> parent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         beanInstance <span class="token operator">=</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               
               <span class="token keyword">return</span> <span class="token function">getInstantiationStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">instantiate</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u5B9E\u4F8B\u5316</span>
         beanInstance <span class="token operator">=</span> <span class="token function">getInstantiationStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">instantiate</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5305\u88C5\u4E00\u4E0B\uFF0C\u8FD4\u56DE</span>
      <span class="token class-name">BeanWrapper</span> bw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanWrapperImpl</span><span class="token punctuation">(</span>beanInstance<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">initBeanWrapper</span><span class="token punctuation">(</span>bw<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> bw<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>
            mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token string">&quot;Instantiation of bean failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u5173\u952E\u7684\u5730\u65B9\u5728\u4E8E\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>beanInstance <span class="token operator">=</span> <span class="token function">getInstantiationStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">instantiate</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u4F1A\u8FDB\u884C\u5B9E\u9645\u7684\u5B9E\u4F8B\u5316\u8FC7\u7A0B\uFF0C\u6211\u4EEC\u8FDB\u53BB\u770B\u770B:</p><p>// SimpleInstantiationStrategy 59</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">instantiate</span><span class="token punctuation">(</span><span class="token class-name">RootBeanDefinition</span> bd<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">BeanFactory</span> owner<span class="token punctuation">)</span> <span class="token punctuation">{</span>

   <span class="token comment">// \u5982\u679C\u4E0D\u5B58\u5728\u65B9\u6CD5\u8986\u5199\uFF0C\u90A3\u5C31\u4F7F\u7528 java \u53CD\u5C04\u8FDB\u884C\u5B9E\u4F8B\u5316\uFF0C\u5426\u5219\u4F7F\u7528 CGLIB,</span>
   <span class="token comment">// \u65B9\u6CD5\u8986\u5199 \u8BF7\u53C2\u89C1\u9644\u5F55&quot;\u65B9\u6CD5\u6CE8\u5165&quot;\u4E2D\u5BF9 lookup-method \u548C replaced-method \u7684\u4ECB\u7ECD</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>bd<span class="token punctuation">.</span><span class="token function">getMethodOverrides</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> constructorToUse<span class="token punctuation">;</span>
      <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>bd<span class="token punctuation">.</span>constructorArgumentLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         constructorToUse <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> bd<span class="token punctuation">.</span>resolvedConstructorOrFactoryMethod<span class="token punctuation">;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>constructorToUse <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> bd<span class="token punctuation">.</span><span class="token function">getBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanInstantiationException</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">&quot;Specified class is an interface&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  constructorToUse <span class="token operator">=</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrivilegedExceptionAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Constructor</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                     <span class="token annotation punctuation">@Override</span>
                     <span class="token keyword">public</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                     <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
               <span class="token keyword">else</span> <span class="token punctuation">{</span>
                  constructorToUse <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
               bd<span class="token punctuation">.</span>resolvedConstructorOrFactoryMethod <span class="token operator">=</span> constructorToUse<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanInstantiationException</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">&quot;No default constructor found&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5229\u7528\u6784\u9020\u65B9\u6CD5\u8FDB\u884C\u5B9E\u4F8B\u5316</span>
      <span class="token keyword">return</span> <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">instantiateClass</span><span class="token punctuation">(</span>constructorToUse<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5B58\u5728\u65B9\u6CD5\u8986\u5199\uFF0C\u5229\u7528 CGLIB \u6765\u5B8C\u6210\u5B9E\u4F8B\u5316\uFF0C\u9700\u8981\u4F9D\u8D56\u4E8E CGLIB \u751F\u6210\u5B50\u7C7B\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u5C55\u5F00\u4E86\u3002</span>
      <span class="token comment">// tips: \u56E0\u4E3A\u5982\u679C\u4E0D\u4F7F\u7528 CGLIB \u7684\u8BDD\uFF0C\u5B58\u5728 override \u7684\u60C5\u51B5 JDK \u5E76\u6CA1\u6709\u63D0\u4F9B\u76F8\u5E94\u7684\u5B9E\u4F8B\u5316\u652F\u6301</span>
      <span class="token keyword">return</span> <span class="token function">instantiateWithMethodInjection</span><span class="token punctuation">(</span>bd<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> owner<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u8FD9\u91CC\uFF0C\u6211\u4EEC\u5C31\u7B97\u5B9E\u4F8B\u5316\u5B8C\u6210\u4E86\u3002\u6211\u4EEC\u5F00\u59CB\u8BF4\u600E\u4E48\u8FDB\u884C\u5C5E\u6027\u6CE8\u5165\u3002</p><h5 id="bean-\u5C5E\u6027\u6CE8\u5165" tabindex="-1"><a class="header-anchor" href="#bean-\u5C5E\u6027\u6CE8\u5165" aria-hidden="true">#</a> bean \u5C5E\u6027\u6CE8\u5165</h5><p>\u770B\u5B8C\u4E86 createBeanInstance(...) \u65B9\u6CD5\uFF0C\u6211\u4EEC\u6765\u770B\u770B populateBean(...) \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u8D1F\u8D23\u8FDB\u884C\u5C5E\u6027\u8BBE\u503C\uFF0C\u5904\u7406\u4F9D\u8D56\u3002</p><p>// AbstractAutowireCapableBeanFactory 1203</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">populateBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token class-name">BeanWrapper</span> bw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// bean \u5B9E\u4F8B\u7684\u6240\u6709\u5C5E\u6027\u90FD\u5728\u8FD9\u91CC\u4E86</span>
   <span class="token class-name">PropertyValues</span> pvs <span class="token operator">=</span> mbd<span class="token punctuation">.</span><span class="token function">getPropertyValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>bw <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pvs<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>
               mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token string">&quot;Cannot apply property values to null instance&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
         <span class="token comment">// Skip property population phase for null instance.</span>
         <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// \u5230\u8FD9\u6B65\u7684\u65F6\u5019\uFF0Cbean \u5B9E\u4F8B\u5316\u5B8C\u6210\uFF08\u901A\u8FC7\u5DE5\u5382\u65B9\u6CD5\u6216\u6784\u9020\u65B9\u6CD5\uFF09\uFF0C\u4F46\u662F\u8FD8\u6CA1\u5F00\u59CB\u5C5E\u6027\u8BBE\u503C\uFF0C</span>
   <span class="token comment">// InstantiationAwareBeanPostProcessor \u7684\u5B9E\u73B0\u7C7B\u53EF\u4EE5\u5728\u8FD9\u91CC\u5BF9 bean \u8FDB\u884C\u72B6\u6001\u4FEE\u6539\uFF0C</span>
   <span class="token comment">// \u6211\u4E5F\u6CA1\u627E\u5230\u6709\u5B9E\u9645\u7684\u4F7F\u7528\uFF0C\u6240\u4EE5\u6211\u4EEC\u6682\u4E14\u5FFD\u7565\u8FD9\u5757\u5427</span>
   <span class="token keyword">boolean</span> continueWithPropertyPopulation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">isSynthetic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">hasInstantiationAwareBeanPostProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BeanPostProcessor</span> bp <span class="token operator">:</span> <span class="token function">getBeanPostProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>bp <span class="token keyword">instanceof</span> <span class="token class-name">InstantiationAwareBeanPostProcessor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">InstantiationAwareBeanPostProcessor</span> ibp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InstantiationAwareBeanPostProcessor</span><span class="token punctuation">)</span> bp<span class="token punctuation">;</span>
            <span class="token comment">// \u5982\u679C\u8FD4\u56DE false\uFF0C\u4EE3\u8868\u4E0D\u9700\u8981\u8FDB\u884C\u540E\u7EED\u7684\u5C5E\u6027\u8BBE\u503C\uFF0C\u4E5F\u4E0D\u9700\u8981\u518D\u7ECF\u8FC7\u5176\u4ED6\u7684 BeanPostProcessor \u7684\u5904\u7406</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ibp<span class="token punctuation">.</span><span class="token function">postProcessAfterInstantiation</span><span class="token punctuation">(</span>bw<span class="token punctuation">.</span><span class="token function">getWrappedInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               continueWithPropertyPopulation <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
               <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>continueWithPropertyPopulation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getResolvedAutowireMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">.</span>AUTOWIRE_BY_NAME <span class="token operator">||</span>
         mbd<span class="token punctuation">.</span><span class="token function">getResolvedAutowireMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">.</span>AUTOWIRE_BY_TYPE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">MutablePropertyValues</span> newPvs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutablePropertyValues</span><span class="token punctuation">(</span>pvs<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u901A\u8FC7\u540D\u5B57\u627E\u5230\u6240\u6709\u5C5E\u6027\u503C\uFF0C\u5982\u679C\u662F bean \u4F9D\u8D56\uFF0C\u5148\u521D\u59CB\u5316\u4F9D\u8D56\u7684 bean\u3002\u8BB0\u5F55\u4F9D\u8D56\u5173\u7CFB</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getResolvedAutowireMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">.</span>AUTOWIRE_BY_NAME<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">autowireByName</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> bw<span class="token punctuation">,</span> newPvs<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u901A\u8FC7\u7C7B\u578B\u88C5\u914D\u3002\u590D\u6742\u4E00\u4E9B</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getResolvedAutowireMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">.</span>AUTOWIRE_BY_TYPE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">autowireByType</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> bw<span class="token punctuation">,</span> newPvs<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      pvs <span class="token operator">=</span> newPvs<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">boolean</span> hasInstAwareBpps <span class="token operator">=</span> <span class="token function">hasInstantiationAwareBeanPostProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">boolean</span> needsDepCheck <span class="token operator">=</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getDependencyCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">.</span>DEPENDENCY_CHECK_NONE<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>hasInstAwareBpps <span class="token operator">||</span> needsDepCheck<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">PropertyDescriptor</span><span class="token punctuation">[</span><span class="token punctuation">]</span> filteredPds <span class="token operator">=</span> <span class="token function">filterPropertyDescriptorsForDependencyCheck</span><span class="token punctuation">(</span>bw<span class="token punctuation">,</span> mbd<span class="token punctuation">.</span>allowCaching<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasInstAwareBpps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BeanPostProcessor</span> bp <span class="token operator">:</span> <span class="token function">getBeanPostProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>bp <span class="token keyword">instanceof</span> <span class="token class-name">InstantiationAwareBeanPostProcessor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token class-name">InstantiationAwareBeanPostProcessor</span> ibp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InstantiationAwareBeanPostProcessor</span><span class="token punctuation">)</span> bp<span class="token punctuation">;</span>
               <span class="token comment">// \u8FD9\u91CC\u6709\u4E2A\u975E\u5E38\u6709\u7528\u7684 BeanPostProcessor \u8FDB\u5230\u8FD9\u91CC: AutowiredAnnotationBeanPostProcessor</span>
               <span class="token comment">// \u5BF9\u91C7\u7528 @Autowired\u3001@Value \u6CE8\u89E3\u7684\u4F9D\u8D56\u8FDB\u884C\u8BBE\u503C\uFF0C\u8FD9\u91CC\u7684\u5185\u5BB9\u4E5F\u662F\u975E\u5E38\u4E30\u5BCC\u7684\uFF0C\u4E0D\u8FC7\u672C\u6587\u4E0D\u4F1A\u5C55\u5F00\u8BF4\u4E86\uFF0C\u611F\u5174\u8DA3\u7684\u8BFB\u8005\u8BF7\u81EA\u884C\u7814\u7A76</span>
               pvs <span class="token operator">=</span> ibp<span class="token punctuation">.</span><span class="token function">postProcessPropertyValues</span><span class="token punctuation">(</span>pvs<span class="token punctuation">,</span> filteredPds<span class="token punctuation">,</span> bw<span class="token punctuation">.</span><span class="token function">getWrappedInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token keyword">if</span> <span class="token punctuation">(</span>pvs <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token keyword">return</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>needsDepCheck<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">checkDependencies</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> filteredPds<span class="token punctuation">,</span> pvs<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u8BBE\u7F6E bean \u5B9E\u4F8B\u7684\u5C5E\u6027\u503C</span>
   <span class="token function">applyPropertyValues</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> bw<span class="token punctuation">,</span> pvs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="initializebean" tabindex="-1"><a class="header-anchor" href="#initializebean" aria-hidden="true">#</a> initializeBean</h5><p>\u5C5E\u6027\u6CE8\u5165\u5B8C\u6210\u540E\uFF0C\u8FD9\u4E00\u6B65\u5176\u5B9E\u5C31\u662F\u5904\u7406\u5404\u79CD\u56DE\u8C03\u4E86\uFF0C\u8FD9\u5757\u4EE3\u7801\u6BD4\u8F83\u7B80\u5355\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">initializeBean</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token annotation punctuation">@Override</span>
         <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">invokeAwareMethods</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C bean \u5B9E\u73B0\u4E86 BeanNameAware\u3001BeanClassLoaderAware \u6216 BeanFactoryAware \u63A5\u53E3\uFF0C\u56DE\u8C03</span>
      <span class="token function">invokeAwareMethods</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token class-name">Object</span> wrappedBean <span class="token operator">=</span> bean<span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">isSynthetic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// BeanPostProcessor \u7684 postProcessBeforeInitialization \u56DE\u8C03</span>
      wrappedBean <span class="token operator">=</span> <span class="token function">applyBeanPostProcessorsBeforeInitialization</span><span class="token punctuation">(</span>wrappedBean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406 bean \u4E2D\u5B9A\u4E49\u7684 init-method\uFF0C</span>
      <span class="token comment">// \u6216\u8005\u5982\u679C bean \u5B9E\u73B0\u4E86 InitializingBean \u63A5\u53E3\uFF0C\u8C03\u7528 afterPropertiesSet() \u65B9\u6CD5</span>
      <span class="token function">invokeInitMethods</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> wrappedBean<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>
            <span class="token punctuation">(</span>mbd <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            beanName<span class="token punctuation">,</span> <span class="token string">&quot;Invocation of init method failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">isSynthetic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// BeanPostProcessor \u7684 postProcessAfterInitialization \u56DE\u8C03</span>
      wrappedBean <span class="token operator">=</span> <span class="token function">applyBeanPostProcessorsAfterInitialization</span><span class="token punctuation">(</span>wrappedBean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> wrappedBean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u5BB6\u53D1\u73B0\u6CA1\u6709\uFF0CBeanPostProcessor \u7684\u4E24\u4E2A\u56DE\u8C03\u90FD\u53D1\u751F\u5728\u8FD9\u8FB9\uFF0C\u53EA\u4E0D\u8FC7\u4E2D\u95F4\u5904\u7406\u4E86 init-method\uFF0C\u662F\u4E0D\u662F\u548C\u8BFB\u8005\u539F\u6765\u7684\u8BA4\u77E5\u6709\u70B9\u4E0D\u4E00\u6837\u4E86\uFF1F</p><h2 id="\u9644\u5F55" tabindex="-1"><a class="header-anchor" href="#\u9644\u5F55" aria-hidden="true">#</a> \u9644\u5F55</h2><h3 id="id-\u548C-name" tabindex="-1"><a class="header-anchor" href="#id-\u548C-name" aria-hidden="true">#</a> id \u548C name</h3><p>\u6BCF\u4E2A Bean \u5728 Spring \u5BB9\u5668\u4E2D\u90FD\u6709\u4E00\u4E2A\u552F\u4E00\u7684\u540D\u5B57\uFF08beanName\uFF09\u548C 0 \u4E2A\u6216\u591A\u4E2A\u522B\u540D\uFF08aliases\uFF09\u3002</p><p>\u6211\u4EEC\u4ECE Spring \u5BB9\u5668\u4E2D\u83B7\u53D6 Bean \u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u6839\u636E beanName\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7\u522B\u540D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;beanName or alias&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5728\u914D\u7F6E <code>&lt;bean /&gt;</code> \u7684\u8FC7\u7A0B\u4E2D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u914D\u7F6E id \u548C name\uFF0C\u770B\u51E0\u4E2A\u4F8B\u5B50\u5C31\u77E5\u9053\u662F\u600E\u4E48\u56DE\u4E8B\u4E86\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>messageService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m1, m2, m3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.javadoop.example.MessageServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u914D\u7F6E\u7684\u7ED3\u679C\u5C31\u662F\uFF1AbeanName \u4E3A messageService\uFF0C\u522B\u540D\u6709 3 \u4E2A\uFF0C\u5206\u522B\u4E3A m1\u3001m2\u3001m3\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m1, m2, m3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.javadoop.example.MessageServiceImpl<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u914D\u7F6E\u7684\u7ED3\u679C\u5C31\u662F\uFF1AbeanName \u4E3A m1\uFF0C\u522B\u540D\u6709 2 \u4E2A\uFF0C\u5206\u522B\u4E3A m2\u3001m3\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.javadoop.example.MessageServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>beanName \u4E3A\uFF1Acom.javadoop.example.MessageServiceImpl#0\uFF0C</p><p>\u522B\u540D 1 \u4E2A\uFF0C\u4E3A\uFF1A com.javadoop.example.MessageServiceImpl</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>messageService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.javadoop.example.MessageServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u914D\u7F6E\u7684\u7ED3\u679C\u5C31\u662F\uFF1AbeanName \u4E3A messageService\uFF0C\u6CA1\u6709\u522B\u540D\u3002</p><h3 id="\u914D\u7F6E\u662F\u5426\u5141\u8BB8-bean-\u8986\u76D6\u3001\u662F\u5426\u5141\u8BB8\u5FAA\u73AF\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u662F\u5426\u5141\u8BB8-bean-\u8986\u76D6\u3001\u662F\u5426\u5141\u8BB8\u5FAA\u73AF\u4F9D\u8D56" aria-hidden="true">#</a> \u914D\u7F6E\u662F\u5426\u5141\u8BB8 Bean \u8986\u76D6\u3001\u662F\u5426\u5141\u8BB8\u5FAA\u73AF\u4F9D\u8D56</h3><p>\u6211\u4EEC\u8BF4\u8FC7\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CallowBeanDefinitionOverriding \u5C5E\u6027\u4E3A null\u3002\u5982\u679C\u5728\u540C\u4E00\u914D\u7F6E\u6587\u4EF6\u4E2D Bean id \u6216 name \u91CD\u590D\u4E86\uFF0C\u4F1A\u629B\u9519\uFF0C\u4F46\u662F\u5982\u679C\u4E0D\u662F\u540C\u4E00\u914D\u7F6E\u6587\u4EF6\u4E2D\uFF0C\u4F1A\u53D1\u751F\u8986\u76D6\u3002</p><p>\u53EF\u662F\u6709\u4E9B\u65F6\u5019\u6211\u4EEC\u5E0C\u671B\u5728\u7CFB\u7EDF\u542F\u52A8\u7684\u8FC7\u7A0B\u4E2D\u5C31\u4E25\u683C\u675C\u7EDD\u53D1\u751F Bean \u8986\u76D6\uFF0C\u56E0\u4E3A\u4E07\u4E00\u51FA\u73B0\u8FD9\u79CD\u60C5\u51B5\uFF0C\u4F1A\u589E\u52A0\u6211\u4EEC\u6392\u67E5\u95EE\u9898\u7684\u6210\u672C\u3002</p><p>\u5FAA\u73AF\u4F9D\u8D56\u8BF4\u7684\u662F A \u4F9D\u8D56 B\uFF0C\u800C B \u53C8\u4F9D\u8D56 A\u3002\u6216\u8005\u662F A \u4F9D\u8D56 B\uFF0CB \u4F9D\u8D56 C\uFF0C\u800C C \u5374\u4F9D\u8D56 A\u3002\u9ED8\u8BA4 allowCircularReferences \u4E5F\u662F null\u3002</p><p>\u5B83\u4EEC\u4E24\u4E2A\u5C5E\u6027\u662F\u4E00\u8D77\u51FA\u73B0\u7684\uFF0C\u5FC5\u7136\u53EF\u4EE5\u5728\u540C\u4E00\u4E2A\u5730\u65B9\u4E00\u8D77\u8FDB\u884C\u914D\u7F6E\u3002</p>`,211),k=n("\u6DFB\u52A0\u8FD9\u4E24\u4E2A\u5C5E\u6027\u7684\u4F5C\u8005 Juergen Hoeller \u5728\u8FD9\u4E2A "),r={href:"https://jira.spring.io/browse/SPR-4374",target:"_blank",rel:"noopener noreferrer"},d=n("jira"),v=n(" \u7684\u8BA8\u8BBA\u4E2D\u8BF4\u660E\u4E86\u600E\u4E48\u914D\u7F6E\u8FD9\u4E24\u4E2A\u5C5E\u6027\u3002"),m=a(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NoBeanOverridingContextLoader</span> <span class="token keyword">extends</span> <span class="token class-name">ContextLoader</span> <span class="token punctuation">{</span>
 
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">customizeContext</span><span class="token punctuation">(</span><span class="token class-name">ServletContext</span> servletContext<span class="token punctuation">,</span> <span class="token class-name">ConfigurableWebApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">customizeContext</span><span class="token punctuation">(</span>servletContext<span class="token punctuation">,</span> applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">AbstractRefreshableApplicationContext</span> arac <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AbstractRefreshableApplicationContext</span><span class="token punctuation">)</span> applicationContext<span class="token punctuation">;</span>
    arac<span class="token punctuation">.</span><span class="token function">setAllowBeanDefinitionOverriding</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyContextLoaderListener</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span>ContextLoaderListener</span> <span class="token punctuation">{</span>
 
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">protected</span> <span class="token class-name">ContextLoader</span> <span class="token function">createContextLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">NoBeanOverridingContextLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">&gt;</span></span>com.javadoop.MyContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),b=n("\u5982\u679C\u4EE5\u4E0A\u65B9\u5F0F\u4E0D\u80FD\u6EE1\u8DB3\u4F60\u7684\u9700\u6C42\uFF0C\u8BF7\u53C2\u8003\u8FD9\u4E2A\u94FE\u63A5\uFF1A"),g={href:"http://blog.csdn.net/zgmzyr/article/details/39380477",target:"_blank",rel:"noopener noreferrer"},f=n("\u89E3\u51B3spring\u4E2D\u4E0D\u540C\u914D\u7F6E\u6587\u4EF6\u4E2D\u5B58\u5728name\u6216\u8005id\u76F8\u540C\u7684bean\u53EF\u80FD\u5F15\u8D77\u7684\u95EE\u9898"),y=a(`<h3 id="profile" tabindex="-1"><a class="header-anchor" href="#profile" aria-hidden="true">#</a> profile</h3><p>\u6211\u4EEC\u53EF\u4EE5\u628A\u4E0D\u540C\u73AF\u5883\u7684\u914D\u7F6E\u5206\u522B\u914D\u7F6E\u5230\u5355\u72EC\u7684\u6587\u4EF6\u4E2D\uFF0C\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">profile</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>development<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>jdbc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/jdbc<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">jdbc:</span>embedded-database</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">jdbc:</span>script</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>classpath:com/bank/config/sql/schema.sql<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">jdbc:</span>script</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>classpath:com/bank/config/sql/test-data.sql<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">jdbc:</span>embedded-database</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">profile</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>production<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>jee</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/jee<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">jee:</span>jndi-lookup</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jndi-name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java:comp/env/jdbc/datasource<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5E94\u8BE5\u4E0D\u5FC5\u505A\u8FC7\u591A\u89E3\u91CA\u4E86\u5427\uFF0C\u770B\u6BCF\u4E2A\u6587\u4EF6\u7B2C\u4E00\u884C\u7684 profile=&quot;&quot;\u3002</p><p>\u5F53\u7136\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u5728\u4E00\u4E2A\u914D\u7F6E\u6587\u4EF6\u4E2D\u4F7F\u7528\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>jdbc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/jdbc<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>jee</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/jee<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">profile</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>development<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">jdbc:</span>embedded-database</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">jdbc:</span>script</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>classpath:com/bank/config/sql/schema.sql<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">jdbc:</span>script</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>classpath:com/bank/config/sql/test-data.sql<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">jdbc:</span>embedded-database</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">profile</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>production<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">jee:</span>jndi-lookup</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jndi-name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java:comp/env/jdbc/datasource<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7406\u89E3\u8D77\u6765\u4E5F\u5F88\u7B80\u5355\u5427\u3002</p><p>\u63A5\u4E0B\u6765\u7684\u95EE\u9898\u662F\uFF0C\u600E\u4E48\u4F7F\u7528\u7279\u5B9A\u7684 profile \u5462\uFF1FSpring \u5728\u542F\u52A8\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u53BB\u5BFB\u627E \u201Cspring.profiles.active\u201D \u7684\u5C5E\u6027\u503C\uFF0C\u6839\u636E\u8FD9\u4E2A\u5C5E\u6027\u503C\u6765\u7684\u3002\u90A3\u600E\u4E48\u914D\u7F6E\u8FD9\u4E2A\u503C\u5462\uFF1F</p><p>Spring \u4F1A\u5728\u8FD9\u51E0\u4E2A\u5730\u65B9\u5BFB\u627E spring.profiles.active \u7684\u5C5E\u6027\u503C\uFF1A\u64CD\u4F5C\u7CFB\u7EDF\u73AF\u5883\u53D8\u91CF\u3001JVM \u7CFB\u7EDF\u53D8\u91CF\u3001web.xml \u4E2D\u5B9A\u4E49\u7684\u53C2\u6570\u3001JNDI\u3002</p><p>\u6700\u7B80\u5355\u7684\u65B9\u5F0F\u83AB\u8FC7\u4E8E\u5728\u7A0B\u5E8F\u542F\u52A8\u7684\u65F6\u5019\u6307\u5B9A\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>-Dspring.profiles.active<span class="token operator">=</span><span class="token string">&quot;profile1,profile2&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>profile \u53EF\u4EE5\u6FC0\u6D3B\u591A\u4E2A</p></blockquote><p>\u5F53\u7136\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u901A\u8FC7\u4EE3\u7801\u7684\u5F62\u5F0F\u4ECE Environment \u4E2D\u8BBE\u7F6E profile\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">AnnotationConfigApplicationContext</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;development&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">SomeConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">StandaloneDataConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">JndiDataConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u91CD\u542F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u662F Spring Boot \u7684\u8BDD\u66F4\u7B80\u5355\uFF0C\u6211\u4EEC\u4E00\u822C\u4F1A\u521B\u5EFA application.properties\u3001application-dev.properties\u3001application-prod.properties \u7B49\u6587\u4EF6\uFF0C\u5176\u4E2D application.properties \u914D\u7F6E\u5404\u4E2A\u73AF\u5883\u901A\u7528\u7684\u914D\u7F6E\uFF0Capplication-{profile}.properties \u4E2D\u914D\u7F6E\u7279\u5B9A\u73AF\u5883\u7684\u914D\u7F6E\uFF0C\u7136\u540E\u5728\u542F\u52A8\u7684\u65F6\u5019\u6307\u5B9A profile\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>java -Dspring.profiles.active<span class="token operator">=</span>prod -jar JavaDoop.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u662F\u5355\u5143\u6D4B\u8BD5\u4E2D\u4F7F\u7528\u7684\u8BDD\uFF0C\u5728\u6D4B\u8BD5\u7C7B\u4E2D\u4F7F\u7528 @ActiveProfiles \u6307\u5B9A\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u5C55\u5F00\u4E86\u3002</p><h3 id="\u5DE5\u5382\u6A21\u5F0F\u751F\u6210-bean" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5382\u6A21\u5F0F\u751F\u6210-bean" aria-hidden="true">#</a> \u5DE5\u5382\u6A21\u5F0F\u751F\u6210 Bean</h3><p>\u8BF7\u8BFB\u8005\u6CE8\u610F factory-bean \u548C FactoryBean \u7684\u533A\u522B\u3002\u8FD9\u8282\u8BF4\u7684\u662F\u524D\u8005\uFF0C\u662F\u8BF4\u9759\u6001\u5DE5\u5382\u6216\u5B9E\u4F8B\u5DE5\u5382\uFF0C\u800C\u540E\u8005\u662F Spring \u4E2D\u7684\u7279\u6B8A\u63A5\u53E3\uFF0C\u4EE3\u8868\u4E00\u7C7B\u7279\u6B8A\u7684 Bean\uFF0C\u9644\u5F55\u7684\u4E0B\u9762\u4E00\u8282\u4F1A\u4ECB\u7ECD FactoryBean\u3002</p><p>\u8BBE\u8BA1\u6A21\u5F0F\u91CC\uFF0C\u5DE5\u5382\u65B9\u6CD5\u6A21\u5F0F\u5206\u9759\u6001\u5DE5\u5382\u548C\u5B9E\u4F8B\u5DE5\u5382\uFF0C\u6211\u4EEC\u5206\u522B\u770B\u770B Spring \u4E2D\u600E\u4E48\u914D\u7F6E\u8FD9\u4E24\u4E2A\uFF0C\u6765\u4E2A\u4EE3\u7801\u793A\u4F8B\u5C31\u4EC0\u4E48\u90FD\u6E05\u695A\u4E86\u3002</p><p>\u9759\u6001\u5DE5\u5382\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clientService<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>examples.ClientService<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">factory-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createInstance<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClientService</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ClientService</span> clientService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClientService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ClientService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token comment">// \u9759\u6001\u65B9\u6CD5</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ClientService</span> <span class="token function">createInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> clientService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u4F8B\u5DE5\u5382\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serviceLocator<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>examples.DefaultServiceLocator<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- inject any dependencies required by this locator bean --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clientService<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">factory-bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serviceLocator<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">factory-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createClientServiceInstance<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>accountService<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">factory-bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serviceLocator<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">factory-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createAccountServiceInstance<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultServiceLocator</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ClientService</span> clientService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClientServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">AccountService</span> accountService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ClientService</span> <span class="token function">createClientServiceInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> clientService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">AccountService</span> <span class="token function">createAccountServiceInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> accountService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="factorybean" tabindex="-1"><a class="header-anchor" href="#factorybean" aria-hidden="true">#</a> FactoryBean</h3><p>FactoryBean \u9002\u7528\u4E8E Bean \u7684\u521B\u5EFA\u8FC7\u7A0B\u6BD4\u8F83\u590D\u6742\u7684\u573A\u666F\uFF0C\u6BD4\u5982\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u7684\u521B\u5EFA\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">T</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">getObjectType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span> 
    <span class="token keyword">private</span> <span class="token class-name">Car</span> car <span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setCar</span><span class="token punctuation">(</span><span class="token class-name">Car</span> car<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>car <span class="token operator">=</span> car<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5047\u8BBE\u73B0\u5728\u9700\u8981\u521B\u5EFA\u4E00\u4E2A Person \u7684 Bean\uFF0C\u9996\u5148\u6211\u4EEC\u9700\u8981\u4E00\u4E2A Car \u7684\u5B9E\u4F8B\uFF0C\u6211\u4EEC\u8FD9\u91CC\u5047\u8BBE Car \u7684\u5B9E\u4F8B\u521B\u5EFA\u5F88\u9EBB\u70E6\uFF0C\u90A3\u4E48\u6211\u4EEC\u53EF\u4EE5\u628A\u521B\u5EFA Car \u7684\u590D\u6742\u8FC7\u7A0B\u5305\u88C5\u8D77\u6765\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCarFactoryBean</span> <span class="token keyword">implements</span> <span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Car</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> make<span class="token punctuation">;</span> 
    <span class="token keyword">private</span> <span class="token keyword">int</span> year <span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMake</span><span class="token punctuation">(</span><span class="token class-name">String</span> m<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>make <span class="token operator">=</span>m <span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setYear</span><span class="token punctuation">(</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>year <span class="token operator">=</span> y<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token class-name">Car</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
      <span class="token comment">// \u8FD9\u91CC\u6211\u4EEC\u5047\u8BBE Car \u7684\u5B9E\u4F8B\u5316\u8FC7\u7A0B\u975E\u5E38\u590D\u6742\uFF0C\u53CD\u6B63\u5C31\u4E0D\u662F\u51E0\u884C\u4EE3\u7801\u53EF\u4EE5\u5199\u5B8C\u7684\u90A3\u79CD</span>
      <span class="token class-name">CarBuilder</span> cb <span class="token operator">=</span> <span class="token class-name">CarBuilder</span><span class="token punctuation">.</span><span class="token function">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
      <span class="token keyword">if</span><span class="token punctuation">(</span>year<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span> cb<span class="token punctuation">.</span><span class="token function">setYear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>make<span class="token punctuation">)</span><span class="token punctuation">)</span> cb<span class="token punctuation">.</span><span class="token function">setMake</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>make <span class="token punctuation">)</span><span class="token punctuation">;</span> 
      <span class="token keyword">return</span> cb<span class="token punctuation">.</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Car</span><span class="token punctuation">&gt;</span></span> <span class="token function">getObjectType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token class-name">Car</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">;</span> <span class="token punctuation">}</span> 
    
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u770B\u770B\u88C5\u914D\u7684\u65F6\u5019\u662F\u600E\u4E48\u914D\u7F6E\u7684\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>com.javadoop.MyCarFactoryBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>car<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>make<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Honda<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>year<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1984<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>com.javadoop.Person<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>josh<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>car<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>car<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u5230\u4E0D\u4E00\u6837\u4E86\u5417\uFF1Fid \u4E3A \u201Ccar\u201D \u7684 bean \u5176\u5B9E\u6307\u5B9A\u7684\u662F\u4E00\u4E2A FactoryBean\uFF0C\u4E0D\u8FC7\u914D\u7F6E\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u76F4\u63A5\u8BA9\u914D\u7F6E Person \u7684 Bean \u76F4\u63A5\u4F9D\u8D56\u4E8E\u8FD9\u4E2A FactoryBean \u5C31\u53EF\u4EE5\u4E86\u3002\u4E2D\u95F4\u7684\u8FC7\u7A0B Spring \u5DF2\u7ECF\u5C01\u88C5\u597D\u4E86\u3002</p><p>\u8BF4\u5230\u8FD9\u91CC\uFF0C\u6211\u4EEC\u518D\u6765\u70B9\u5E72\u8D27\u3002\u6211\u4EEC\u77E5\u9053\uFF0C\u73B0\u5728\u8FD8\u7528 xml \u914D\u7F6E Bean \u4F9D\u8D56\u7684\u8D8A\u6765\u8D8A\u5C11\u4E86\uFF0C\u66F4\u591A\u65F6\u5019\uFF0C\u6211\u4EEC\u53EF\u80FD\u4F1A\u91C7\u7528 java config \u7684\u65B9\u5F0F\u6765\u914D\u7F6E\uFF0C\u8FD9\u91CC\u6709\u4EC0\u4E48\u4E0D\u4E00\u6837\u5462\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span> 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CarConfiguration</span> <span class="token punctuation">{</span> 

    <span class="token annotation punctuation">@Bean</span> 
    <span class="token keyword">public</span> <span class="token class-name">MyCarFactoryBean</span> <span class="token function">carFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
      <span class="token class-name">MyCarFactoryBean</span> cfb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCarFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      cfb<span class="token punctuation">.</span><span class="token function">setMake</span><span class="token punctuation">(</span><span class="token string">&quot;Honda&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      cfb<span class="token punctuation">.</span><span class="token function">setYear</span><span class="token punctuation">(</span><span class="token number">1984</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> cfb<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Person</span> <span class="token function">aPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
    <span class="token class-name">Person</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u7684\u4E0D\u540C</span>
    person<span class="token punctuation">.</span><span class="token function">setCar</span><span class="token punctuation">(</span><span class="token function">carFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> person<span class="token punctuation">;</span> 
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u65F6\u5019\uFF0C\u5176\u5B9E\u6211\u4EEC\u7684\u601D\u8DEF\u4E5F\u5F88\u7B80\u5355\uFF0C\u628A MyCarFactoryBean \u770B\u6210\u662F\u4E00\u4E2A\u7B80\u5355\u7684 Bean \u5C31\u53EF\u4EE5\u4E86\uFF0C\u4E0D\u5FC5\u7406\u4F1A\u4EC0\u4E48 FactoryBean\uFF0C\u5B83\u662F\u4E0D\u662F FactoryBean \u548C\u6211\u4EEC\u6CA1\u5173\u7CFB\u3002</p><h3 id="\u521D\u59CB\u5316-bean-\u7684\u56DE\u8C03" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316-bean-\u7684\u56DE\u8C03" aria-hidden="true">#</a> \u521D\u59CB\u5316 Bean \u7684\u56DE\u8C03</h3><p>\u6709\u4EE5\u4E0B\u56DB\u79CD\u65B9\u6848\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>exampleInitBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>examples.ExampleBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">init-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>init<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnotherExampleBean</span> <span class="token keyword">implements</span> <span class="token class-name">InitializingBean</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// do some initialization work</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>initMethod <span class="token operator">=</span> <span class="token string">&quot;init&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Foo</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@PostConstruct</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9500\u6BC1-bean-\u7684\u56DE\u8C03" tabindex="-1"><a class="header-anchor" href="#\u9500\u6BC1-bean-\u7684\u56DE\u8C03" aria-hidden="true">#</a> \u9500\u6BC1 Bean \u7684\u56DE\u8C03</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>exampleInitBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>examples.ExampleBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">destroy-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cleanup<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnotherExampleBean</span> <span class="token keyword">implements</span> <span class="token class-name">DisposableBean</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// do some destruction work (like releasing pooled connections)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>destroyMethod <span class="token operator">=</span> <span class="token string">&quot;cleanup&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Bar</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@PreDestroy</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conversionservice" tabindex="-1"><a class="header-anchor" href="#conversionservice" aria-hidden="true">#</a> ConversionService</h3><p>\u65E2\u7136\u6587\u4E2D\u8BF4\u5230\u4E86\u8FD9\u4E2A\uFF0C\u987A\u4FBF\u63D0\u4E00\u4E0B\u597D\u4E86\u3002</p><p>\u6700\u6709\u7528\u7684\u573A\u666F\u5C31\u662F\uFF0C\u5B83\u7528\u6765\u5C06\u524D\u7AEF\u4F20\u8FC7\u6765\u7684\u53C2\u6570\u548C\u540E\u7AEF\u7684 controller \u65B9\u6CD5\u4E0A\u7684\u53C2\u6570\u8FDB\u884C\u7ED1\u5B9A\u7684\u65F6\u5019\u7528\u3002</p><p>\u50CF\u524D\u7AEF\u4F20\u8FC7\u6765\u7684\u5B57\u7B26\u4E32\u3001\u6574\u6570\u8981\u8F6C\u6362\u4E3A\u540E\u7AEF\u7684 String\u3001Integer \u5F88\u5BB9\u6613\uFF0C\u4F46\u662F\u5982\u679C controller \u65B9\u6CD5\u9700\u8981\u7684\u662F\u4E00\u4E2A\u679A\u4E3E\u503C\uFF0C\u6216\u8005\u662F Date \u8FD9\u4E9B\u975E\u57FA\u7840\u7C7B\u578B\uFF08\u542B\u57FA\u7840\u7C7B\u578B\u5305\u88C5\u7C7B\uFF09\u503C\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u8003\u8651\u91C7\u7528 ConversionService \u6765\u8FDB\u884C\u8F6C\u6362\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>conversionService<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.context.support.ConversionServiceFactoryBean<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>converters<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.javadoop.learning.utils.StringToEnumConverterFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ConversionService \u63A5\u53E3\u5F88\u7B80\u5355\uFF0C\u6240\u4EE5\u8981\u81EA\u5B9A\u4E49\u4E00\u4E2A convert \u7684\u8BDD\u4E5F\u5F88\u7B80\u5355\u3002</p><p>\u4E0B\u9762\u518D\u8BF4\u4E00\u4E2A\u5B9E\u73B0\u8FD9\u79CD\u8F6C\u6362\u5F88\u7B80\u5355\u7684\u65B9\u5F0F\uFF0C\u90A3\u5C31\u662F\u5B9E\u73B0 Converter \u63A5\u53E3\u3002</p><p>\u6765\u770B\u4E00\u4E2A\u5F88\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C\u8FD9\u6837\u6BD4\u4EC0\u4E48\u90FD\u7BA1\u7528\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringToDateConverter</span> <span class="token keyword">implements</span> <span class="token class-name">Converter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Date</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Date</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">String</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">DateUtils</span><span class="token punctuation">.</span><span class="token function">parseDate</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yyyy-MM-dd HH:mm&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;HH:mm:ss&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;HH:mm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ParseException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u8981\u6CE8\u518C\u8FD9\u4E2A Bean \u5C31\u53EF\u4EE5\u4E86\u3002\u8FD9\u6837\uFF0C\u524D\u7AEF\u5F80\u540E\u7AEF\u4F20\u7684\u65F6\u95F4\u63CF\u8FF0\u5B57\u7B26\u4E32\u5C31\u5F88\u5BB9\u6613\u7ED1\u5B9A\u6210 Date \u7C7B\u578B\u4E86\uFF0C\u4E0D\u9700\u8981\u5176\u4ED6\u4EFB\u4F55\u64CD\u4F5C\u3002</p><h3 id="bean-\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#bean-\u7EE7\u627F" aria-hidden="true">#</a> Bean \u7EE7\u627F</h3><p>\u5728\u521D\u59CB\u5316 Bean \u7684\u5730\u65B9\uFF0C\u6211\u4EEC\u8BF4\u8FC7\u4E86\u8FD9\u4E2A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">RootBeanDefinition</span> bd <span class="token operator">=</span> <span class="token function">getMergedLocalBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6D89\u53CA\u5230\u7684\u5C31\u662F <code>&lt;bean parent=&quot;&quot; /&gt;</code> \u4E2D\u7684 parent \u5C5E\u6027\uFF0C\u6211\u4EEC\u6765\u770B\u770B Spring \u4E2D\u662F\u7528\u8FD9\u4E2A\u6765\u5E72\u4EC0\u4E48\u7684\u3002</p><p>\u9996\u5148\uFF0C\u6211\u4EEC\u8981\u660E\u767D\uFF0C\u8FD9\u91CC\u7684\u7EE7\u627F\u548C java \u8BED\u6CD5\u4E2D\u7684\u7EE7\u627F\u6CA1\u6709\u4EFB\u4F55\u5173\u7CFB\uFF0C\u4E0D\u8FC7\u601D\u8DEF\u662F\u76F8\u901A\u7684\u3002child bean \u4F1A\u7EE7\u627F parent bean \u7684\u6240\u6709\u914D\u7F6E\uFF0C\u4E5F\u53EF\u4EE5\u8986\u76D6\u4E00\u4E9B\u914D\u7F6E\uFF0C\u5F53\u7136\u4E5F\u53EF\u4EE5\u65B0\u589E\u989D\u5916\u7684\u914D\u7F6E\u3002</p><p>Spring \u4E2D\u63D0\u4F9B\u4E86\u7EE7\u627F\u81EA AbstractBeanDefinition \u7684 <code>ChildBeanDefinition</code> \u6765\u8868\u793A child bean\u3002</p><p>\u770B\u5982\u4E0B\u4E00\u4E2A\u4F8B\u5B50:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">&quot;inheritedTestBean&quot;</span> <span class="token keyword">abstract</span><span class="token operator">=</span><span class="token string">&quot;true&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;org.springframework.beans.TestBean&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;name&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;parent&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;age&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">&quot;inheritsWithDifferentClass&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;org.springframework.beans.DerivedTestBean&quot;</span>
        parent<span class="token operator">=</span><span class="token string">&quot;inheritedTestBean&quot;</span> init<span class="token operator">-</span>method<span class="token operator">=</span><span class="token string">&quot;initialize&quot;</span><span class="token operator">&gt;</span>
        
    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;name&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;override&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>parent bean \u8BBE\u7F6E\u4E86 <code>abstract=&quot;true&quot;</code> \u6240\u4EE5\u5B83\u4E0D\u4F1A\u88AB\u5B9E\u4F8B\u5316\uFF0Cchild bean \u7EE7\u627F\u4E86 parent bean \u7684\u4E24\u4E2A\u5C5E\u6027\uFF0C\u4F46\u662F\u5BF9 name \u5C5E\u6027\u8FDB\u884C\u4E86\u8986\u5199\u3002</p><p>child bean \u4F1A\u7EE7\u627F scope\u3001\u6784\u9020\u5668\u53C2\u6570\u503C\u3001\u5C5E\u6027\u503C\u3001init-method\u3001destroy-method \u7B49\u7B49\u3002</p><p>\u5F53\u7136\uFF0C\u6211\u4E0D\u662F\u8BF4 parent bean \u4E2D\u7684 abstract = true \u5728\u8FD9\u91CC\u662F\u5FC5\u987B\u7684\uFF0C\u53EA\u662F\u8BF4\u5982\u679C\u52A0\u4E0A\u4E86\u4EE5\u540E Spring \u5728\u5B9E\u4F8B\u5316 singleton beans \u7684\u65F6\u5019\u4F1A\u5FFD\u7565\u8FD9\u4E2A bean\u3002</p><p>\u6BD4\u5982\u4E0B\u9762\u8FD9\u4E2A\u6781\u7AEF parent bean\uFF0C\u5B83\u6CA1\u6709\u6307\u5B9A class\uFF0C\u6240\u4EE5\u6BEB\u65E0\u7591\u95EE\uFF0C\u8FD9\u4E2A bean \u7684\u4F5C\u7528\u5C31\u662F\u7528\u6765\u5145\u5F53\u6A21\u677F\u7528\u7684 parent bean\uFF0C\u6B64\u5904\u5C31\u5FC5\u987B\u52A0\u4E0A abstract = true\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">&quot;inheritedTestBeanWithoutClass&quot;</span> <span class="token keyword">abstract</span><span class="token operator">=</span><span class="token string">&quot;true&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;name&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;parent&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;age&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65B9\u6CD5\u6CE8\u5165" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u6CE8\u5165" aria-hidden="true">#</a> \u65B9\u6CD5\u6CE8\u5165</h3><p>\u4E00\u822C\u6765\u8BF4\uFF0C\u6211\u4EEC\u7684\u5E94\u7528\u4E2D\u5927\u591A\u6570\u7684 Bean \u90FD\u662F singleton \u7684\u3002singleton \u4F9D\u8D56 singleton\uFF0C\u6216\u8005 prototype \u4F9D\u8D56 prototype \u90FD\u5F88\u597D\u89E3\u51B3\uFF0C\u76F4\u63A5\u8BBE\u7F6E\u5C5E\u6027\u4F9D\u8D56\u5C31\u53EF\u4EE5\u4E86\u3002</p><p>\u4F46\u662F\uFF0C\u5982\u679C\u662F singleton \u4F9D\u8D56 prototype \u5462\uFF1F\u8FD9\u4E2A\u65F6\u5019\u4E0D\u80FD\u7528\u5C5E\u6027\u4F9D\u8D56\uFF0C\u56E0\u4E3A\u5982\u679C\u7528\u5C5E\u6027\u4F9D\u8D56\u7684\u8BDD\uFF0C\u6211\u4EEC\u6BCF\u6B21\u5176\u5B9E\u62FF\u5230\u7684\u8FD8\u662F\u7B2C\u4E00\u6B21\u521D\u59CB\u5316\u65F6\u5019\u7684 bean\u3002</p><p>\u4E00\u79CD\u89E3\u51B3\u65B9\u6848\u5C31\u662F\u4E0D\u8981\u7528\u5C5E\u6027\u4F9D\u8D56\uFF0C\u6BCF\u6B21\u83B7\u53D6\u4F9D\u8D56\u7684 bean \u7684\u65F6\u5019\u4ECE BeanFactory \u4E2D\u53D6\u3002\u8FD9\u4E2A\u4E5F\u662F\u5927\u5BB6\u6700\u5E38\u7528\u7684\u65B9\u5F0F\u4E86\u5427\u3002\u600E\u4E48\u53D6\uFF0C\u6211\u5C31\u4E0D\u4ECB\u7ECD\u4E86\uFF0C\u5927\u90E8\u5206 Spring \u9879\u76EE\u5927\u5BB6\u90FD\u4F1A\u5B9A\u4E49\u90A3\u4E48\u4E2A\u5DE5\u5177\u7C7B\u7684\u3002</p><p>\u53E6\u4E00\u79CD\u89E3\u51B3\u65B9\u6848\u5C31\u662F\u8FD9\u91CC\u8981\u4ECB\u7ECD\u7684\u901A\u8FC7\u4F7F\u7528 Lookup method\u3002</p><h4 id="lookup-method" tabindex="-1"><a class="header-anchor" href="#lookup-method" aria-hidden="true">#</a> lookup-method</h4><p>\u6211\u4EEC\u6765\u770B\u4E00\u4E0B Spring Reference \u4E2D\u63D0\u4F9B\u7684\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">fiona<span class="token punctuation">.</span>apple</span><span class="token punctuation">;</span>

<span class="token comment">// no more Spring imports!</span>

<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">CommandManager</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">Object</span> commandState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// grab a new instance of the appropriate Command interface</span>
        <span class="token class-name">Command</span> command <span class="token operator">=</span> <span class="token function">createCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// set the state on the (hopefully brand new) Command instance</span>
        command<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>commandState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> command<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// okay... but where is the implementation of this method?</span>
    <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token class-name">Command</span> <span class="token function">createCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>xml \u914D\u7F6E <code>&lt;lookup-method /&gt;</code>\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- a stateful bean deployed as a prototype (non-singleton) --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myCommand<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fiona.apple.AsyncCommand<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prototype<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- inject dependencies here as required --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- commandProcessor uses statefulCommandHelper --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>commandManager<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fiona.apple.CommandManager<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lookup-method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createCommand<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myCommand<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Spring \u91C7\u7528 <strong>CGLIB \u751F\u6210\u5B57\u8282\u7801</strong>\u7684\u65B9\u5F0F\u6765\u751F\u6210\u4E00\u4E2A\u5B50\u7C7B\u3002\u6211\u4EEC\u5B9A\u4E49\u7684\u7C7B\u4E0D\u80FD\u5B9A\u4E49\u4E3A final class\uFF0C\u62BD\u8C61\u65B9\u6CD5\u4E0A\u4E5F\u4E0D\u80FD\u52A0 final\u3002</p><p>lookup-method \u4E0A\u7684\u914D\u7F6E\u4E5F\u53EF\u4EE5\u91C7\u7528\u6CE8\u89E3\u6765\u5B8C\u6210\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u4E0D\u7528\u914D\u7F6E <code>&lt;lookup-method /&gt;</code> \u4E86\uFF0C\u5176\u4ED6\u4E0D\u53D8\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">CommandManager</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">Object</span> commandState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MyCommand</span> command <span class="token operator">=</span> <span class="token function">createCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        command<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>commandState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> command<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Lookup</span><span class="token punctuation">(</span><span class="token string">&quot;myCommand&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token class-name">Command</span> <span class="token function">createCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6CE8\u610F\uFF0C\u65E2\u7136\u7528\u4E86\u6CE8\u89E3\uFF0C\u8981\u914D\u7F6E\u6CE8\u89E3\u626B\u63CF\uFF1A<code>&lt;context:component-scan base-package=&quot;com.javadoop&quot; /&gt;</code></p></blockquote><p>\u751A\u81F3\uFF0C\u6211\u4EEC\u53EF\u4EE5\u50CF\u4E0B\u9762\u8FD9\u6837\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">CommandManager</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">Object</span> commandState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MyCommand</span> command <span class="token operator">=</span> <span class="token function">createCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        command<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>commandState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> command<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Lookup</span>
    <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token class-name">MyCommand</span> <span class="token function">createCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4E0A\u9762\u7684\u8FD4\u56DE\u503C\u7528\u4E86 MyCommand\uFF0C\u5F53\u7136\uFF0C\u5982\u679C Command \u53EA\u6709\u4E00\u4E2A\u5B9E\u73B0\u7C7B\uFF0C\u90A3\u8FD4\u56DE\u503C\u4E5F\u53EF\u4EE5\u5199 Command\u3002</p></blockquote><h4 id="replaced-method" tabindex="-1"><a class="header-anchor" href="#replaced-method" aria-hidden="true">#</a> replaced-method</h4><p>\u8BB0\u4F4F\u5B83\u7684\u529F\u80FD\uFF0C\u5C31\u662F\u66FF\u6362\u6389 bean \u4E2D\u7684\u4E00\u4E9B\u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyValueCalculator</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">computeValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// some real code...</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// some other methods...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B9\u6CD5\u8986\u5199\uFF0C\u6CE8\u610F\u8981\u5B9E\u73B0 MethodReplacer \u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReplacementComputeValue</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>MethodReplacer</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">reimplement</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">,</span> <span class="token class-name">Method</span> m<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token comment">// get the input value, work with it, and return a computed result</span>
        <span class="token class-name">String</span> input <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u914D\u7F6E\u4E5F\u5F88\u7B80\u5355\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myValueCalculator<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x.y.z.MyValueCalculator<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- \u5B9A\u4E49 computeValue \u8FD9\u4E2A\u65B9\u6CD5\u8981\u88AB\u66FF\u6362\u6389 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>replaced-method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>computeValue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">replacer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>replacementComputeValue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg-type</span><span class="token punctuation">&gt;</span></span>String<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>arg-type</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>replaced-method</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>replacementComputeValue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a.b.c.ReplacementComputeValue<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>arg-type \u660E\u663E\u4E0D\u662F\u5FC5\u987B\u7684\uFF0C\u9664\u975E\u5B58\u5728\u65B9\u6CD5\u91CD\u8F7D\uFF0C\u8FD9\u6837\u5FC5\u987B\u901A\u8FC7\u53C2\u6570\u7C7B\u578B\u5217\u8868\u6765\u5224\u65AD\u8FD9\u91CC\u8981\u8986\u76D6\u54EA\u4E2A\u65B9\u6CD5\u3002</p></blockquote><h3 id="beanpostprocessor" tabindex="-1"><a class="header-anchor" href="#beanpostprocessor" aria-hidden="true">#</a> BeanPostProcessor</h3><p>\u5E94\u8BE5\u8BF4 BeanPostProcessor \u6982\u5FF5\u5728 Spring \u4E2D\u4E5F\u662F\u6BD4\u8F83\u91CD\u8981\u7684\u3002\u6211\u4EEC\u770B\u4E0B\u63A5\u53E3\u5B9A\u4E49\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span>

   <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">;</span>

   <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u8FD9\u4E2A\u63A5\u53E3\u4E2D\u7684\u4E24\u4E2A\u65B9\u6CD5\u540D\u5B57\u6211\u4EEC\u5927\u4F53\u4E0A\u53EF\u4EE5\u731C\u6D4B bean \u5728\u521D\u59CB\u5316\u4E4B\u524D\u4F1A\u6267\u884C postProcessBeforeInitialization \u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u521D\u59CB\u5316\u5B8C\u6210\u4E4B\u540E\u4F1A\u6267\u884C postProcessAfterInitialization \u8FD9\u4E2A\u65B9\u6CD5\u3002\u4F46\u662F\uFF0C\u8FD9\u4E48\u7406\u89E3\u662F\u975E\u5E38\u7247\u9762\u7684\u3002</p><p>\u9996\u5148\uFF0C\u6211\u4EEC\u8981\u660E\u767D\uFF0C\u9664\u4E86\u6211\u4EEC\u81EA\u5DF1\u5B9A\u4E49\u7684 BeanPostProcessor \u5B9E\u73B0\u5916\uFF0CSpring \u5BB9\u5668\u5728\u542F\u52A8\u65F6\u81EA\u52A8\u7ED9\u6211\u4EEC\u4E5F\u52A0\u4E86\u51E0\u4E2A\u3002\u5982\u5728\u83B7\u53D6 BeanFactory \u7684 obtainFactory() \u65B9\u6CD5\u7ED3\u675F\u540E\u7684 prepareBeanFactory(factory)\uFF0C\u5927\u5BB6\u4ED4\u7EC6\u770B\u4F1A\u53D1\u73B0\uFF0CSpring \u5F80\u5BB9\u5668\u4E2D\u6DFB\u52A0\u4E86\u8FD9\u4E24\u4E2A BeanPostProcessor\uFF1AApplicationContextAwareProcessor\u3001ApplicationListenerDetector\u3002</p><p>\u6211\u4EEC\u56DE\u5230\u8FD9\u4E2A\u63A5\u53E3\u672C\u8EAB\uFF0C\u8BFB\u8005\u8BF7\u770B\u7B2C\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u63A5\u53D7\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F bean \u5B9E\u4F8B\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F bean \u7684\u540D\u5B57\uFF0C\u91CD\u70B9\u5728\u8FD4\u56DE\u503C\u5C06\u4F1A\u4F5C\u4E3A\u65B0\u7684 bean \u5B9E\u4F8B\uFF0C\u6240\u4EE5\uFF0C\u6CA1\u4E8B\u7684\u8BDD\u8FD9\u91CC\u4E0D\u80FD\u968F\u4FBF\u8FD4\u56DE\u4E2A null\u3002</p><p>\u90A3\u610F\u5473\u7740\u4EC0\u4E48\u5462\uFF1F\u6211\u4EEC\u5F88\u5BB9\u6613\u60F3\u5230\u7684\u5C31\u662F\uFF0C\u6211\u4EEC\u8FD9\u91CC\u53EF\u4EE5\u5BF9\u4E00\u4E9B\u6211\u4EEC\u60F3\u8981\u4FEE\u9970\u7684 bean \u5B9E\u4F8B\u505A\u4E00\u4E9B\u4E8B\u60C5\u3002\u4F46\u662F\u5BF9\u4E8E Spring \u6846\u67B6\u6765\u8BF4\uFF0C\u5B83\u4F1A\u51B3\u5B9A\u662F\u4E0D\u662F\u8981\u5728\u8FD9\u4E2A\u65B9\u6CD5\u4E2D\u8FD4\u56DE bean \u5B9E\u4F8B\u7684\u4EE3\u7406\uFF0C\u8FD9\u6837\u5C31\u6709\u66F4\u5927\u7684\u60F3\u8C61\u7A7A\u95F4\u4E86\u3002</p><p>\u6700\u540E\uFF0C\u6211\u4EEC\u8BF4\u8BF4\u5982\u679C\u6211\u4EEC\u81EA\u5DF1\u5B9A\u4E49\u4E00\u4E2A bean \u5B9E\u73B0 BeanPostProcessor \u7684\u8BDD\uFF0C\u5B83\u7684\u6267\u884C\u65F6\u673A\u662F\u4EC0\u4E48\u65F6\u5019\uFF1F</p><p>\u5982\u679C\u4ED4\u7EC6\u770B\u4E86\u4EE3\u7801\u5206\u6790\u7684\u8BDD\uFF0C\u5176\u5B9E\u5F88\u5BB9\u6613\u77E5\u9053\u4E86\uFF0C\u5728 bean \u5B9E\u4F8B\u5316\u5B8C\u6210\u3001\u5C5E\u6027\u6CE8\u5165\u5B8C\u6210\u4E4B\u540E\uFF0C\u4F1A\u6267\u884C\u56DE\u8C03\u65B9\u6CD5\uFF0C\u5177\u4F53\u8BF7\u53C2\u89C1\u7C7B AbstractAutowireCapableBeanFactory#initBean \u65B9\u6CD5\u3002</p><p>\u9996\u5148\u4F1A\u56DE\u8C03\u51E0\u4E2A\u5B9E\u73B0\u4E86 Aware \u63A5\u53E3\u7684 bean\uFF0C\u7136\u540E\u5C31\u5F00\u59CB\u56DE\u8C03 BeanPostProcessor \u7684 postProcessBeforeInitialization \u65B9\u6CD5\uFF0C\u4E4B\u540E\u662F\u56DE\u8C03 init-method\uFF0C\u7136\u540E\u518D\u56DE\u8C03 BeanPostProcessor \u7684 postProcessAfterInitialization \u65B9\u6CD5\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u6309\u7406\u8BF4\uFF0C\u603B\u7ED3\u5E94\u8BE5\u5199\u5728\u9644\u5F55\u524D\u9762\uFF0C\u6211\u5C31\u4E0D\u8BB2\u7A76\u4E86\u3002</p><p>\u5728\u82B1\u4E86\u90A3\u4E48\u591A\u65F6\u95F4\u540E\uFF0C\u8FD9\u7BC7\u6587\u7AE0\u7EC8\u4E8E\u7B97\u662F\u57FA\u672C\u5199\u5B8C\u4E86\uFF0C\u5927\u5BB6\u5728\u60CA\u53F9 Spring \u7ED9\u6211\u4EEC\u505A\u4E86\u90A3\u4E48\u591A\u7684\u4E8B\u7684\u65F6\u5019\uFF0C\u5E94\u8BE5\u900F\u8FC7\u73B0\u8C61\u770B\u672C\u8D28\uFF0C\u53BB\u7406\u89E3 Spring \u5199\u5F97\u597D\u7684\u5730\u65B9\uFF0C\u53BB\u7406\u89E3\u5B83\u7684\u8BBE\u8BA1\u601D\u60F3\u3002</p><p>\u672C\u6587\u7684\u7F3A\u9677\u5728\u4E8E\u5BF9 Spring \u9884\u521D\u59CB\u5316 singleton beans \u7684\u8FC7\u7A0B\u5206\u6790\u4E0D\u591F\uFF0C\u4E3B\u8981\u662F\u4EE3\u7801\u91CF\u771F\u7684\u6BD4\u8F83\u5927\uFF0C\u5206\u652F\u65C1\u8DEF\u4F17\u591A\u3002\u540C\u65F6\uFF0C\u867D\u7136\u9644\u5F55\u6761\u76EE\u4E0D\u5C11\uFF0C\u4F46\u662F\u5E9E\u5927\u7684 Spring \u771F\u7684\u5F15\u51FA\u4E86\u5F88\u591A\u7684\u6982\u5FF5\uFF0C\u5E0C\u671B\u65E5\u540E\u6709\u7CBE\u529B\u53EF\u4EE5\u6162\u6162\u8865\u5145\u4E00\u4E9B\u3002</p><p>\uFF08\u5168\u6587\u5B8C\uFF09</p>`,113);function w(h,B){const t=i("ExternalLinkIcon");return o(),c("div",null,[u,s("p",null,[k,s("a",r,[d,e(t)]),v]),m,s("p",null,[b,s("a",g,[f,e(t)])]),y])}var S=p(l,[["render",w],["__file","SpringIOC.html.vue"]]);export{S as default};
