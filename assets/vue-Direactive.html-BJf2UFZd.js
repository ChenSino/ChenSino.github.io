import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-TdR3A7lU.js";const e={},p=t(`<h2 id="一-自定义指令介绍" tabindex="-1"><a class="header-anchor" href="#一-自定义指令介绍"><span>一，自定义指令介绍</span></a></h2><p>除了 Vue 内置的一系列指令 (比如 v-model 或 v-show) 之外，Vue 还允许你注册自定义的指令 (Custom Directives)。</p><p>vue中重用代码,3种方式：</p><ol><li>​ 组件 --组件是主要的构建模块</li><li>​ 组合式函数--主要是侧重于有状态的逻辑</li><li>​ 自定义指令--主要是为了重用涉及普通元素的底层DOM访问的逻辑</li></ol><h2 id="二-注册自定义指令" tabindex="-1"><a class="header-anchor" href="#二-注册自定义指令"><span>二，注册自定义指令</span></a></h2><p>2.1 局部注册</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code>
const focus = {
  mounted: (el) =&gt; el.focus()
}
export default {
  directives: {
    // 在模板中启用 v-focus
    focus
  }
}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-focus</span> <span class="token punctuation">/&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.2 全局注册</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 使 v-focus 在所有组件中都可用</span>
app<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">&#39;focus&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-指令钩子" tabindex="-1"><a class="header-anchor" href="#三-指令钩子"><span>三，指令钩子</span></a></h2><p>一个指令的定义对象可以提供几种钩子函数 (都是可选的)：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token keyword">const</span> myDirective <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在绑定元素的 attribute 前</span>
  <span class="token comment">// 或事件监听器应用前调用</span>
  <span class="token function">created</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> prevVnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 下面会介绍各个参数的细节</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 在元素被插入到 DOM 前调用</span>
  <span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> prevVnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 在绑定元素的父组件</span>
  <span class="token comment">// 及他自己的所有子节点都挂载完成后调用</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> prevVnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 绑定元素的父组件更新前调用</span>
  <span class="token function">beforeUpdate</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> prevVnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 在绑定元素的父组件</span>
  <span class="token comment">// 及他自己的所有子节点都更新后调用</span>
  <span class="token function">updated</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> prevVnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 绑定元素的父组件卸载前调用</span>
  <span class="token function">beforeUnmount</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> prevVnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 绑定元素的父组件卸载后调用</span>
  <span class="token function">unmounted</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> prevVnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四-钩子函数的参数" tabindex="-1"><a class="header-anchor" href="#四-钩子函数的参数"><span>四，钩子函数的参数</span></a></h2><p>指令的钩子会传递以下几种参数：</p><ul><li>el：指令绑定到的元素。这可以用于直接操作 DOM。</li><li>binding：一个对象，包含以下属性。</li><li>value：传递给指令的值。例如在 v-my-directive=&quot;1 + 1&quot; 中，值是 2。</li><li>oldValue：之前的值，仅在 beforeUpdate 和 updated 中可用。无论值是否更改，它都可用。</li><li>arg：传递给指令的参数 (如果有的话)。例如在 v-my-directive:foo 中，参数是 &quot;foo&quot;。</li><li>modifiers：一个包含修饰符的对象 (如果有的话)。例如在 v-my-directive.foo.bar 中，修饰符对象是 { foo: true, bar: true }。</li><li>instance：使用该指令的组件实例。</li><li>dir：指令的定义对象。</li><li>vnode：代表绑定元素的底层 VNode。</li><li>prevNode：之前的渲染中代表指令所绑定元素的 VNode。仅在 beforeUpdate 和 updated 钩子中可用。</li></ul><h2 id="五-实际使用" tabindex="-1"><a class="header-anchor" href="#五-实际使用"><span>五，实际使用</span></a></h2><p>5.1 使用自定义指令实现按钮级别的权限控制</p><p>比如在实际项目工程列表中，我们使用自定义指令来控制权限</p><p>1，我们首先列出工程模块所有的权限按钮</p><p>2，对比用户登录时，后台返回的按钮权限，有就显示，没有就不显示</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token comment">//后台返回的权限</span>

Pages<span class="token punctuation">.</span>ProjectCreation<span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
Pages<span class="token punctuation">.</span>ProjectCreation<span class="token punctuation">.</span>Create<span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
Pages<span class="token punctuation">.</span>ProjectCreation<span class="token punctuation">.</span>Download<span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
Pages<span class="token punctuation">.</span>ProjectCreation<span class="token punctuation">.</span>Edit<span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
Pages<span class="token punctuation">.</span>ProjectCreation<span class="token punctuation">.</span>Import<span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
Pages<span class="token punctuation">.</span>ProjectCreation<span class="token punctuation">.</span>Query<span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>
Pages<span class="token punctuation">.</span>ProjectCreation<span class="token punctuation">.</span>Revise<span class="token operator">:</span> <span class="token string">&quot;true&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>
//在工程列表页列出所有按钮--再根据自定义指令控制是否显示

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-auth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Query&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>查看<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-auth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Add&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-auth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Edit&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>编辑<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-auth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Cope&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>复制<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-auth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Import&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>上传<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-auth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Download&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token comment">// src/authDirective.ts </span>
<span class="token comment">/*
在自定义指令值中判断权限，来控制相应按钮的显示与否
*/</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">authDirective</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">app</span><span class="token operator">:</span> App</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 单个权限验证（v-auth=&quot;xxx&quot;）</span>
    app<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">&#39;auth&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> binding<span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
            <span class="token keyword">let</span> config <span class="token operator">=</span> Local<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;config&#39;</span><span class="token punctuation">)</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>grantedPermissions<span class="token punctuation">)</span>
            <span class="token comment">// 当前用户权限列表</span>
            <span class="token keyword">let</span> permission <span class="token operator">=</span> config<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>grantedPermissions<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>permission<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">v</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v <span class="token operator">===</span> binding<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    el<span class="token punctuation">.</span>parentNode <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token punctuation">}</span>     
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","vue-Direactive.html.vue"]]),k=JSON.parse('{"path":"/frontweb/vue/vue-Direactive.html","title":"vue自定义指令控制按钮级别权限","lang":"zh-CN","frontmatter":{"title":"vue自定义指令控制按钮级别权限","date":"2022-07-13T00:00:00.000Z","author":"qianxun","category":["vue知识点"],"tag":["必会"],"description":"一，自定义指令介绍 除了 Vue 内置的一系列指令 (比如 v-model 或 v-show) 之外，Vue 还允许你注册自定义的指令 (Custom Directives)。 vue中重用代码,3种方式： ​ 组件 --组件是主要的构建模块 ​ 组合式函数--主要是侧重于有状态的逻辑 ​ 自定义指令--主要是为了重用涉及普通元素的底层DOM访问的逻辑...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/frontweb/vue/vue-Direactive.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"vue自定义指令控制按钮级别权限"}],["meta",{"property":"og:description","content":"一，自定义指令介绍 除了 Vue 内置的一系列指令 (比如 v-model 或 v-show) 之外，Vue 还允许你注册自定义的指令 (Custom Directives)。 vue中重用代码,3种方式： ​ 组件 --组件是主要的构建模块 ​ 组合式函数--主要是侧重于有状态的逻辑 ​ 自定义指令--主要是为了重用涉及普通元素的底层DOM访问的逻辑..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-10-14T01:57:54.000Z"}],["meta",{"property":"article:author","content":"qianxun"}],["meta",{"property":"article:tag","content":"必会"}],["meta",{"property":"article:published_time","content":"2022-07-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-10-14T01:57:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue自定义指令控制按钮级别权限\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-13T00:00:00.000Z\\",\\"dateModified\\":\\"2022-10-14T01:57:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"qianxun\\"}]}"]]},"headers":[{"level":2,"title":"一，自定义指令介绍","slug":"一-自定义指令介绍","link":"#一-自定义指令介绍","children":[]},{"level":2,"title":"二，注册自定义指令","slug":"二-注册自定义指令","link":"#二-注册自定义指令","children":[]},{"level":2,"title":"三，指令钩子","slug":"三-指令钩子","link":"#三-指令钩子","children":[]},{"level":2,"title":"四，钩子函数的参数","slug":"四-钩子函数的参数","link":"#四-钩子函数的参数","children":[]},{"level":2,"title":"五，实际使用","slug":"五-实际使用","link":"#五-实际使用","children":[]}],"git":{"createdTime":1659362219000,"updatedTime":1665712674000,"contributors":[{"name":"zhu","email":"819508408@qq.com","commits":3},{"name":"chenkun","email":"462488588@qq.com","commits":1}]},"readingTime":{"minutes":2.99,"words":898},"filePathRelative":"frontweb/vue/vue-Direactive.md","localizedDate":"2022年7月13日","excerpt":"<!--more-->\\n<h2>一，自定义指令介绍</h2>\\n<p>除了 Vue 内置的一系列指令 (比如 v-model 或 v-show) 之外，Vue 还允许你注册自定义的指令 (Custom Directives)。</p>\\n<p>vue中重用代码,3种方式：</p>\\n<ol>\\n<li>​\\t组件 --组件是主要的构建模块</li>\\n<li>​\\t组合式函数--主要是侧重于有状态的逻辑</li>\\n<li>​\\t自定义指令--主要是为了重用涉及普通元素的底层DOM访问的逻辑</li>\\n</ol>\\n<h2>二，注册自定义指令</h2>\\n<p>2.1  局部注册</p>\\n<div class=\\"language-vue\\" data-ext=\\"vue\\" data-title=\\"vue\\"><pre class=\\"language-vue\\"><code>\\nconst focus = {\\n  mounted: (el) =&gt; el.focus()\\n}\\nexport default {\\n  directives: {\\n    // 在模板中启用 v-focus\\n    focus\\n  }\\n}\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>input</span> <span class=\\"token attr-name\\">v-focus</span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
