import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,e as s}from"./app-DaXuKV75.js";const t={},l=s(`<h3 id="_1、查找多个文件中是否包含字符串" tabindex="-1"><a class="header-anchor" href="#_1、查找多个文件中是否包含字符串"><span>1、查找多个文件中是否包含字符串</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token parameter variable">-r</span> targetString targetDirectory
<span class="token comment"># -r 表示递归查询</span>
<span class="token comment"># targetString  表示目标字符串</span>
<span class="token comment"># targetDirectory 表示目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多功能： -r 是递归查找 -n 是显示行号 -R 查找所有文件包含子目录 -i 忽略大小写 xargs配合grep查找</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-name</span> <span class="token string">&#39;*.php&#39;</span><span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">grep</span> <span class="token string">&#39;message&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2、高亮关键字" tabindex="-1"><a class="header-anchor" href="#_2、高亮关键字"><span>2、高亮关键字</span></a></h3><p>在生产环境查看日志时高亮<code>ERROR</code>关键字，方便定位问题，这里利用linux管道加上<code>perl</code>在管道中替换</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-f</span> xxx.log <span class="token operator">|</span> perl <span class="token parameter variable">-pe</span> <span class="token string">&#39;s/(ERROR)/\\e[1;31m$1\\e[0m/g&#39;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参考：https://www.cnblogs.com/Detector/p/7246377.html</p><h3 id="_3、查询大文件" tabindex="-1"><a class="header-anchor" href="#_3、查询大文件"><span>3、查询大文件</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#查看当前路径下各目录占用空间大小</span>
<span class="token function">du</span> <span class="token parameter variable">-h</span> --max-depth<span class="token operator">=</span><span class="token number">1</span>
<span class="token comment"># 查看文件大小</span>
<span class="token function">find</span> / <span class="token parameter variable">-type</span> f <span class="token parameter variable">-size</span> +50M
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、查看文件被哪个进程占用" tabindex="-1"><a class="header-anchor" href="#_4、查看文件被哪个进程占用"><span>4、查看文件被哪个进程占用</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">lsof</span> sentinel-record.log.2022-04-28.0
COMMAND   PID <span class="token environment constant">USER</span>   FD   TYPE DEVICE SIZE/OFF   NODE NAME
<span class="token function">java</span>    <span class="token number">28789</span> root   23w   REG  <span class="token number">253,1</span>    <span class="token number">17941</span> <span class="token number">132492</span> sentinel-record.log.2022-04-28.0

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、看开机启动项启动耗时" tabindex="-1"><a class="header-anchor" href="#_5、看开机启动项启动耗时"><span>5、看开机启动项启动耗时</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ systemd-analyze blame        
<span class="token number">6</span>.925s NetworkManager-wait-online.service
<span class="token number">2</span>.583s snapd.service
<span class="token number">2</span>.027s systemd-modules-load.service
<span class="token number">1</span>.928s linux-module-cleanup.service
<span class="token number">1</span>.744s mariadb.service
<span class="token number">1</span>.168s systemd-random-seed.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、curl命令" tabindex="-1"><a class="header-anchor" href="#_6、curl命令"><span>6、Curl命令</span></a></h3><p><em>更详细的用法请参考手册<code>man curl</code></em></p><ol><li>示例1,发送post请求，携带请求头，并且请求体中带form-data</li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>curl -X POST -F &quot;file=@/home/test/installrecorc.xlsx&quot; -H &quot;Authorization:Bearer 92e1622a-1fc8-40ea-b70a-937be40a3347&quot; localhost:6061/import/installRecord
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ -X: 指定请求方法</p><p>​ -F：带表单的请求，指定文件</p><p>​ -H：带请求头</p><ol start="2"><li><p>示例2,下载文件</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#   使用-o，修改下载下载的文件名</span>
<span class="token function">curl</span> <span class="token parameter variable">-o</span> manjaro-kde-21.2.6-220416-linux515.iso  https://download.manjaro.org/kde/21.2.6/manjaro-kde-21.2.6-220416-linux515.iso
<span class="token comment"># -O,不修改文件名，直接使用服务器上的文件吗</span>
<span class="token function">curl</span> <span class="token parameter variable">-O</span> https://download.manjaro.org/kde/21.2.6/manjaro-kde-21.2.6-220416-linux515.iso
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_7、strace命令" tabindex="-1"><a class="header-anchor" href="#_7、strace命令"><span>7、strace命令</span></a></h3><p>strace常用来跟踪进程执行时的系统调用和所接收的信号。 在Linux世界，进程不能直接访问硬件设备，当进程需要访问硬件设备(比如读取磁盘文件，接收网络数据等等)时，必须由用户态模式切换至内核态模式，通 过系统调用访问硬件设备。strace可以跟踪到一个进程产生的系统调用,包括参数，返回值，执行消耗的时间。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">strace</span> <span class="token parameter variable">-ff</span> <span class="token parameter variable">-o</span> <span class="token operator">&lt;</span>prefix<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>comand<span class="token operator">&gt;</span>
<span class="token comment">### 查看java执行时，内核调用情况</span>
<span class="token comment"># 把内核调用的日志，按照线程分别记录到xxx开头的文件中，在linux中线程其实就是一个进程</span>
<span class="token function">strace</span> <span class="token parameter variable">-ff</span> <span class="token parameter variable">-o</span> xxxx <span class="token function">java</span> <span class="token parameter variable">-jar</span> Hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8、-nc命令" tabindex="-1"><a class="header-anchor" href="#_8、-nc命令"><span>8、 nc命令</span></a></h3><p>nc命令可以扮演http三次握手的连接过程，执行一下nc命令就等于建立连接，连接后 enter就可以发送内容，发送的内容只要服务端能解析即可（这里就需要客户端和服务端约定好一个大家都认识的协议，我发的内容你可以解析，你发的内容我也可以解析，达到交互目的）</p><p>这里扩展一下http和tcp,上面说了nc负责建立连接，至于连接之后发送的内容其实就需要两端约定好，这个数据格式的约定就是http所负责的。在浏览器中，一个http请求我们可以看到请求行、请求头、请求体等内容，这就是http的约定的格式，你按照这个格式去发送，我服务端和客户端才都可以解析。http是基于tcp的，由tcp负责连接（三次握手），然后http按照指定的格式发送，所以http和tcp并不是同一个层面的东西，一句话总结，http负责报文格式约定，tcp负责建立连接，发送数据。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># manjaro先安装</span>
<span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> netcat

<span class="token comment">## 连接指定主机的某个端口，</span>
<span class="token function">nc</span> <span class="token operator">&lt;</span>ip<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>port<span class="token operator">&gt;</span>

<span class="token comment">#</span>
<span class="token function">nc</span> localhost <span class="token number">8080</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9、tcpdump抓包" tabindex="-1"><a class="header-anchor" href="#_9、tcpdump抓包"><span>9、tcpdump抓包</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">##监听指定网卡，指定的端口，配合nc命令可以清晰的查看tcp的三次握手情况</span>
tcpdump <span class="token parameter variable">-nn</span> <span class="token parameter variable">-i</span> <span class="token operator">&lt;</span>网卡id<span class="token operator">&gt;</span> port <span class="token operator">&lt;</span>port<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,31),i=[l];function r(c,p){return e(),n("div",null,i)}const m=a(t,[["render",r],["__file","CommonUsedCMD.html.vue"]]),u=JSON.parse('{"path":"/other/linux/CommonUsedCMD.html","title":"常用命令","lang":"zh-CN","frontmatter":{"title":"常用命令","date":"2022-03-17T00:00:00.000Z","author":"chenkun","publish":true,"keys":null,"description":"1、查找多个文件中是否包含字符串 更多功能： -r 是递归查找 -n 是显示行号 -R 查找所有文件包含子目录 -i 忽略大小写 xargs配合grep查找 2、高亮关键字 在生产环境查看日志时高亮ERROR关键字，方便定位问题，这里利用linux管道加上perl在管道中替换 参考：https://www.cnblogs.com/Detector/p/...","head":[["meta",{"property":"og:url","content":"https://ChenSino.github.io/other/linux/CommonUsedCMD.html"}],["meta",{"property":"og:site_name","content":"ChenSino"}],["meta",{"property":"og:title","content":"常用命令"}],["meta",{"property":"og:description","content":"1、查找多个文件中是否包含字符串 更多功能： -r 是递归查找 -n 是显示行号 -R 查找所有文件包含子目录 -i 忽略大小写 xargs配合grep查找 2、高亮关键字 在生产环境查看日志时高亮ERROR关键字，方便定位问题，这里利用linux管道加上perl在管道中替换 参考：https://www.cnblogs.com/Detector/p/..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T03:45:12.000Z"}],["meta",{"property":"article:author","content":"chenkun"}],["meta",{"property":"article:published_time","content":"2022-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T03:45:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用命令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-22T03:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"chenkun\\"}]}"]]},"headers":[{"level":3,"title":"1、查找多个文件中是否包含字符串","slug":"_1、查找多个文件中是否包含字符串","link":"#_1、查找多个文件中是否包含字符串","children":[]},{"level":3,"title":"2、高亮关键字","slug":"_2、高亮关键字","link":"#_2、高亮关键字","children":[]},{"level":3,"title":"3、查询大文件","slug":"_3、查询大文件","link":"#_3、查询大文件","children":[]},{"level":3,"title":"4、查看文件被哪个进程占用","slug":"_4、查看文件被哪个进程占用","link":"#_4、查看文件被哪个进程占用","children":[]},{"level":3,"title":"5、看开机启动项启动耗时","slug":"_5、看开机启动项启动耗时","link":"#_5、看开机启动项启动耗时","children":[]},{"level":3,"title":"6、Curl命令","slug":"_6、curl命令","link":"#_6、curl命令","children":[]},{"level":3,"title":"7、strace命令","slug":"_7、strace命令","link":"#_7、strace命令","children":[]},{"level":3,"title":"8、 nc命令","slug":"_8、-nc命令","link":"#_8、-nc命令","children":[]},{"level":3,"title":"9、tcpdump抓包","slug":"_9、tcpdump抓包","link":"#_9、tcpdump抓包","children":[]}],"git":{"createdTime":1659362219000,"updatedTime":1711079112000,"contributors":[{"name":"ChenSino","email":"462488588@qq.com","commits":2},{"name":"ChenSino","email":"chenxk@sonoscape.net","commits":1},{"name":"chenkun","email":"462488588@qq.com","commits":1}]},"readingTime":{"minutes":3.29,"words":986},"filePathRelative":"other/linux/CommonUsedCMD.md","localizedDate":"2022年3月17日","excerpt":"<!--more-->\\n<h3>1、查找多个文件中是否包含字符串</h3>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">grep</span> <span class=\\"token parameter variable\\">-r</span> targetString targetDirectory\\n<span class=\\"token comment\\"># -r 表示递归查询</span>\\n<span class=\\"token comment\\"># targetString  表示目标字符串</span>\\n<span class=\\"token comment\\"># targetDirectory 表示目录</span>\\n</code></pre></div>","autoDesc":true}');export{m as comp,u as data};
