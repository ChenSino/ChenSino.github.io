import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as e,b as n,a as c,d as s,e as o,r as i}from"./app.7dda0607.js";const l={},u=n("h2",{id:"\u4E00-async\u51FD\u6570\u7684\u5B9A\u4E49",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4E00-async\u51FD\u6570\u7684\u5B9A\u4E49","aria-hidden":"true"},"#"),s(" \u4E00\uFF0Casync\u51FD\u6570\u7684\u5B9A\u4E49")],-1),k=s("async\u51FD\u6570\u662F\u4F7F\u7528async\u5173\u952E\u5B57\u58F0\u660E\u7684\u51FD\u6570\u3002 \u5E76\u4E14\u5176\u4E2D\u5141\u8BB8\u4F7F\u7528await\u5173\u952E\u5B57\u3002async\u548Cawait\u5173\u952E\u5B57\u8BA9\u6211\u4EEC\u53EF\u4EE5\u7528\u4E00\u79CD\u66F4\u7B80\u6D01\u7684\u65B9\u5F0F\u5199\u51FA\u57FA\u4E8E"),r={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},d=s("Promise"),v=s("\u7684"),m=n("strong",null,"\u5F02\u6B65\u884C\u4E3A",-1),b=s("\uFF0C\u800C\u65E0\u9700\u523B\u610F\u5730\u94FE\u5F0F\u8C03\u7528promise\u3002"),y=o(`<blockquote><p><strong>\u5907\u6CE8\uFF1A</strong><code>async</code>/<code>await</code>\u7684\u76EE\u7684\u4E3A\u4E86\u7B80\u5316\u4F7F\u7528\u57FA\u4E8E promise \u7684 API \u65F6\u6240\u9700\u7684\u8BED\u6CD5\u3002<code>async</code>/<code>await</code>\u7684\u884C\u4E3A\u5C31\u597D\u50CF\u642D\u914D\u4F7F\u7528\u4E86\u751F\u6210\u5668\u548C promise\u3002</p></blockquote><p>async\u51FD\u6570\u7684\u4E66\u5199\u65B9\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u51FD\u6570\u58F0\u660E</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u51FD\u6570\u8868\u8FBE\u5F0F</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u5BF9\u8C61\u7684\u65B9\u6CD5</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token keyword">async</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>

<span class="token comment">// Class \u7684\u65B9\u6CD5</span>
<span class="token keyword">class</span> <span class="token class-name">Storage</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cachePromise <span class="token operator">=</span> caches<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;avatars&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">getAvatar</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cachePromise<span class="token punctuation">;</span>
    <span class="token keyword">return</span> cache<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/avatars/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.jpg</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> storage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
storage<span class="token punctuation">.</span><span class="token function">getAvatar</span><span class="token punctuation">(</span><span class="token string">&#39;jake&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>\u2026<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7BAD\u5934\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1.1 \u4E00\u4E2A\u4E0D\u542Bawait\u8868\u8FBE\u5F0F\u7684async\u51FD\u6570\u662F\u4F1A\u540C\u6B65\u8FD0\u884C\u7684\u3002\u6CA1\u6709<strong>await</strong> \u7684\u60C5\u51B5\u4E0B\u6267\u884C async \u51FD\u6570\uFF0C\u5B83\u4F1A\u7ACB\u5373\u6267\u884C\uFF0C\u8FD4\u56DE \u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u5E76\u4E14\u7EDD\u4E0D\u4F1A\u963B\u585E\u540E\u9762\u7684\u8BED\u53E5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async\u5185\u90E8&#39;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async\u5916\u90E8&#39;</span><span class="token punctuation">)</span> 
 
 <span class="token comment">//\u7531\u4E8E\u6CA1\u6709await\uFF0C\u6B64\u65F6async\u51FD\u6570\u540C\u6B65\u6267\u884C  \u6253\u5370\u7ED3\u679C\u987A\u5E8F  async\u5185\u90E8--async\u5916\u90E8</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u51FD\u6570\u4F53\u5185\u6709\u4E00\u4E2Aawait\u8868\u8FBE\u5F0F\uFF0Casync\u51FD\u6570\u5C31\u4E00\u5B9A\u4F1A\u5F02\u6B65\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token number">5</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">444</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>
    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">333</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>



<span class="token doc-comment comment">/**\u6253\u5370\u7ED3\u679C
111,
222\uFF0C
333,
444
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C-async\u51FD\u6570\u7684\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u4E8C-async\u51FD\u6570\u7684\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u4E8C\uFF0Casync\u51FD\u6570\u7684\u8FD4\u56DE\u503C</h2><p><strong>async \u51FD\u6570\u4E00\u5B9A\u4F1A\u8FD4\u56DE\u4E00\u4E2A promise \u5BF9\u8C61\u3002\u5982\u679C\u4E00\u4E2A async \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u770B\u8D77\u6765\u4E0D\u662F promise\uFF0C\u90A3\u4E48\u5B83\u5C06\u4F1A\u88AB\u9690\u5F0F\u5730\u5305\u88C5\u5728\u4E00\u4E2A promise \u4E2D</strong>\u3002</p><p>2.1 \u5982\u679C\u5728\u51FD\u6570\u4E2D return \u4E00\u4E2A\u76F4\u63A5\u91CF\uFF0Casync \u4F1A\u628A\u8FD9\u4E2A\u76F4\u63A5\u91CF\u901A\u8FC7 Promise.resolve() \u5C01\u88C5\u6210 Promise \u5BF9\u8C61\u3002\u5F53 async \u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u503C\u65F6\uFF0C\u8FD4\u56DE Promise.resolve(undefined)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u7B49\u4EF7\u4E8E</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u666E\u901A\u51FD\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32</span>
 <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token string">&quot;hello async&quot;</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">const</span> result1 <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8F93\u51FA\u4E00\u4E2A\u5B57\u7B26\u4E32 hello async</span>
 \u200B
 <span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u4F7F\u7528\u4E86async\u4FEE\u9970\u7684\u51FD\u6570\uFF0C\u540C\u6837\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32</span>
 <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token string">&quot;hello async&quot;</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8F93\u51FA\u4E00\u4E2APromise\u5BF9\u8C61 Promise {&lt;fulfilled&gt;: &#39;hello async&#39;}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>async\u8F83\u597D\u7684\u7528\u6CD5-sync\u901A\u5E38\u7528\u4E8E\u58F0\u660E\u4E00\u4E2A\u5904\u7406\u5F02\u6B65\u4EFB\u52A1\u4E14\u8FD4\u56DE\u4E86Promise\u5BF9\u8C61\u7684\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
 <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token comment">//\u8FD4\u56DE\u4E00\u4E2APromise\u5BF9\u8C61</span>
     <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
         <span class="token comment">//\u5904\u7406\u5F02\u6B65\u4EFB\u52A1</span>
         <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;testAsync&quot;</span><span class="token punctuation">)</span>
         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.2 async\u5185\u90E8return\u8BED\u53E5\u7684\u8FD4\u56DE\u503C\uFF0C\u4F1A\u6210\u4E3Athen\u65B9\u6CD5\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u3002(\u56E0\u4E3Aasync\u51FD\u6570\u8FD4\u56DE\u7684\u662Fpromise\u5BF9\u8C61)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token string">&quot;hello async&quot;</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>   <span class="token comment">//&quot;hello async&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.3 await\u5173\u952E\u5B57\u53EA\u80FD\u4F7F\u7528\u5728\u88ABasync\u58F0\u660E\u7684\u51FD\u6570\u5185\uFF0C<strong>\u7528\u4E8E\u4FEE\u9970\u4E00\u4E2APromise\u5BF9\u8C61</strong>\uFF0C\u4F7F\u5F97\u8BE5Promise\u5BF9\u8C61\u5904\u7406\u7684\u5F02\u6B65\u4EFB\u52A1\u5728\u5F53\u524D\u534F\u7A0B\u4E0A\u6309\u987A\u5E8F\u540C\u6B65\u6267\u884C\u3002</p><p>\u5B9A\u4E49\u4E00\u4E2A\u4F7F\u7528async\u4FEE\u9970\u7684\u51FD\u6570\uFF0C\u5904\u7406\u5F02\u6B65\u4EFB\u52A1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
         <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;testAsync&quot;</span><span class="token punctuation">)</span>
         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\uFF0C\u76F4\u63A5\u8C03\u7528testAsync\u51FD\u6570</span>
 <span class="token keyword">function</span> <span class="token function">testAwait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testAsync\u8C03\u7528\u524D&#39;</span><span class="token punctuation">)</span>
     <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">//\u8F93\u51FA&quot;testAsync&quot;</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testAsync\u8C03\u7528\u540E&#39;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 \u200B
 <span class="token doc-comment comment">/***** \u8F93\u51FA\u5982\u4E0B *****/</span>
 testAsync\u8C03\u7528\u524D
 testAsync\u8C03\u7528\u540E
 testAsync
 <span class="token comment">//\u5C3D\u7BA1\u4EE3\u7801\u6309\u987A\u5E8F\u5199\uFF0C\u4F46\u4E0D\u6309\u987A\u5E8F\u6267\u884C\uFF0C\u56E0\u4E3AtestAsync()\u662F\u5F02\u6B65\u51FD\u6570</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\uFF08\u4F7F\u7528async\u58F0\u660E\u8BE5\u51FD\u6570\uFF09\u7528await\u4FEE\u9970\u8C03\u7528testAsync\u51FD\u6570</span>
 <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testAwait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testAsync\u8C03\u7528\u524D&#39;</span><span class="token punctuation">)</span>
     <span class="token keyword">await</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testAsync\u8C03\u7528\u540E&#39;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 \u200B
 <span class="token doc-comment comment">/***** \u8F93\u51FA\u5982\u4E0B *****/</span>
 testAsync\u8C03\u7528\u524D
 testAsync
 testAsync\u8C03\u7528\u540E
 \u200B
 <span class="token comment">//\u4F7F\u7528\u4E86await\u5173\u952E\u5B57\u4FEE\u9970\uFF0C\u4F7F\u5F97\u4EE3\u7801\u6309\u7167\u987A\u5E8F\u6267\u884C\uFF0C\u5373\u540C\u6B65\u6267\u884C</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09-await\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#\u4E09-await\u547D\u4EE4" aria-hidden="true">#</a> \u4E09\uFF0C await\u547D\u4EE4</h2><p>1,<code>await</code>\u6709\u7B49\u5F85\u7684\u610F\u601D\uFF0C\u9700<strong>\u7B49\u5F85\u540E\u9762\u7684<code>Promise</code></strong> \u6267\u884C\u7ED3\u675F\u624D\u4F1A\u6267\u884C\u4E0B\u4E00\u6B65\u3002\u8FD9\u91CC\u5F3A\u8C03\u4E00\u4E0B\u540E\u9762\u7684<code>Promise</code>\uFF0C\u662F\u56E0\u4E3A\u5047\u5982\u540E\u9762\u76F4\u63A5\u8DDF\u7684\u662F\u4E00\u4E2A\u8BA1\u65F6\u5668\uFF0C\u90A3\u4E48\u8BA1\u65F6\u5668\u867D\u7136\u662F\u5F02\u6B65\u64CD\u4F5C\uFF0C\u4F46\u662F\u4E0D\u4F1A\u7B49\u8BA1\u65F6\u5668\u56DE\u8C03\u51FD\u6570\u6267\u884C\u624D\u6267\u884C\u4E0B\u4E00\u6B65\u3002</p><p>2,<strong><code>await</code>\u540E\u9762\u53EF\u4EE5\u8DDF<code>Promise</code>\uFF0C\u548C\u5176\u4ED6\u7C7B\u578B\u7684\u6570\u636E</strong></p><p>\uFF081\uFF09\u5F53\u8DDF\u7684\u662F<code>Promise</code>\u65F6\uFF0C\u503C\u662F\u6267\u884C\u6210\u529F\u7684\u8FD4\u56DE\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>   a<span class="token operator">=</span><span class="token number">1</span>
	<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> b<span class="token operator">=</span><span class="token number">2</span>
	<span class="token keyword">return</span> a<span class="token operator">+</span>b  
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token operator">=&gt;</span>v<span class="token punctuation">)</span> v <span class="token operator">=</span><span class="token number">3</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uFF082\uFF09\u5982\u679C\u662F\u5176\u4ED6\u6570\u636E\u65F6\uFF0C\u8FD4\u56DE\u503C\u5C31\u662F\u6570\u636E\u672C\u8EAB\u4F1A\u8FD4\u56DE\u7684\u503C\uFF0C<strong>\u8BE5\u5565\u503C\u662F\u5565\u503C</strong>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">k</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">await</span> k   <span class="token comment">//a\u5C31\u662F\u51FD\u6570k</span>
	<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token number">1</span> <span class="token comment">//b=1</span>
	<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">setTimeOut</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">//c\u662F\u5B9A\u65F6\u5668\u7684id\u6570\u503C</span>
	<span class="token keyword">return</span> a<span class="token operator">+</span>b  
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token operator">=&gt;</span>v<span class="token punctuation">)</span> v <span class="token operator">=</span><span class="token number">3</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E94-\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u4E94-\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u4E94\uFF0C\u9519\u8BEF\u5904\u7406</h2><p>async\u51FD\u6570\u7684\u9519\u8BEF\u5904\u7406\u65B9\u5F0F\u6709\u5F88\u591A\uFF0C\u6B63\u5E38\u6765\u8BF4\uFF0C\u67093\u79CD\u65B9\u5F0F\u3002\u5982\u4E0B <strong>\u65B9\u5F0F\u4E00\uFF1A</strong> \u76F4\u63A5\u8C03\u7528throw new Error</p><p><code>throw new Error</code> \u4E0B\u9762\u7684\u72B6\u6001\u4E0D\u4F1A\u6267\u884C\uFF0C<code>async</code>\u51FD\u6570\u8FD4\u56DE<code>Promise</code>\u7684\u72B6\u6001\u53D8 \u4E3A\u5931\u8D25\uFF0C\u6267\u884C<code>.catch</code>\u65B9\u6CD5.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Error\uFF1A\u51FA\u9519\u4E86</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0Casync\u51FD\u6570f\u6267\u884C\u540E\uFF0Cawait\u540E\u9762\u7684 Promise \u5BF9\u8C61\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u5BF9\u8C61\uFF0C\u5BFC\u81F4catch\u65B9\u6CD5\u7684\u56DE\u8C03\u51FD\u6570\u88AB\u8C03\u7528\uFF0C\u5B83\u7684\u53C2\u6570\u5C31\u662F\u629B\u51FA\u7684\u9519\u8BEF\u5BF9\u8C61\u3002</p><p>\u5F53\u7136\uFF0C\u4E0A\u8FB9\u7684\u5199\u6CD5\u6211\u4EEC\u4E0D\u5EFA\u8BAE\u5728\u9879\u76EE\u4E2D\u4E66\u5199\uFF0C\u6211\u4EEC\u53EF\u4EE5\u628A\u5B83\u5199\u5230try\u2026catch\u2026\u4E2D\u7684\uFF0C\u8FD9\u6837\u5C31\u80FD\u9632\u6B62\u9519\u8BEF\uFF0C\u5E76\u4E14\u5728\u4EE3\u7801\u6B63\u786E\u7684\u60C5\u51B5\u4E5F\u80FD\u6B63\u5E38\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

 <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6709\u591A\u4E2Aawait\u547D\u4EE4\uFF0C\u53EF\u4EE5\u7EDF\u4E00\u653E\u5728try\u2026catch\u7ED3\u6784\u4E2D\u3002</p><p>\u5F53<code>await</code>\u5176\u4E2D\u4E00\u4E2A<code>Promse</code>\u6267\u884C\u5931\u8D25\uFF0C\u90A3\u4E48\u63A5\u4E0B\u6765\u7684<code>await</code>\u4E0D\u4F1A\u7EE7\u7EED\u6267\u884C\uFF0C <code>async</code>\u51FD\u6570\u8FD4\u56DE<code>Promise</code>\u7684\u72B6\u6001\u53D8\u4E3A\u5931\u8D25\uFF0C\u6267\u884C<code>.catch</code>\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> val1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">firstStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> val2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">secondStep</span><span class="token punctuation">(</span>val1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> val3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">thirdStep</span><span class="token punctuation">(</span>val1<span class="token punctuation">,</span> val2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Final: &#39;</span><span class="token punctuation">,</span> val3<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u516D-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u516D-\u603B\u7ED3" aria-hidden="true">#</a> \u516D\uFF0C\u603B\u7ED3</h2><p><img src="https://afatpig.oss-cn-chengdu.aliyuncs.com/blog/image-20220712101429059.png" alt="image-20220712101429059" loading="lazy"></p>`,40);function w(g,f){const a=i("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[k,n("a",r,[d,c(a)]),v,m,b]),y])}var A=t(l,[["render",w],["__file","aboutAsync.html.vue"]]);export{A as default};
